
#line 1 "scanner.rl"
/*  Copyright (C) 2017 CZ.NIC, z.s.p.o. <knot-dns@labs.nic.cz>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <arpa/inet.h>
#include <fcntl.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <libgen.h>
#include <math.h>
#include <netinet/in.h>
#include <sys/socket.h>
#include <sys/mman.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <unistd.h>

#include "zscanner/scanner.h"
#include "zscanner/functions.h"
#include "libknot/descriptor.h"

/*! \brief Shorthand for setting warning data. */
#define WARN(err_code) { s->error.code = err_code; }
/*! \brief Shorthand for setting error data. */
#define ERR(err_code) { WARN(err_code); s->error.fatal = true; }
/*! \brief Shorthand for error reset. */
#define NOERR { WARN(ZS_OK); s->error.fatal = false; }

/*!
 * \brief Writes record type number to r_data.
 *
 * \param type		Type number.
 * \param rdata_tail	Position where to write type number to.
 */
static inline void type_num(const uint16_t type, uint8_t **rdata_tail)
{
	*((uint16_t *)*rdata_tail) = htons(type);
	*rdata_tail += 2;
}

/*!
 * \brief Sets bit to bitmap window.
 *
 * \param type		Type number.
 * \param s		Scanner context.
 */
static inline void window_add_bit(const uint16_t type, zs_scanner_t *s) {
	uint8_t win      = type / 256;
	uint8_t bit_pos  = type % 256;
	uint8_t byte_pos = bit_pos / 8;

	((s->windows[win]).bitmap)[byte_pos] |= 128 >> (bit_pos % 8);

	if ((s->windows[win]).length < byte_pos + 1) {
		(s->windows[win]).length = byte_pos + 1;
	}

	if (s->last_window < win) {
		s->last_window = win;
	}
}

// Include scanner file (in Ragel).

#line 83 "scanner.c"
static const short _zone_scanner_actions[] = {
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 4, 1, 6, 1, 7, 1, 
	9, 1, 11, 1, 12, 1, 13, 1, 
	15, 1, 16, 1, 21, 1, 22, 1, 
	24, 1, 25, 1, 27, 1, 29, 1, 
	31, 1, 32, 1, 41, 1, 42, 1, 
	43, 1, 45, 1, 47, 1, 48, 1, 
	49, 1, 50, 1, 54, 1, 55, 1, 
	57, 1, 59, 1, 61, 1, 62, 1, 
	64, 1, 68, 1, 69, 1, 72, 1, 
	73, 1, 76, 1, 79, 1, 81, 1, 
	82, 1, 83, 1, 84, 1, 85, 1, 
	86, 1, 87, 1, 88, 1, 90, 1, 
	92, 1, 94, 1, 98, 1, 99, 1, 
	103, 1, 104, 1, 108, 1, 109, 1, 
	110, 1, 111, 1, 112, 1, 113, 1, 
	114, 1, 115, 1, 116, 1, 117, 1, 
	118, 1, 119, 1, 120, 1, 121, 1, 
	123, 1, 124, 1, 125, 1, 126, 1, 
	153, 1, 154, 1, 155, 1, 156, 1, 
	157, 1, 158, 1, 159, 1, 160, 1, 
	161, 1, 162, 1, 163, 1, 164, 1, 
	165, 1, 166, 1, 167, 1, 168, 1, 
	169, 1, 170, 1, 171, 1, 172, 1, 
	173, 1, 174, 1, 175, 1, 176, 1, 
	177, 1, 178, 1, 179, 1, 180, 1, 
	181, 1, 182, 1, 183, 1, 184, 1, 
	185, 1, 186, 1, 187, 1, 188, 1, 
	189, 1, 190, 1, 191, 1, 192, 1, 
	193, 1, 194, 1, 195, 1, 196, 1, 
	197, 1, 198, 1, 199, 1, 200, 1, 
	201, 1, 202, 1, 203, 1, 204, 1, 
	205, 1, 206, 1, 207, 1, 208, 1, 
	209, 1, 210, 1, 211, 1, 212, 1, 
	213, 1, 214, 1, 215, 1, 216, 1, 
	217, 1, 218, 1, 219, 1, 220, 1, 
	221, 1, 222, 1, 223, 1, 224, 1, 
	225, 1, 226, 1, 227, 1, 228, 1, 
	229, 1, 230, 1, 231, 1, 232, 1, 
	233, 1, 234, 1, 235, 1, 236, 1, 
	237, 1, 238, 1, 239, 1, 240, 1, 
	242, 1, 244, 1, 245, 1, 246, 1, 
	247, 1, 254, 1, 255, 1, 260, 1, 
	262, 1, 267, 1, 270, 1, 271, 1, 
	272, 1, 273, 1, 275, 1, 276, 1, 
	277, 1, 278, 1, 280, 2, 0, 45, 
	2, 1, 0, 2, 1, 276, 2, 1, 
	324, 2, 2, 4, 2, 2, 6, 2, 
	3, 4, 2, 3, 6, 2, 4, 2, 
	2, 4, 3, 2, 4, 6, 2, 5, 
	1, 2, 6, 1, 2, 6, 2, 2, 
	6, 3, 2, 6, 4, 2, 6, 28, 
	2, 7, 68, 2, 7, 72, 2, 8, 
	9, 2, 10, 1, 2, 11, 12, 2, 
	14, 15, 2, 16, 12, 2, 16, 13, 
	2, 17, 22, 2, 17, 72, 2, 17, 
	79, 2, 18, 0, 2, 18, 6, 2, 
	20, 0, 2, 21, 11, 2, 24, 64, 
	2, 24, 103, 2, 24, 114, 2, 25, 
	0, 2, 25, 1, 2, 25, 2, 2, 
	25, 3, 2, 25, 243, 2, 26, 23, 
	2, 27, 1, 2, 27, 2, 2, 27, 
	3, 2, 27, 6, 2, 27, 88, 2, 
	28, 6, 2, 29, 7, 2, 29, 275, 
	2, 29, 280, 2, 30, 23, 2, 31, 
	0, 2, 31, 1, 2, 31, 2, 2, 
	31, 3, 2, 31, 243, 2, 32, 37, 
	2, 33, 32, 2, 34, 68, 2, 34, 
	260, 2, 34, 275, 2, 34, 280, 2, 
	38, 248, 2, 38, 249, 2, 38, 250, 
	2, 38, 251, 2, 38, 252, 2, 38, 
	253, 2, 41, 0, 2, 41, 1, 2, 
	41, 2, 2, 41, 3, 2, 42, 0, 
	2, 42, 1, 2, 42, 2, 2, 42, 
	3, 2, 43, 0, 2, 43, 1, 2, 
	43, 2, 2, 43, 3, 2, 44, 274, 
	2, 45, 1, 2, 45, 2, 2, 45, 
	3, 2, 52, 6, 2, 52, 43, 2, 
	52, 88, 2, 53, 54, 2, 55, 1, 
	2, 55, 2, 2, 55, 3, 2, 56, 
	275, 2, 57, 0, 2, 58, 59, 2, 
	60, 61, 2, 62, 0, 2, 62, 57, 
	2, 66, 0, 2, 66, 275, 2, 70, 
	21, 2, 74, 64, 2, 75, 6, 2, 
	76, 7, 2, 77, 21, 2, 79, 7, 
	2, 83, 6, 2, 85, 86, 2, 87, 
	1, 2, 87, 2, 2, 87, 3, 2, 
	88, 1, 2, 88, 2, 2, 88, 3, 
	2, 88, 6, 2, 89, 90, 2, 91, 
	275, 2, 92, 93, 2, 94, 95, 2, 
	96, 97, 2, 96, 98, 2, 96, 99, 
	2, 100, 101, 2, 102, 275, 2, 105, 
	275, 2, 106, 0, 2, 122, 275, 2, 
	124, 0, 2, 125, 0, 2, 126, 0, 
	2, 127, 0, 2, 128, 0, 2, 129, 
	0, 2, 130, 0, 2, 131, 0, 2, 
	132, 0, 2, 133, 0, 2, 134, 0, 
	2, 135, 0, 2, 136, 0, 2, 137, 
	0, 2, 138, 0, 2, 139, 0, 2, 
	140, 0, 2, 141, 0, 2, 142, 0, 
	2, 143, 0, 2, 144, 0, 2, 145, 
	0, 2, 146, 0, 2, 147, 0, 2, 
	148, 0, 2, 149, 0, 2, 150, 275, 
	2, 151, 275, 2, 152, 275, 2, 153, 
	1, 2, 153, 2, 2, 153, 3, 2, 
	154, 1, 2, 154, 2, 2, 154, 3, 
	2, 155, 1, 2, 155, 2, 2, 155, 
	3, 2, 156, 1, 2, 156, 2, 2, 
	156, 3, 2, 157, 1, 2, 157, 2, 
	2, 157, 3, 2, 158, 1, 2, 158, 
	2, 2, 158, 3, 2, 159, 1, 2, 
	159, 2, 2, 159, 3, 2, 160, 1, 
	2, 160, 2, 2, 160, 3, 2, 161, 
	1, 2, 161, 2, 2, 161, 3, 2, 
	162, 1, 2, 162, 2, 2, 162, 3, 
	2, 163, 1, 2, 163, 2, 2, 163, 
	3, 2, 164, 1, 2, 164, 2, 2, 
	164, 3, 2, 165, 1, 2, 165, 2, 
	2, 165, 3, 2, 166, 1, 2, 166, 
	2, 2, 166, 3, 2, 167, 1, 2, 
	167, 2, 2, 167, 3, 2, 168, 1, 
	2, 168, 2, 2, 168, 3, 2, 169, 
	1, 2, 169, 2, 2, 169, 3, 2, 
	170, 1, 2, 170, 2, 2, 170, 3, 
	2, 171, 1, 2, 171, 2, 2, 171, 
	3, 2, 172, 1, 2, 172, 2, 2, 
	172, 3, 2, 173, 1, 2, 173, 2, 
	2, 173, 3, 2, 174, 1, 2, 174, 
	2, 2, 174, 3, 2, 175, 1, 2, 
	175, 2, 2, 175, 3, 2, 176, 1, 
	2, 176, 2, 2, 176, 3, 2, 177, 
	1, 2, 177, 2, 2, 177, 3, 2, 
	178, 1, 2, 178, 2, 2, 178, 3, 
	2, 179, 1, 2, 179, 2, 2, 179, 
	3, 2, 180, 1, 2, 180, 2, 2, 
	180, 3, 2, 181, 1, 2, 181, 2, 
	2, 181, 3, 2, 182, 1, 2, 182, 
	2, 2, 182, 3, 2, 183, 1, 2, 
	183, 2, 2, 183, 3, 2, 184, 1, 
	2, 184, 2, 2, 184, 3, 2, 185, 
	1, 2, 185, 2, 2, 185, 3, 2, 
	186, 1, 2, 186, 2, 2, 186, 3, 
	2, 187, 1, 2, 187, 2, 2, 187, 
	3, 2, 188, 1, 2, 188, 2, 2, 
	188, 3, 2, 189, 1, 2, 189, 2, 
	2, 189, 3, 2, 190, 1, 2, 190, 
	2, 2, 190, 3, 2, 191, 1, 2, 
	191, 2, 2, 191, 3, 2, 192, 1, 
	2, 192, 2, 2, 192, 3, 2, 193, 
	1, 2, 193, 2, 2, 193, 3, 2, 
	194, 1, 2, 194, 2, 2, 194, 3, 
	2, 195, 1, 2, 195, 2, 2, 195, 
	3, 2, 196, 1, 2, 196, 2, 2, 
	196, 3, 2, 197, 1, 2, 197, 2, 
	2, 197, 3, 2, 198, 1, 2, 198, 
	2, 2, 198, 3, 2, 199, 1, 2, 
	199, 2, 2, 199, 3, 2, 200, 1, 
	2, 200, 2, 2, 200, 3, 2, 201, 
	1, 2, 201, 2, 2, 201, 3, 2, 
	202, 1, 2, 202, 2, 2, 202, 3, 
	2, 203, 1, 2, 203, 2, 2, 203, 
	3, 2, 204, 1, 2, 204, 2, 2, 
	204, 3, 2, 205, 1, 2, 205, 2, 
	2, 205, 3, 2, 206, 1, 2, 206, 
	2, 2, 206, 3, 2, 207, 1, 2, 
	207, 2, 2, 207, 3, 2, 208, 1, 
	2, 208, 2, 2, 208, 3, 2, 209, 
	1, 2, 209, 2, 2, 209, 3, 2, 
	210, 1, 2, 210, 2, 2, 210, 3, 
	2, 211, 1, 2, 211, 2, 2, 211, 
	3, 2, 212, 1, 2, 212, 2, 2, 
	212, 3, 2, 213, 1, 2, 213, 2, 
	2, 213, 3, 2, 214, 1, 2, 214, 
	2, 2, 214, 3, 2, 215, 1, 2, 
	215, 2, 2, 215, 3, 2, 216, 1, 
	2, 216, 2, 2, 216, 3, 2, 217, 
	1, 2, 217, 2, 2, 217, 3, 2, 
	218, 1, 2, 218, 2, 2, 218, 3, 
	2, 219, 1, 2, 219, 2, 2, 219, 
	3, 2, 220, 1, 2, 220, 2, 2, 
	220, 3, 2, 221, 1, 2, 221, 2, 
	2, 221, 3, 2, 222, 1, 2, 222, 
	2, 2, 222, 3, 2, 223, 1, 2, 
	223, 2, 2, 223, 3, 2, 224, 1, 
	2, 224, 2, 2, 224, 3, 2, 225, 
	1, 2, 225, 2, 2, 225, 3, 2, 
	226, 1, 2, 226, 2, 2, 226, 3, 
	2, 227, 1, 2, 227, 2, 2, 227, 
	3, 2, 228, 1, 2, 228, 2, 2, 
	228, 3, 2, 229, 1, 2, 229, 2, 
	2, 229, 3, 2, 230, 1, 2, 230, 
	2, 2, 230, 3, 2, 231, 1, 2, 
	231, 2, 2, 231, 3, 2, 232, 1, 
	2, 232, 2, 2, 232, 3, 2, 233, 
	1, 2, 233, 2, 2, 233, 3, 2, 
	234, 1, 2, 234, 2, 2, 234, 3, 
	2, 235, 1, 2, 235, 2, 2, 235, 
	3, 2, 236, 1, 2, 236, 2, 2, 
	236, 3, 2, 237, 1, 2, 237, 2, 
	2, 237, 3, 2, 238, 1, 2, 238, 
	2, 2, 238, 3, 2, 239, 1, 2, 
	239, 2, 2, 239, 3, 2, 240, 1, 
	2, 240, 2, 2, 240, 3, 2, 241, 
	0, 2, 244, 1, 2, 244, 2, 2, 
	244, 3, 2, 245, 1, 2, 245, 2, 
	2, 245, 3, 2, 246, 1, 2, 246, 
	2, 2, 246, 3, 2, 247, 1, 2, 
	247, 2, 2, 247, 3, 2, 254, 1, 
	2, 254, 2, 2, 254, 3, 2, 255, 
	1, 2, 255, 2, 2, 255, 3, 2, 
	258, 0, 2, 259, 275, 2, 261, 103, 
	2, 266, 103, 2, 275, 7, 2, 276, 
	1, 2, 276, 6, 2, 279, 276, 2, 
	280, 7, 2, 280, 275, 2, 281, 274, 
	2, 282, 274, 2, 283, 274, 2, 284, 
	274, 2, 285, 274, 2, 286, 274, 2, 
	287, 274, 2, 288, 274, 2, 289, 274, 
	2, 290, 274, 2, 291, 274, 2, 292, 
	274, 2, 293, 274, 2, 294, 274, 2, 
	295, 274, 2, 296, 274, 2, 297, 274, 
	2, 298, 274, 2, 299, 274, 2, 300, 
	274, 2, 301, 274, 2, 302, 274, 2, 
	303, 274, 2, 304, 274, 2, 305, 274, 
	2, 306, 274, 2, 307, 274, 2, 308, 
	274, 2, 309, 274, 2, 310, 274, 2, 
	311, 274, 2, 312, 274, 2, 313, 274, 
	2, 314, 274, 2, 315, 274, 2, 316, 
	274, 2, 317, 274, 2, 318, 274, 2, 
	319, 274, 2, 320, 274, 2, 321, 274, 
	2, 322, 274, 2, 323, 274, 2, 324, 
	1, 3, 0, 45, 1, 3, 0, 45, 
	2, 3, 0, 45, 3, 3, 1, 6, 
	324, 3, 1, 28, 6, 3, 1, 66, 
	0, 3, 1, 106, 0, 3, 1, 241, 
	0, 3, 1, 258, 0, 3, 1, 276, 
	324, 3, 2, 6, 28, 3, 2, 28, 
	6, 3, 3, 6, 28, 3, 3, 28, 
	6, 3, 4, 6, 2, 3, 4, 6, 
	3, 3, 5, 1, 324, 3, 5, 324, 
	1, 3, 6, 2, 4, 3, 6, 2, 
	28, 3, 6, 3, 4, 3, 6, 3, 
	28, 3, 6, 324, 1, 3, 8, 10, 
	1, 3, 13, 19, 0, 3, 18, 6, 
	2, 3, 18, 6, 3, 3, 18, 78, 
	6, 3, 21, 11, 12, 3, 25, 66, 
	0, 3, 27, 1, 88, 3, 27, 2, 
	6, 3, 27, 2, 88, 3, 27, 3, 
	6, 3, 27, 3, 88, 3, 27, 88, 
	6, 3, 27, 279, 276, 3, 27, 281, 
	274, 3, 28, 1, 6, 3, 28, 2, 
	6, 3, 28, 3, 6, 3, 29, 84, 
	7, 3, 29, 275, 7, 3, 29, 280, 
	7, 3, 29, 280, 275, 3, 31, 1, 
	0, 3, 33, 32, 276, 3, 34, 150, 
	275, 3, 34, 152, 275, 3, 34, 280, 
	7, 3, 34, 280, 275, 3, 36, 38, 
	248, 3, 36, 38, 249, 3, 36, 38, 
	250, 3, 36, 38, 251, 3, 36, 38, 
	252, 3, 36, 38, 253, 3, 38, 248, 
	1, 3, 38, 248, 2, 3, 38, 248, 
	3, 3, 38, 249, 1, 3, 38, 249, 
	2, 3, 38, 249, 3, 3, 38, 250, 
	1, 3, 38, 250, 2, 3, 38, 250, 
	3, 3, 38, 251, 1, 3, 38, 251, 
	2, 3, 38, 251, 3, 3, 38, 252, 
	1, 3, 38, 252, 2, 3, 38, 252, 
	3, 3, 38, 253, 1, 3, 38, 253, 
	2, 3, 38, 253, 3, 3, 44, 274, 
	1, 3, 44, 274, 2, 3, 44, 274, 
	3, 3, 44, 274, 276, 3, 46, 34, 
	68, 3, 46, 34, 275, 3, 46, 34, 
	280, 3, 51, 33, 32, 3, 52, 6, 
	2, 3, 52, 6, 3, 3, 52, 43, 
	0, 3, 52, 43, 1, 3, 52, 43, 
	2, 3, 52, 43, 3, 3, 52, 88, 
	1, 3, 52, 88, 2, 3, 52, 88, 
	3, 3, 62, 57, 0, 3, 63, 58, 
	59, 3, 65, 24, 64, 3, 67, 0, 
	1, 3, 70, 21, 11, 3, 71, 0, 
	1, 3, 75, 2, 6, 3, 75, 3, 
	6, 3, 77, 21, 11, 3, 80, 0, 
	1, 3, 83, 6, 1, 3, 83, 26, 
	23, 3, 83, 28, 6, 3, 85, 26, 
	23, 3, 85, 86, 276, 3, 88, 2, 
	6, 3, 88, 3, 6, 3, 91, 102, 
	275, 3, 91, 150, 275, 3, 92, 93, 
	0, 3, 92, 93, 1, 3, 92, 93, 
	2, 3, 92, 93, 3, 3, 94, 95, 
	0, 3, 94, 95, 1, 3, 94, 95, 
	2, 3, 94, 95, 3, 3, 100, 101, 
	0, 3, 100, 101, 1, 3, 100, 101, 
	2, 3, 100, 101, 3, 3, 105, 107, 
	260, 3, 105, 269, 275, 3, 150, 151, 
	275, 3, 196, 241, 0, 3, 197, 241, 
	0, 3, 198, 241, 0, 3, 199, 241, 
	0, 3, 200, 241, 0, 3, 201, 241, 
	0, 3, 202, 241, 0, 3, 203, 241, 
	0, 3, 204, 241, 0, 3, 205, 241, 
	0, 3, 206, 241, 0, 3, 207, 241, 
	0, 3, 208, 241, 0, 3, 209, 241, 
	0, 3, 210, 241, 0, 3, 211, 241, 
	0, 3, 212, 241, 0, 3, 213, 241, 
	0, 3, 214, 241, 0, 3, 215, 241, 
	0, 3, 216, 241, 0, 3, 217, 241, 
	0, 3, 218, 241, 0, 3, 219, 241, 
	0, 3, 220, 241, 0, 3, 221, 241, 
	0, 3, 222, 241, 0, 3, 223, 241, 
	0, 3, 224, 241, 0, 3, 225, 241, 
	0, 3, 226, 241, 0, 3, 227, 241, 
	0, 3, 228, 241, 0, 3, 229, 241, 
	0, 3, 230, 241, 0, 3, 231, 241, 
	0, 3, 232, 241, 0, 3, 233, 241, 
	0, 3, 234, 241, 0, 3, 235, 241, 
	0, 3, 236, 241, 0, 3, 237, 241, 
	0, 3, 238, 241, 0, 3, 239, 241, 
	0, 3, 240, 241, 0, 3, 257, 33, 
	32, 3, 262, 263, 0, 3, 262, 264, 
	0, 3, 265, 105, 275, 3, 267, 268, 
	0, 3, 269, 105, 275, 3, 275, 7, 
	84, 3, 276, 6, 1, 3, 276, 6, 
	28, 3, 276, 26, 23, 3, 276, 28, 
	6, 3, 276, 324, 1, 3, 278, 26, 
	23, 3, 280, 275, 7, 3, 281, 274, 
	1, 3, 281, 274, 2, 3, 281, 274, 
	3, 3, 281, 274, 6, 3, 281, 274, 
	276, 3, 282, 274, 1, 3, 282, 274, 
	2, 3, 282, 274, 3, 3, 282, 274, 
	276, 3, 283, 274, 1, 3, 283, 274, 
	2, 3, 283, 274, 3, 3, 283, 274, 
	276, 3, 284, 274, 1, 3, 284, 274, 
	2, 3, 284, 274, 3, 3, 284, 274, 
	276, 3, 285, 274, 1, 3, 285, 274, 
	2, 3, 285, 274, 3, 3, 285, 274, 
	276, 3, 286, 274, 1, 3, 286, 274, 
	2, 3, 286, 274, 3, 3, 286, 274, 
	276, 3, 287, 274, 1, 3, 287, 274, 
	2, 3, 287, 274, 3, 3, 287, 274, 
	276, 3, 288, 274, 1, 3, 288, 274, 
	2, 3, 288, 274, 3, 3, 288, 274, 
	276, 3, 289, 274, 1, 3, 289, 274, 
	2, 3, 289, 274, 3, 3, 289, 274, 
	276, 3, 290, 274, 1, 3, 290, 274, 
	2, 3, 290, 274, 3, 3, 290, 274, 
	276, 3, 291, 274, 1, 3, 291, 274, 
	2, 3, 291, 274, 3, 3, 291, 274, 
	276, 3, 292, 274, 1, 3, 292, 274, 
	2, 3, 292, 274, 3, 3, 292, 274, 
	276, 3, 293, 274, 1, 3, 293, 274, 
	2, 3, 293, 274, 3, 3, 293, 274, 
	276, 3, 294, 274, 1, 3, 294, 274, 
	2, 3, 294, 274, 3, 3, 294, 274, 
	276, 3, 295, 274, 1, 3, 295, 274, 
	2, 3, 295, 274, 3, 3, 295, 274, 
	276, 3, 296, 274, 1, 3, 296, 274, 
	2, 3, 296, 274, 3, 3, 296, 274, 
	276, 3, 297, 274, 1, 3, 297, 274, 
	2, 3, 297, 274, 3, 3, 297, 274, 
	276, 3, 298, 274, 1, 3, 298, 274, 
	2, 3, 298, 274, 3, 3, 298, 274, 
	276, 3, 299, 274, 1, 3, 299, 274, 
	2, 3, 299, 274, 3, 3, 299, 274, 
	276, 3, 300, 274, 1, 3, 300, 274, 
	2, 3, 300, 274, 3, 3, 300, 274, 
	276, 3, 301, 274, 1, 3, 301, 274, 
	2, 3, 301, 274, 3, 3, 301, 274, 
	276, 3, 302, 274, 1, 3, 302, 274, 
	2, 3, 302, 274, 3, 3, 302, 274, 
	276, 3, 303, 274, 1, 3, 303, 274, 
	2, 3, 303, 274, 3, 3, 303, 274, 
	276, 3, 304, 274, 1, 3, 304, 274, 
	2, 3, 304, 274, 3, 3, 304, 274, 
	276, 3, 305, 274, 1, 3, 305, 274, 
	2, 3, 305, 274, 3, 3, 305, 274, 
	276, 3, 306, 274, 1, 3, 306, 274, 
	2, 3, 306, 274, 3, 3, 306, 274, 
	276, 3, 307, 274, 1, 3, 307, 274, 
	2, 3, 307, 274, 3, 3, 307, 274, 
	276, 3, 308, 274, 1, 3, 308, 274, 
	2, 3, 308, 274, 3, 3, 308, 274, 
	276, 3, 309, 274, 1, 3, 309, 274, 
	2, 3, 309, 274, 3, 3, 309, 274, 
	276, 3, 310, 274, 1, 3, 310, 274, 
	2, 3, 310, 274, 3, 3, 310, 274, 
	276, 3, 311, 274, 1, 3, 311, 274, 
	2, 3, 311, 274, 3, 3, 311, 274, 
	276, 3, 312, 274, 1, 3, 312, 274, 
	2, 3, 312, 274, 3, 3, 312, 274, 
	276, 3, 313, 274, 1, 3, 313, 274, 
	2, 3, 313, 274, 3, 3, 313, 274, 
	276, 3, 314, 274, 1, 3, 314, 274, 
	2, 3, 314, 274, 3, 3, 314, 274, 
	276, 3, 315, 274, 1, 3, 315, 274, 
	2, 3, 315, 274, 3, 3, 315, 274, 
	276, 3, 316, 274, 1, 3, 316, 274, 
	2, 3, 316, 274, 3, 3, 316, 274, 
	276, 3, 317, 274, 1, 3, 317, 274, 
	2, 3, 317, 274, 3, 3, 317, 274, 
	276, 3, 318, 274, 1, 3, 318, 274, 
	2, 3, 318, 274, 3, 3, 318, 274, 
	276, 3, 319, 274, 1, 3, 319, 274, 
	2, 3, 319, 274, 3, 3, 319, 274, 
	276, 3, 320, 274, 1, 3, 320, 274, 
	2, 3, 320, 274, 3, 3, 320, 274, 
	276, 3, 321, 274, 1, 3, 321, 274, 
	2, 3, 321, 274, 3, 3, 321, 274, 
	276, 3, 322, 274, 1, 3, 322, 274, 
	2, 3, 322, 274, 3, 3, 322, 274, 
	276, 3, 323, 274, 1, 3, 323, 274, 
	2, 3, 323, 274, 3, 3, 323, 274, 
	276, 3, 324, 1, 5, 4, 1, 6, 
	324, 28, 4, 1, 276, 28, 6, 4, 
	5, 1, 6, 324, 4, 5, 1, 80, 
	0, 4, 5, 67, 0, 1, 4, 5, 
	71, 0, 1, 4, 5, 80, 0, 1, 
	4, 6, 5, 324, 1, 4, 6, 67, 
	0, 1, 4, 6, 324, 1, 5, 4, 
	6, 324, 1, 28, 4, 16, 13, 19, 
	0, 4, 18, 78, 6, 2, 4, 18, 
	78, 6, 3, 4, 25, 1, 66, 0, 
	4, 27, 1, 6, 324, 4, 27, 1, 
	279, 276, 4, 27, 1, 281, 274, 4, 
	27, 2, 88, 6, 4, 27, 2, 279, 
	276, 4, 27, 2, 281, 274, 4, 27, 
	3, 88, 6, 4, 27, 3, 279, 276, 
	4, 27, 3, 281, 274, 4, 27, 281, 
	274, 6, 4, 27, 281, 274, 276, 4, 
	29, 34, 280, 7, 4, 29, 46, 34, 
	280, 4, 29, 280, 275, 7, 4, 33, 
	32, 26, 23, 4, 34, 280, 275, 7, 
	4, 36, 33, 32, 37, 4, 36, 38, 
	248, 1, 4, 36, 38, 248, 2, 4, 
	36, 38, 248, 3, 4, 36, 38, 249, 
	1, 4, 36, 38, 249, 2, 4, 36, 
	38, 249, 3, 4, 36, 38, 250, 1, 
	4, 36, 38, 250, 2, 4, 36, 38, 
	250, 3, 4, 36, 38, 251, 1, 4, 
	36, 38, 251, 2, 4, 36, 38, 251, 
	3, 4, 36, 38, 252, 1, 4, 36, 
	38, 252, 2, 4, 36, 38, 252, 3, 
	4, 36, 38, 253, 1, 4, 36, 38, 
	253, 2, 4, 36, 38, 253, 3, 4, 
	38, 250, 258, 0, 4, 38, 251, 258, 
	0, 4, 38, 252, 258, 0, 4, 38, 
	253, 258, 0, 4, 39, 35, 33, 32, 
	4, 40, 35, 33, 32, 4, 44, 274, 
	1, 276, 4, 46, 34, 7, 68, 4, 
	52, 51, 33, 32, 4, 70, 21, 11, 
	12, 4, 77, 21, 11, 12, 4, 83, 
	28, 1, 6, 4, 83, 28, 2, 6, 
	4, 83, 28, 3, 6, 4, 85, 86, 
	26, 23, 4, 88, 1, 6, 324, 4, 
	91, 150, 151, 275, 4, 92, 93, 1, 
	0, 4, 94, 95, 1, 0, 4, 100, 
	101, 1, 0, 4, 196, 1, 241, 0, 
	4, 197, 1, 241, 0, 4, 198, 1, 
	241, 0, 4, 199, 1, 241, 0, 4, 
	200, 1, 241, 0, 4, 201, 1, 241, 
	0, 4, 202, 1, 241, 0, 4, 203, 
	1, 241, 0, 4, 204, 1, 241, 0, 
	4, 205, 1, 241, 0, 4, 206, 1, 
	241, 0, 4, 207, 1, 241, 0, 4, 
	208, 1, 241, 0, 4, 209, 1, 241, 
	0, 4, 210, 1, 241, 0, 4, 211, 
	1, 241, 0, 4, 212, 1, 241, 0, 
	4, 213, 1, 241, 0, 4, 214, 1, 
	241, 0, 4, 215, 1, 241, 0, 4, 
	216, 1, 241, 0, 4, 217, 1, 241, 
	0, 4, 218, 1, 241, 0, 4, 219, 
	1, 241, 0, 4, 220, 1, 241, 0, 
	4, 221, 1, 241, 0, 4, 222, 1, 
	241, 0, 4, 223, 1, 241, 0, 4, 
	224, 1, 241, 0, 4, 225, 1, 241, 
	0, 4, 226, 1, 241, 0, 4, 227, 
	1, 241, 0, 4, 228, 1, 241, 0, 
	4, 229, 1, 241, 0, 4, 230, 1, 
	241, 0, 4, 231, 1, 241, 0, 4, 
	232, 1, 241, 0, 4, 233, 1, 241, 
	0, 4, 234, 1, 241, 0, 4, 235, 
	1, 241, 0, 4, 236, 1, 241, 0, 
	4, 237, 1, 241, 0, 4, 238, 1, 
	241, 0, 4, 239, 1, 241, 0, 4, 
	240, 1, 241, 0, 4, 276, 6, 324, 
	1, 4, 281, 274, 1, 276, 4, 281, 
	274, 2, 6, 4, 281, 274, 3, 6, 
	4, 281, 274, 276, 6, 4, 282, 274, 
	1, 276, 4, 283, 274, 1, 276, 4, 
	284, 274, 1, 276, 4, 285, 274, 1, 
	276, 4, 286, 274, 1, 276, 4, 287, 
	274, 1, 276, 4, 288, 274, 1, 276, 
	4, 289, 274, 1, 276, 4, 290, 274, 
	1, 276, 4, 291, 274, 1, 276, 4, 
	292, 274, 1, 276, 4, 293, 274, 1, 
	276, 4, 294, 274, 1, 276, 4, 295, 
	274, 1, 276, 4, 296, 274, 1, 276, 
	4, 297, 274, 1, 276, 4, 298, 274, 
	1, 276, 4, 299, 274, 1, 276, 4, 
	300, 274, 1, 276, 4, 301, 274, 1, 
	276, 4, 302, 274, 1, 276, 4, 303, 
	274, 1, 276, 4, 304, 274, 1, 276, 
	4, 305, 274, 1, 276, 4, 306, 274, 
	1, 276, 4, 307, 274, 1, 276, 4, 
	308, 274, 1, 276, 4, 309, 274, 1, 
	276, 4, 310, 274, 1, 276, 4, 311, 
	274, 1, 276, 4, 312, 274, 1, 276, 
	4, 313, 274, 1, 276, 4, 314, 274, 
	1, 276, 4, 315, 274, 1, 276, 4, 
	316, 274, 1, 276, 4, 317, 274, 1, 
	276, 4, 318, 274, 1, 276, 4, 319, 
	274, 1, 276, 4, 320, 274, 1, 276, 
	4, 321, 274, 1, 276, 4, 322, 274, 
	1, 276, 4, 323, 274, 1, 276, 5, 
	18, 6, 71, 0, 1, 5, 27, 1, 
	88, 6, 324, 5, 27, 1, 281, 274, 
	276, 5, 27, 2, 281, 274, 6, 5, 
	27, 3, 281, 274, 6, 5, 27, 281, 
	274, 276, 6, 5, 29, 34, 280, 275, 
	7, 5, 33, 32, 276, 26, 23, 5, 
	36, 38, 250, 258, 0, 5, 36, 38, 
	251, 258, 0, 5, 36, 38, 252, 258, 
	0, 5, 36, 38, 253, 258, 0, 5, 
	38, 250, 1, 258, 0, 5, 38, 251, 
	1, 258, 0, 5, 38, 252, 1, 258, 
	0, 5, 38, 253, 1, 258, 0, 5, 
	46, 34, 280, 275, 7, 5, 52, 6, 
	67, 0, 1, 5, 75, 6, 80, 0, 
	1, 5, 85, 86, 276, 26, 23, 5, 
	256, 39, 35, 33, 32, 5, 281, 274, 
	1, 6, 324, 6, 18, 78, 6, 80, 
	0, 1, 6, 27, 1, 281, 274, 6, 
	324, 6, 29, 46, 34, 280, 275, 7, 
	6, 36, 38, 250, 1, 258, 0, 6, 
	36, 38, 251, 1, 258, 0, 6, 36, 
	38, 252, 1, 258, 0, 6, 36, 38, 
	253, 1, 258, 0, 6, 281, 274, 1, 
	276, 6, 324, 6, 281, 274, 276, 6, 
	324, 1, 7, 27, 1, 281, 274, 276, 
	6, 324
};

static const short _zone_scanner_cond_offsets[] = {
	0, 0, 2, 4, 6, 8, 10, 12, 
	14, 14, 14, 17, 19, 21, 24, 26, 
	28, 30, 30, 30, 32, 37, 42, 42, 
	42, 42, 42, 42, 44, 46, 46, 46, 
	48, 48, 48, 48, 50, 50, 50, 50, 
	50, 52, 52, 52, 52, 54, 54, 54, 
	54, 56, 58, 58, 58, 58, 58, 60, 
	60, 62, 62, 62, 62, 62, 64, 64, 
	66, 68, 68, 68, 68, 68, 68, 68, 
	68, 70, 70, 70, 72, 74, 74, 74, 
	76, 76, 78, 80, 80, 82, 84, 84, 
	84, 84, 84, 86, 88, 88, 88, 88, 
	88, 90, 90, 92, 94, 94, 96, 98, 
	98, 98, 98, 98, 100, 100, 100, 102, 
	102, 104, 104, 104, 104, 106, 108, 108, 
	108, 110, 110, 112, 112, 114, 114, 114, 
	114, 116, 116, 116, 116, 118, 118, 120, 
	120, 120, 120, 122, 122, 122, 124, 127, 
	129, 129, 131, 133, 135, 137, 137, 139, 
	142, 142, 142, 142, 142, 142, 142, 142, 
	142, 142, 144, 146, 149, 151, 153, 156, 
	158, 158, 160, 163, 165, 167, 169, 171, 
	173, 176, 178, 180, 182, 184, 186, 188, 
	190, 192, 194, 196, 198, 200, 202, 204, 
	206, 208, 210, 213, 215, 215, 215, 215, 
	215, 215, 215, 215, 215, 215, 217, 219, 
	221, 224, 226, 228, 230, 232, 234, 236, 
	238, 240, 242, 244, 246, 248, 250, 252, 
	254, 256, 258, 260, 265, 270, 275, 280, 
	280, 280, 282, 282, 282, 282, 284, 284, 
	286, 289, 291, 293, 298, 303, 308, 313, 
	316, 318, 323, 328, 330, 332, 334, 336, 
	338, 340, 342, 344, 346, 348, 350, 352, 
	354, 356, 359, 362, 364, 367, 367, 367, 
	367, 367, 367, 367, 367, 367, 367, 367, 
	367, 367, 367, 367, 367, 367, 367, 368, 
	368, 368, 368, 368, 369, 371, 373, 375, 
	377, 377, 379, 379, 381, 384, 386, 388, 
	388, 390, 392, 392, 392, 392, 392, 392, 
	394, 397, 399, 401, 403, 405, 405, 407, 
	409, 409, 409, 409, 409, 409, 411, 414, 
	416, 419, 422, 422, 422, 422, 422, 424, 
	427, 427, 429, 431, 433, 433, 433, 435, 
	438, 438, 438, 440, 440, 440, 440, 440, 
	440, 442, 444, 444, 444, 446, 446, 446, 
	446, 448, 448, 448, 448, 448, 450, 450, 
	450, 450, 452, 452, 452, 452, 454, 456, 
	456, 456, 456, 456, 458, 458, 460, 460, 
	460, 460, 460, 462, 462, 462, 462, 462, 
	462, 462, 462, 464, 464, 464, 466, 468, 
	468, 468, 470, 470, 472, 474, 474, 476, 
	478, 478, 478, 478, 478, 480, 482, 482, 
	482, 482, 482, 484, 484, 486, 488, 488, 
	490, 492, 492, 492, 492, 492, 494, 494, 
	494, 496, 496, 498, 498, 498, 498, 500, 
	502, 502, 502, 504, 504, 506, 506, 508, 
	508, 508, 508, 510, 510, 510, 510, 512, 
	512, 514, 514, 514, 514, 516, 516, 516, 
	518, 518, 518, 518, 520, 520, 522, 524, 
	526, 528, 530, 530, 532, 535, 538, 541, 
	543, 545, 547, 549, 549, 551, 554, 557, 
	559, 562, 562, 562, 562, 562, 562, 562, 
	562, 562, 562, 562, 562, 562, 562, 562, 
	562, 562, 562, 562, 562, 562, 562, 562, 
	562, 562, 562, 562, 562, 562, 562, 562, 
	562, 562, 562, 562, 562, 562, 562, 562, 
	562, 562, 562, 562, 562, 562, 562, 562, 
	562, 562, 562, 562, 562, 562, 562, 562, 
	562, 562, 562, 562, 562, 562, 562, 562, 
	562, 562, 562, 562, 562, 562, 562, 562, 
	562, 562, 562, 562, 562, 562, 562, 562, 
	562, 562, 562, 562, 562, 562, 562, 562, 
	562, 562, 562, 562, 562, 562, 562, 562, 
	562, 562, 562, 562, 562, 562, 562, 562, 
	562, 562, 562, 562, 562, 562, 562, 562, 
	562, 562, 562, 562, 562, 562, 562, 562, 
	562, 562, 562, 562, 562, 562, 562, 562, 
	562, 562, 562, 562, 562, 562, 562, 562, 
	562, 562, 562, 562, 562, 562, 562, 562, 
	562, 562, 562, 562, 562, 562, 562, 562, 
	564, 566, 568, 570, 572, 574, 576, 578, 
	580, 582, 584, 586, 586, 586, 586, 586, 
	589, 591, 591, 593, 596, 598, 598, 600, 
	603, 605, 605, 607, 610, 613, 616, 616, 
	618, 620, 620, 623, 623, 625, 627, 627, 
	630, 630, 632, 634, 634, 637, 637, 639, 
	641, 644, 644, 644, 644, 646, 648, 650, 
	652, 654, 656, 658, 660, 662, 664, 666, 
	668, 670, 672, 674, 676, 676, 678, 680, 
	682, 684, 686, 688, 690, 692, 695, 697, 
	699, 702, 704, 706, 708, 711, 713, 715, 
	717, 720, 722, 724, 726, 729, 731, 734, 
	736, 738, 741, 744, 747, 749, 752, 754, 
	756, 759, 762, 762, 764, 766, 768, 770, 
	772, 774, 774, 777, 780, 783, 783, 785, 
	787, 789, 791, 793, 795, 797, 799, 801, 
	803, 803, 806, 809, 812, 815, 818, 818, 
	820, 822, 824, 826, 828, 830, 832, 835, 
	838, 841, 843, 843, 843, 843, 843, 843, 
	845, 848, 848, 848, 848, 848, 850, 852, 
	854, 856, 858, 860, 860, 862, 865, 868, 
	871, 874, 874, 876, 878, 880, 882, 882, 
	884, 887, 890, 893, 893, 895, 897, 899, 
	901, 903, 905, 911, 922, 924, 927, 933, 
	936, 947, 950, 953, 956, 958, 960, 962, 
	964, 970, 973, 976, 978, 980, 982, 984, 
	990, 993, 996, 998, 1000, 1002, 1004, 1010, 
	1013, 1016, 1019, 1019, 1021, 1023, 1025, 1027, 
	1029, 1031, 1033, 1035, 1037, 1039, 1041, 1043, 
	1045, 1047, 1049, 1051, 1053, 1056, 1059, 1062, 
	1065, 1068, 1071, 1074, 1077, 1077, 1077, 1079, 
	1079, 1079, 1079, 1081, 1081, 1083, 1083, 1083, 
	1085, 1085, 1085, 1085, 1085, 1085, 1087, 1089, 
	1089, 1089, 1091, 1091, 1091, 1091, 1093, 1093, 
	1093, 1093, 1093, 1095, 1095, 1095, 1095, 1097, 
	1097, 1097, 1097, 1099, 1101, 1101, 1101, 1101, 
	1101, 1103, 1103, 1105, 1105, 1105, 1105, 1105, 
	1107, 1107, 1107, 1107, 1107, 1107, 1107, 1107, 
	1109, 1109, 1109, 1111, 1113, 1113, 1113, 1115, 
	1115, 1117, 1119, 1119, 1121, 1123, 1123, 1123, 
	1123, 1123, 1125, 1127, 1127, 1127, 1127, 1127, 
	1129, 1129, 1131, 1133, 1133, 1135, 1137, 1137, 
	1137, 1137, 1137, 1139, 1139, 1139, 1141, 1141, 
	1143, 1143, 1143, 1143, 1145, 1147, 1147, 1147, 
	1149, 1149, 1151, 1151, 1153, 1153, 1153, 1153, 
	1155, 1155, 1155, 1155, 1157, 1157, 1159, 1159, 
	1159, 1159, 1161, 1161, 1161, 1163, 1163, 1163, 
	1163, 1163, 1165, 1167, 1169, 1171, 1173, 1175, 
	1177, 1180, 1183, 1186, 1186, 1188, 1188, 1190, 
	1192, 1194, 1196, 1198, 1200, 1202, 1204, 1204, 
	1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204, 
	1204, 1204, 1204, 1204, 1204, 1207, 1207, 1209, 
	1212, 1215, 1218, 1218, 1220, 1222, 1224, 1226, 
	1228, 1230, 1230, 1230, 1230, 1233, 1236, 1239, 
	1239, 1241, 1243, 1245, 1247, 1249, 1251, 1251, 
	1253, 1256, 1259, 1262, 1265, 1265, 1267, 1269, 
	1269, 1272, 1272, 1274, 1276, 1276, 1276, 1276, 
	1276, 1276, 1276, 1276, 1276, 1276, 1279, 1279, 
	1279, 1279, 1279, 1279, 1279, 1279, 1279, 1279, 
	1279, 1279, 1279, 1279, 1281, 1283, 1285, 1287, 
	1287, 1290, 1293, 1293, 1295, 1297, 1299, 1301, 
	1301, 1304, 1307, 1307, 1309, 1311, 1313, 1315, 
	1315, 1318, 1321, 1323, 1325, 1327, 1329, 1331, 
	1333, 1335, 1337, 1339, 1341, 1341, 1341, 1341, 
	1341, 1341, 1341, 1341, 1343, 1343, 1345, 1348, 
	1348, 1350, 1353, 1353, 1355, 1358, 1360, 1360, 
	1362, 1365, 1368, 1368, 1368, 1368, 1368, 1368, 
	1368, 1368, 1368, 1368, 1370, 1373, 1373, 1373, 
	1375, 1378, 1380, 1383, 1385, 1388, 1390, 1393, 
	1393, 1393, 1393, 1393, 1395, 1398, 1398, 1400, 
	1403, 1403, 1405, 1408, 1408, 1414, 1417, 1428, 
	1431, 1442, 1445, 1445, 1445, 1445, 1445, 1445, 
	1445, 1445, 1447, 1450, 1450, 1450, 1450, 1450, 
	1450, 1450
};

static const char _zone_scanner_cond_lengths[] = {
	0, 2, 2, 2, 2, 2, 2, 2, 
	0, 0, 3, 2, 2, 3, 2, 2, 
	2, 0, 0, 2, 5, 5, 0, 0, 
	0, 0, 0, 2, 2, 0, 0, 2, 
	0, 0, 0, 2, 0, 0, 0, 0, 
	2, 0, 0, 0, 2, 0, 0, 0, 
	2, 2, 0, 0, 0, 0, 2, 0, 
	2, 0, 0, 0, 0, 2, 0, 2, 
	2, 0, 0, 0, 0, 0, 0, 0, 
	2, 0, 0, 2, 2, 0, 0, 2, 
	0, 2, 2, 0, 2, 2, 0, 0, 
	0, 0, 2, 2, 0, 0, 0, 0, 
	2, 0, 2, 2, 0, 2, 2, 0, 
	0, 0, 0, 2, 0, 0, 2, 0, 
	2, 0, 0, 0, 2, 2, 0, 0, 
	2, 0, 2, 0, 2, 0, 0, 0, 
	2, 0, 0, 0, 2, 0, 2, 0, 
	0, 0, 2, 0, 0, 2, 3, 2, 
	0, 2, 2, 2, 2, 0, 2, 3, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 2, 2, 3, 2, 2, 3, 2, 
	0, 2, 3, 2, 2, 2, 2, 2, 
	3, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 3, 2, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 2, 2, 2, 
	3, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 5, 5, 5, 5, 0, 
	0, 2, 0, 0, 0, 2, 0, 2, 
	3, 2, 2, 5, 5, 5, 5, 3, 
	2, 5, 5, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 3, 3, 2, 3, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 0, 
	0, 0, 0, 1, 2, 2, 2, 2, 
	0, 2, 0, 2, 3, 2, 2, 0, 
	2, 2, 0, 0, 0, 0, 0, 2, 
	3, 2, 2, 2, 2, 0, 2, 2, 
	0, 0, 0, 0, 0, 2, 3, 2, 
	3, 3, 0, 0, 0, 0, 2, 3, 
	0, 2, 2, 2, 0, 0, 2, 3, 
	0, 0, 2, 0, 0, 0, 0, 0, 
	2, 2, 0, 0, 2, 0, 0, 0, 
	2, 0, 0, 0, 0, 2, 0, 0, 
	0, 2, 0, 0, 0, 2, 2, 0, 
	0, 0, 0, 2, 0, 2, 0, 0, 
	0, 0, 2, 0, 0, 0, 0, 0, 
	0, 0, 2, 0, 0, 2, 2, 0, 
	0, 2, 0, 2, 2, 0, 2, 2, 
	0, 0, 0, 0, 2, 2, 0, 0, 
	0, 0, 2, 0, 2, 2, 0, 2, 
	2, 0, 0, 0, 0, 2, 0, 0, 
	2, 0, 2, 0, 0, 0, 2, 2, 
	0, 0, 2, 0, 2, 0, 2, 0, 
	0, 0, 2, 0, 0, 0, 2, 0, 
	2, 0, 0, 0, 2, 0, 0, 2, 
	0, 0, 0, 2, 0, 2, 2, 2, 
	2, 2, 0, 2, 3, 3, 3, 2, 
	2, 2, 2, 0, 2, 3, 3, 2, 
	3, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 0, 0, 0, 0, 3, 
	2, 0, 2, 3, 2, 0, 2, 3, 
	2, 0, 2, 3, 3, 3, 0, 2, 
	2, 0, 3, 0, 2, 2, 0, 3, 
	0, 2, 2, 0, 3, 0, 2, 2, 
	3, 0, 0, 0, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 0, 2, 2, 2, 
	2, 2, 2, 2, 2, 3, 2, 2, 
	3, 2, 2, 2, 3, 2, 2, 2, 
	3, 2, 2, 2, 3, 2, 3, 2, 
	2, 3, 3, 3, 2, 3, 2, 2, 
	3, 3, 0, 2, 2, 2, 2, 2, 
	2, 0, 3, 3, 3, 0, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	0, 3, 3, 3, 3, 3, 0, 2, 
	2, 2, 2, 2, 2, 2, 3, 3, 
	3, 2, 0, 0, 0, 0, 0, 2, 
	3, 0, 0, 0, 0, 2, 2, 2, 
	2, 2, 2, 0, 2, 3, 3, 3, 
	3, 0, 2, 2, 2, 2, 0, 2, 
	3, 3, 3, 0, 2, 2, 2, 2, 
	2, 2, 6, 11, 2, 3, 6, 3, 
	11, 3, 3, 3, 2, 2, 2, 2, 
	6, 3, 3, 2, 2, 2, 2, 6, 
	3, 3, 2, 2, 2, 2, 6, 3, 
	3, 3, 0, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 3, 3, 3, 3, 
	3, 3, 3, 3, 0, 0, 2, 0, 
	0, 0, 2, 0, 2, 0, 0, 2, 
	0, 0, 0, 0, 0, 2, 2, 0, 
	0, 2, 0, 0, 0, 2, 0, 0, 
	0, 0, 2, 0, 0, 0, 2, 0, 
	0, 0, 2, 2, 0, 0, 0, 0, 
	2, 0, 2, 0, 0, 0, 0, 2, 
	0, 0, 0, 0, 0, 0, 0, 2, 
	0, 0, 2, 2, 0, 0, 2, 0, 
	2, 2, 0, 2, 2, 0, 0, 0, 
	0, 2, 2, 0, 0, 0, 0, 2, 
	0, 2, 2, 0, 2, 2, 0, 0, 
	0, 0, 2, 0, 0, 2, 0, 2, 
	0, 0, 0, 2, 2, 0, 0, 2, 
	0, 2, 0, 2, 0, 0, 0, 2, 
	0, 0, 0, 2, 0, 2, 0, 0, 
	0, 2, 0, 0, 2, 0, 0, 0, 
	0, 2, 2, 2, 2, 2, 2, 2, 
	3, 3, 3, 0, 2, 0, 2, 2, 
	2, 2, 2, 2, 2, 2, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 3, 0, 2, 3, 
	3, 3, 0, 2, 2, 2, 2, 2, 
	2, 0, 0, 0, 3, 3, 3, 0, 
	2, 2, 2, 2, 2, 2, 0, 2, 
	3, 3, 3, 3, 0, 2, 2, 0, 
	3, 0, 2, 2, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 3, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 2, 2, 2, 2, 0, 
	3, 3, 0, 2, 2, 2, 2, 0, 
	3, 3, 0, 2, 2, 2, 2, 0, 
	3, 3, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 0, 0, 0, 0, 
	0, 0, 0, 2, 0, 2, 3, 0, 
	2, 3, 0, 2, 3, 2, 0, 2, 
	3, 3, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 2, 3, 0, 0, 2, 
	3, 2, 3, 2, 3, 2, 3, 0, 
	0, 0, 0, 2, 3, 0, 2, 3, 
	0, 2, 3, 0, 6, 3, 11, 3, 
	11, 3, 0, 0, 0, 0, 0, 0, 
	0, 2, 3, 0, 0, 0, 0, 0, 
	0, 0
};

static const short _zone_scanner_cond_keys[] = {
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, -128, 9, 10, 10, 
	11, 127, 10, 10, 59, 59, 10, 10, 
	59, 59, -128, 9, 10, 10, 11, 127, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	-128, 9, 10, 10, 11, 58, 59, 59, 
	60, 127, -128, 9, 10, 10, 11, 58, 
	59, 59, 60, 127, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	-128, 9, 10, 10, 11, 127, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, -128, 9, 
	10, 10, 11, 127, 10, 10, 59, 59, 
	10, 10, 59, 59, -128, 9, 10, 10, 
	11, 127, 10, 10, 59, 59, 10, 10, 
	59, 59, -128, 9, 10, 10, 11, 127, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	-128, 9, 10, 10, 11, 127, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, -128, 9, 10, 10, 11, 127, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, -128, 9, 10, 10, 
	11, 127, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, -128, 9, 10, 10, 11, 127, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	-128, 9, 10, 10, 11, 58, 59, 59, 
	60, 127, -128, 9, 10, 10, 11, 58, 
	59, 59, 60, 127, -128, 9, 10, 10, 
	11, 58, 59, 59, 60, 127, -128, 9, 
	10, 10, 11, 58, 59, 59, 60, 127, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, -128, 9, 10, 10, 
	11, 127, 10, 10, 59, 59, 10, 10, 
	59, 59, -128, 9, 10, 10, 11, 58, 
	59, 59, 60, 127, -128, 9, 10, 10, 
	11, 58, 59, 59, 60, 127, -128, 9, 
	10, 10, 11, 58, 59, 59, 60, 127, 
	-128, 9, 10, 10, 11, 58, 59, 59, 
	60, 127, -128, 9, 10, 10, 11, 127, 
	10, 10, 59, 59, -128, 9, 10, 10, 
	11, 58, 59, 59, 60, 127, -128, 9, 
	10, 10, 11, 58, 59, 59, 60, 127, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	-128, 9, 10, 10, 11, 127, -128, 9, 
	10, 10, 11, 127, 10, 10, 59, 59, 
	-128, 9, 10, 10, 11, 127, 10, 10, 
	10, 10, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, -128, 9, 10, 10, 11, 127, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, -128, 9, 10, 10, 
	11, 127, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, -128, 9, 
	10, 10, 11, 127, 10, 10, 59, 59, 
	-128, 9, 10, 10, 11, 127, -128, 9, 
	10, 10, 11, 127, 10, 10, 59, 59, 
	-128, 9, 10, 10, 11, 127, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, -128, 9, 
	10, 10, 11, 127, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	-128, 9, 10, 10, 11, 127, -128, 9, 
	10, 10, 11, 127, -128, 9, 10, 10, 
	11, 127, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, -128, 9, 
	10, 10, 11, 127, -128, 9, 10, 10, 
	11, 127, 10, 10, 59, 59, -128, 9, 
	10, 10, 11, 127, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, -128, 9, 10, 10, 
	11, 127, 10, 10, 59, 59, 10, 10, 
	59, 59, -128, 9, 10, 10, 11, 127, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	-128, 9, 10, 10, 11, 127, 10, 10, 
	59, 59, 10, 10, 59, 59, -128, 9, 
	10, 10, 11, 127, -128, 9, 10, 10, 
	11, 127, -128, 9, 10, 10, 11, 127, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	-128, 9, 10, 10, 11, 127, 10, 10, 
	59, 59, 10, 10, 59, 59, -128, 9, 
	10, 10, 11, 127, 10, 10, 59, 59, 
	10, 10, 59, 59, -128, 9, 10, 10, 
	11, 127, 10, 10, 59, 59, 10, 10, 
	59, 59, -128, 9, 10, 10, 11, 127, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	-128, 9, 10, 10, 11, 127, 10, 10, 
	59, 59, 10, 10, 59, 59, -128, 9, 
	10, 10, 11, 127, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	-128, 9, 10, 10, 11, 127, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, -128, 9, 10, 10, 11, 127, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, -128, 9, 10, 10, 
	11, 127, 10, 10, 59, 59, -128, 9, 
	10, 10, 11, 127, 10, 10, 59, 59, 
	10, 10, 59, 59, -128, 9, 10, 10, 
	11, 127, -128, 9, 10, 10, 11, 127, 
	-128, 9, 10, 10, 11, 127, 10, 10, 
	59, 59, -128, 9, 10, 10, 11, 127, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	-128, 9, 10, 10, 11, 127, -128, 9, 
	10, 10, 11, 127, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, -128, 9, 10, 10, 
	11, 127, -128, 9, 10, 10, 11, 127, 
	-128, 9, 10, 10, 11, 127, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, -128, 9, 
	10, 10, 11, 127, -128, 9, 10, 10, 
	11, 127, -128, 9, 10, 10, 11, 127, 
	-128, 9, 10, 10, 11, 127, -128, 9, 
	10, 10, 11, 127, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	-128, 9, 10, 10, 11, 127, -128, 9, 
	10, 10, 11, 127, -128, 9, 10, 10, 
	11, 127, 10, 10, 59, 59, 10, 10, 
	59, 59, -128, 9, 10, 10, 11, 127, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, -128, 9, 10, 10, 
	11, 127, -128, 9, 10, 10, 11, 127, 
	-128, 9, 10, 10, 11, 127, -128, 9, 
	10, 10, 11, 127, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	-128, 9, 10, 10, 11, 127, -128, 9, 
	10, 10, 11, 127, -128, 9, 10, 10, 
	11, 127, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 9, 9, 10, 10, 32, 32, 
	40, 40, 41, 41, 59, 59, 9, 9, 
	10, 10, 32, 32, 40, 40, 41, 41, 
	43, 43, 47, 47, 48, 57, 59, 59, 
	65, 90, 97, 122, 10, 10, 59, 59, 
	-128, 9, 10, 10, 11, 127, 9, 9, 
	10, 10, 32, 32, 40, 40, 41, 41, 
	59, 59, -128, 9, 10, 10, 11, 127, 
	9, 9, 10, 10, 32, 32, 40, 40, 
	41, 41, 43, 43, 47, 47, 48, 57, 
	59, 59, 65, 90, 97, 122, -128, 9, 
	10, 10, 11, 127, -128, 9, 10, 10, 
	11, 127, -128, 9, 10, 10, 11, 127, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	9, 9, 10, 10, 32, 32, 40, 40, 
	41, 41, 59, 59, -128, 9, 10, 10, 
	11, 127, -128, 9, 10, 10, 11, 127, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	9, 9, 10, 10, 32, 32, 40, 40, 
	41, 41, 59, 59, -128, 9, 10, 10, 
	11, 127, -128, 9, 10, 10, 11, 127, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	9, 9, 10, 10, 32, 32, 40, 40, 
	41, 41, 59, 59, -128, 9, 10, 10, 
	11, 127, -128, 9, 10, 10, 11, 127, 
	-128, 9, 10, 10, 11, 127, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, -128, 9, 10, 10, 11, 127, 
	-128, 9, 10, 10, 11, 127, -128, 9, 
	10, 10, 11, 127, -128, 9, 10, 10, 
	11, 127, -128, 9, 10, 10, 11, 127, 
	-128, 9, 10, 10, 11, 127, -128, 9, 
	10, 10, 11, 127, -128, 9, 10, 10, 
	11, 127, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, -128, 9, 10, 10, 11, 127, 
	-128, 9, 10, 10, 11, 127, -128, 9, 
	10, 10, 11, 127, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	-128, 9, 10, 10, 11, 127, 10, 10, 
	59, 59, -128, 9, 10, 10, 11, 127, 
	-128, 9, 10, 10, 11, 127, -128, 9, 
	10, 10, 11, 127, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	10, 10, 59, 59, -128, 9, 10, 10, 
	11, 127, -128, 9, 10, 10, 11, 127, 
	-128, 9, 10, 10, 11, 127, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, -128, 9, 10, 10, 11, 127, 
	-128, 9, 10, 10, 11, 127, -128, 9, 
	10, 10, 11, 127, -128, 9, 10, 10, 
	11, 127, 10, 10, 59, 59, 10, 10, 
	59, 59, -128, 9, 10, 10, 11, 127, 
	10, 10, 59, 59, 10, 10, 59, 59, 
	-128, 9, 10, 10, 11, 127, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, -128, 9, 
	10, 10, 11, 127, -128, 9, 10, 10, 
	11, 127, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, -128, 9, 10, 10, 11, 127, 
	-128, 9, 10, 10, 11, 127, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, -128, 9, 
	10, 10, 11, 127, -128, 9, 10, 10, 
	11, 127, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, 10, 10, 59, 59, 10, 10, 
	59, 59, -128, 9, 10, 10, 11, 127, 
	10, 10, 59, 59, -128, 9, 10, 10, 
	11, 127, 10, 10, 59, 59, -128, 9, 
	10, 10, 11, 127, 10, 10, 59, 59, 
	10, 10, 59, 59, -128, 9, 10, 10, 
	11, 127, -128, 9, 10, 10, 11, 127, 
	10, 10, 59, 59, -128, 9, 10, 10, 
	11, 127, 10, 10, 59, 59, -128, 9, 
	10, 10, 11, 127, 10, 10, 59, 59, 
	-128, 9, 10, 10, 11, 127, 10, 10, 
	59, 59, -128, 9, 10, 10, 11, 127, 
	10, 10, 59, 59, -128, 9, 10, 10, 
	11, 127, 10, 10, 59, 59, -128, 9, 
	10, 10, 11, 127, 10, 10, 59, 59, 
	-128, 9, 10, 10, 11, 127, 10, 10, 
	59, 59, -128, 9, 10, 10, 11, 127, 
	9, 9, 10, 10, 32, 32, 40, 40, 
	41, 41, 59, 59, -128, 9, 10, 10, 
	11, 127, 9, 9, 10, 10, 32, 32, 
	40, 40, 41, 41, 43, 43, 47, 47, 
	48, 57, 59, 59, 65, 90, 97, 122, 
	-128, 9, 10, 10, 11, 127, 9, 9, 
	10, 10, 32, 32, 40, 40, 41, 41, 
	43, 43, 47, 47, 48, 57, 59, 59, 
	65, 90, 97, 122, -128, 9, 10, 10, 
	11, 127, 10, 10, 59, 59, -128, 9, 
	10, 10, 11, 127, 0
};

static const char _zone_scanner_cond_spaces[] = {
	0, 0, 0, 0, 0, 0, 5, 5, 
	5, 5, 0, 0, 0, 0, 0, 0, 
	0, 5, 5, 5, 5, 0, 0, 0, 
	5, 5, 0, 0, 0, 0, 5, 5, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	0, 0, 0, 0, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 5, 5, 5, 5, 5, 
	5, 5, 5, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 5, 5, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	5, 5, 5, 5, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	5, 5, 5, 5, 5, 5, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 5, 5, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 2, 
	2, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 5, 5, 
	0, 0, 0, 5, 5, 5, 5, 5, 
	5, 5, 5, 0, 0, 0, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 0, 0, 0, 0, 0, 0, 
	0, 0, 5, 5, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 5, 5, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 5, 5, 5, 
	5, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 5, 5, 0, 0, 0, 5, 
	5, 5, 5, 0, 0, 0, 5, 5, 
	5, 5, 5, 5, 0, 0, 0, 5, 
	5, 5, 5, 5, 5, 0, 0, 0, 
	5, 5, 5, 5, 5, 5, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 1, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 5, 5, 5, 5, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 5, 5, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 5, 5, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 8, 11, 8, 8, 8, 11, 3, 
	6, 3, 3, 3, 3, 3, 3, 6, 
	3, 3, 1, 1, 6, 6, 6, 4, 
	9, 4, 4, 4, 9, 7, 7, 7, 
	8, 11, 8, 8, 8, 3, 3, 3, 
	11, 3, 3, 10, 10, 10, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 8, 11, 8, 8, 
	8, 11, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	8, 11, 8, 8, 8, 11, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 8, 11, 8, 8, 
	8, 11, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 1, 1, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 1, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 5, 5, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 5, 5, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 5, 
	5, 5, 5, 5, 5, 0, 0, 5, 
	5, 0, 0, 0, 5, 5, 0, 0, 
	0, 5, 5, 0, 0, 0, 0, 0, 
	5, 5, 0, 0, 0, 0, 0, 0, 
	5, 5, 0, 0, 0, 5, 5, 0, 
	0, 0, 5, 5, 0, 0, 0, 5, 
	5, 0, 0, 0, 5, 5, 0, 0, 
	0, 5, 5, 0, 0, 0, 5, 5, 
	0, 0, 0, 5, 5, 0, 0, 0, 
	4, 9, 4, 4, 4, 9, 7, 7, 
	7, 3, 6, 3, 3, 3, 3, 3, 
	3, 6, 3, 3, 6, 6, 6, 8, 
	11, 8, 8, 8, 3, 3, 3, 11, 
	3, 3, 10, 10, 10, 5, 5, 0, 
	0, 0, 0
};

static const short _zone_scanner_key_offsets[] = {
	0, 0, 40, 58, 94, 110, 127, 135, 
	143, 144, 145, 148, 167, 186, 192, 244, 
	264, 302, 310, 312, 322, 336, 350, 354, 
	356, 358, 360, 362, 372, 382, 384, 386, 
	396, 398, 400, 402, 412, 418, 420, 422, 
	424, 434, 438, 440, 442, 452, 454, 456, 
	458, 468, 478, 480, 482, 484, 485, 495, 
	496, 506, 508, 510, 512, 514, 524, 528, 
	534, 570, 572, 574, 576, 578, 580, 582, 
	584, 594, 598, 600, 610, 620, 628, 629, 
	639, 640, 650, 660, 662, 672, 682, 686, 
	688, 690, 692, 702, 712, 718, 720, 722, 
	724, 734, 736, 746, 758, 760, 771, 783, 
	785, 787, 789, 791, 801, 803, 805, 815, 
	821, 831, 833, 835, 837, 847, 857, 865, 
	867, 877, 879, 889, 891, 901, 903, 905, 
	907, 917, 923, 925, 927, 937, 939, 949, 
	951, 953, 955, 967, 969, 971, 981, 984, 
	1024, 1028, 1034, 1072, 1090, 1098, 1110, 1118, 
	1121, 1122, 1128, 1130, 1132, 1134, 1136, 1138, 
	1140, 1146, 1152, 1190, 1193, 1211, 1249, 1252, 
	1260, 1272, 1280, 1283, 1299, 1349, 1367, 1386, 
	1426, 1432, 1446, 1460, 1512, 1528, 1542, 1552, 
	1562, 1574, 1586, 1602, 1614, 1628, 1638, 1652, 
	1668, 1682, 1692, 1698, 1712, 1714, 1716, 1718, 
	1720, 1722, 1728, 1730, 1732, 1738, 1746, 1766, 
	1806, 1812, 1830, 1882, 1898, 1912, 1922, 1932, 
	1944, 1956, 1972, 1984, 1998, 2008, 2022, 2038, 
	2052, 2062, 2077, 2117, 2131, 2145, 2161, 2175, 
	2177, 2179, 2189, 2191, 2193, 2195, 2205, 2207, 
	2217, 2223, 2237, 2251, 2267, 2283, 2299, 2313, 
	2316, 2368, 2382, 2396, 2410, 2422, 2430, 2438, 
	2448, 2458, 2472, 2482, 2494, 2502, 2514, 2528, 
	2540, 2548, 2554, 2560, 2570, 2576, 2577, 2578, 
	2589, 2605, 2621, 2623, 2625, 2627, 2643, 2649, 
	2655, 2661, 2673, 2679, 2681, 2683, 2695, 2701, 
	2707, 2713, 2715, 2717, 2723, 2729, 2737, 2757, 
	2765, 2766, 2776, 2788, 2798, 2801, 2807, 2823, 
	2833, 2851, 2859, 2860, 2862, 2864, 2866, 2876, 
	2884, 2887, 2893, 2905, 2913, 2931, 2941, 2959, 
	2967, 2968, 2970, 2972, 2974, 2984, 2992, 2998, 
	3014, 3017, 3020, 3027, 3034, 3042, 3050, 3067, 
	3070, 3071, 3081, 3121, 3137, 3139, 3141, 3151, 
	3154, 3162, 3164, 3174, 3178, 3180, 3182, 3184, 
	3186, 3196, 3206, 3208, 3210, 3220, 3222, 3224, 
	3226, 3236, 3242, 3244, 3246, 3248, 3258, 3262, 
	3264, 3266, 3276, 3278, 3280, 3282, 3292, 3302, 
	3304, 3306, 3308, 3309, 3319, 3320, 3330, 3332, 
	3334, 3336, 3338, 3348, 3350, 3352, 3354, 3356, 
	3358, 3360, 3362, 3372, 3376, 3378, 3388, 3398, 
	3406, 3407, 3417, 3418, 3428, 3438, 3440, 3450, 
	3460, 3464, 3466, 3468, 3470, 3480, 3490, 3496, 
	3498, 3500, 3502, 3512, 3514, 3524, 3536, 3538, 
	3549, 3561, 3563, 3565, 3567, 3569, 3579, 3581, 
	3583, 3593, 3599, 3609, 3611, 3613, 3615, 3625, 
	3635, 3643, 3645, 3655, 3657, 3667, 3669, 3679, 
	3681, 3683, 3685, 3695, 3701, 3703, 3705, 3715, 
	3717, 3727, 3729, 3731, 3733, 3745, 3747, 3749, 
	3759, 3761, 3763, 3765, 3775, 3777, 3787, 3793, 
	3801, 3809, 3821, 3827, 3843, 3846, 3849, 3852, 
	3858, 3867, 3877, 3889, 3895, 3911, 3914, 3917, 
	3925, 3928, 3940, 3948, 3952, 3958, 3960, 3967, 
	3969, 3971, 3973, 3975, 3976, 3977, 3979, 3981, 
	3983, 3984, 3990, 3994, 3998, 3999, 4001, 4003, 
	4005, 4007, 4013, 4015, 4017, 4019, 4021, 4022, 
	4023, 4025, 4027, 4029, 4030, 4031, 4032, 4038, 
	4039, 4040, 4042, 4044, 4046, 4047, 4048, 4049, 
	4055, 4057, 4058, 4059, 4060, 4061, 4067, 4068, 
	4069, 4075, 4077, 4079, 4081, 4083, 4085, 4087, 
	4089, 4095, 4097, 4099, 4101, 4103, 4105, 4107, 
	4111, 4113, 4115, 4121, 4123, 4125, 4131, 4133, 
	4135, 4139, 4141, 4142, 4148, 4150, 4152, 4155, 
	4162, 4164, 4166, 4168, 4170, 4171, 4172, 4174, 
	4176, 4178, 4179, 4185, 4186, 4187, 4193, 4194, 
	4195, 4201, 4215, 4223, 4225, 4227, 4229, 4231, 
	4233, 4239, 4245, 4247, 4249, 4251, 4253, 4255, 
	4261, 4265, 4267, 4273, 4275, 4277, 4283, 4285, 
	4287, 4289, 4295, 4297, 4299, 4305, 4309, 4311, 
	4317, 4319, 4321, 4327, 4329, 4331, 4333, 4339, 
	4341, 4343, 4349, 4352, 4361, 4370, 4376, 4385, 
	4391, 4406, 4412, 4420, 4428, 4436, 4454, 4462, 
	4480, 4488, 4506, 4514, 4532, 4540, 4552, 4560, 
	4563, 4571, 4583, 4591, 4594, 4602, 4614, 4622, 
	4625, 4633, 4645, 4653, 4656, 4659, 4662, 4668, 
	4674, 4686, 4692, 4695, 4704, 4710, 4725, 4731, 
	4734, 4736, 4744, 4759, 4765, 4768, 4774, 4784, 
	4800, 4803, 4810, 4823, 4825, 4833, 4843, 4851, 
	4861, 4870, 4878, 4884, 4892, 4900, 4910, 4918, 
	4928, 4937, 4945, 4951, 4960, 4962, 4976, 4988, 
	5002, 5014, 5028, 5040, 5054, 5064, 5067, 5080, 
	5093, 5096, 5109, 5122, 5132, 5135, 5148, 5161, 
	5171, 5174, 5187, 5200, 5210, 5213, 5219, 5222, 
	5230, 5238, 5241, 5244, 5247, 5253, 5256, 5264, 
	5272, 5275, 5278, 5280, 5288, 5296, 5304, 5312, 
	5320, 5335, 5341, 5344, 5347, 5350, 5352, 5360, 
	5368, 5376, 5388, 5394, 5406, 5412, 5424, 5430, 
	5445, 5451, 5454, 5457, 5460, 5463, 5466, 5472, 
	5478, 5486, 5494, 5506, 5512, 5525, 5527, 5530, 
	5533, 5536, 5549, 5551, 5552, 5555, 5558, 5560, 
	5572, 5575, 5576, 5583, 5590, 5592, 5600, 5612, 
	5618, 5626, 5634, 5646, 5652, 5668, 5671, 5674, 
	5677, 5680, 5682, 5690, 5698, 5706, 5718, 5724, 
	5740, 5743, 5746, 5749, 5751, 5759, 5769, 5775, 
	5783, 5791, 5798, 5832, 5845, 5847, 5850, 5864, 
	5867, 5908, 5917, 5920, 5923, 5929, 5937, 5945, 
	5954, 5991, 5994, 5997, 6003, 6011, 6019, 6032, 
	6073, 6076, 6079, 6085, 6093, 6101, 6116, 6150, 
	6153, 6156, 6159, 6189, 6201, 6213, 6219, 6227, 
	6235, 6243, 6251, 6259, 6267, 6275, 6283, 6291, 
	6299, 6314, 6320, 6333, 6335, 6338, 6341, 6344, 
	6347, 6350, 6353, 6356, 6359, 6361, 6363, 6369, 
	6371, 6373, 6375, 6381, 6383, 6389, 6397, 6399, 
	6405, 6409, 6411, 6413, 6415, 6417, 6423, 6429, 
	6431, 6433, 6439, 6441, 6443, 6445, 6451, 6457, 
	6459, 6461, 6463, 6469, 6473, 6475, 6477, 6483, 
	6485, 6487, 6489, 6495, 6501, 6503, 6505, 6507, 
	6508, 6514, 6515, 6521, 6523, 6525, 6527, 6529, 
	6535, 6537, 6539, 6541, 6543, 6545, 6547, 6549, 
	6555, 6559, 6561, 6567, 6573, 6581, 6582, 6588, 
	6589, 6595, 6601, 6603, 6609, 6615, 6619, 6621, 
	6623, 6625, 6631, 6637, 6643, 6645, 6647, 6649, 
	6655, 6657, 6663, 6671, 6673, 6680, 6688, 6690, 
	6692, 6694, 6696, 6702, 6704, 6706, 6712, 6718, 
	6724, 6726, 6728, 6730, 6736, 6742, 6750, 6752, 
	6758, 6760, 6766, 6768, 6774, 6776, 6778, 6780, 
	6786, 6792, 6794, 6796, 6802, 6804, 6810, 6812, 
	6814, 6816, 6824, 6826, 6828, 6834, 6843, 6849, 
	6855, 6857, 6865, 6873, 6881, 6893, 6899, 6912, 
	6914, 6917, 6920, 6923, 6930, 6932, 6934, 6942, 
	6950, 6958, 6966, 6974, 6987, 6993, 7005, 7011, 
	7018, 7024, 7031, 7038, 7044, 7051, 7063, 7069, 
	7070, 7071, 7072, 7073, 7074, 7077, 7083, 7095, 
	7098, 7101, 7104, 7106, 7114, 7122, 7130, 7138, 
	7146, 7159, 7165, 7171, 7183, 7186, 7189, 7192, 
	7194, 7202, 7210, 7218, 7226, 7234, 7246, 7252, 
	7268, 7271, 7274, 7277, 7280, 7282, 7290, 7299, 
	7308, 7311, 7313, 7321, 7333, 7339, 7345, 7351, 
	7352, 7358, 7364, 7370, 7376, 7383, 7386, 7392, 
	7398, 7399, 7405, 7411, 7418, 7424, 7430, 7431, 
	7437, 7443, 7450, 7452, 7460, 7468, 7476, 7488, 
	7494, 7497, 7500, 7502, 7510, 7522, 7528, 7540, 
	7546, 7549, 7552, 7554, 7562, 7574, 7580, 7595, 
	7601, 7604, 7607, 7625, 7658, 7706, 7756, 7774, 
	7824, 7842, 7875, 7940, 8005, 8005, 8005, 8005, 
	8017, 8017, 8017, 8017, 8033, 8033, 8050, 8053, 
	8053, 8093, 8096, 8096, 8112, 8115, 8127, 8127, 
	8143, 8146, 8149, 8149, 8149, 8149, 8149, 8149, 
	8149, 8149, 8149, 8149, 8165, 8168, 8168, 8168, 
	8178, 8181, 8193, 8196, 8208, 8211, 8223, 8226, 
	8226, 8226, 8226, 8226, 8239, 8242, 8242, 8258, 
	8261, 8261, 8277, 8280, 8280, 8294, 8297, 8310, 
	8313, 8354, 8363, 8363, 8363, 8363, 8363, 8363, 
	8363, 8363, 8379, 8382, 8382, 8382, 8382, 8382, 
	8382, 8382
};

static const short _zone_scanner_trans_keys[] = {
	9, 32, 40, 41, 65, 67, 68, 69, 
	72, 73, 75, 76, 77, 78, 80, 82, 
	83, 84, 85, 97, 99, 100, 101, 104, 
	105, 107, 108, 109, 110, 112, 114, 115, 
	116, 117, 778, 827, 1034, 1083, 48, 57, 
	9, 32, 40, 41, 68, 72, 77, 83, 
	87, 100, 104, 109, 115, 119, 1034, 1083, 
	48, 57, 9, 32, 40, 41, 65, 67, 
	68, 69, 72, 73, 75, 76, 77, 78, 
	80, 82, 83, 84, 85, 97, 99, 100, 
	101, 104, 105, 107, 108, 109, 110, 112, 
	114, 115, 116, 117, 1034, 1083, 9, 32, 
	40, 41, 65, 70, 80, 97, 102, 112, 
	2058, 2107, 2314, 2363, 2570, 2619, 9, 32, 
	40, 41, 92, 2058, 2107, 2314, 2363, 2570, 
	2619, -128, 8, 11, 58, 60, 127, 9, 
	32, 40, 41, 778, 827, 1034, 1083, 9, 
	32, 40, 41, 778, 827, 1034, 1083, 10, 
	35, 1034, 896, 1151, 9, 32, 40, 41, 
	92, 1802, 1851, 2058, 2107, 2314, 2363, 2570, 
	2619, -128, 8, 11, 58, 60, 127, 9, 
	32, 40, 41, 92, 1802, 1851, 2058, 2107, 
	2314, 2363, 2570, 2619, -128, 8, 11, 58, 
	60, 127, 778, 1034, 640, 895, 896, 1151, 
	9, 32, 40, 41, 58, 65, 67, 68, 
	69, 72, 73, 75, 76, 77, 78, 80, 
	82, 83, 84, 85, 92, 97, 99, 100, 
	101, 104, 105, 107, 108, 109, 110, 112, 
	114, 115, 116, 117, 1802, 1851, 2058, 2107, 
	2314, 2363, 2570, 2619, -128, 8, 11, 47, 
	48, 57, 60, 127, 9, 32, 40, 41, 
	68, 72, 77, 83, 87, 100, 104, 109, 
	115, 119, 778, 827, 1034, 1083, 48, 57, 
	9, 32, 40, 41, 65, 67, 68, 69, 
	72, 73, 75, 76, 77, 78, 80, 82, 
	83, 84, 85, 97, 99, 100, 101, 104, 
	105, 107, 108, 109, 110, 112, 114, 115, 
	116, 117, 778, 827, 1034, 1083, 65, 68, 
	69, 78, 97, 100, 101, 110, 65, 97, 
	9, 32, 40, 41, 2058, 2107, 2314, 2363, 
	2570, 2619, 777, 778, 800, 808, 809, 827, 
	1033, 1034, 1056, 1064, 1065, 1083, 896, 1151, 
	777, 778, 800, 808, 809, 827, 1033, 1034, 
	1056, 1064, 1065, 1083, 896, 1151, 78, 83, 
	110, 115, 83, 115, 75, 107, 69, 101, 
	89, 121, 9, 32, 40, 41, 2058, 2107, 
	2314, 2363, 2570, 2619, 9, 32, 40, 41, 
	2058, 2107, 2314, 2363, 2570, 2619, 82, 114, 
	84, 116, 9, 32, 40, 41, 2058, 2107, 
	2314, 2363, 2570, 2619, 65, 97, 77, 109, 
	69, 101, 9, 32, 40, 41, 2058, 2107, 
	2314, 2363, 2570, 2619, 72, 78, 83, 104, 
	110, 115, 67, 99, 73, 105, 68, 100, 
	9, 32, 40, 41, 2058, 2107, 2314, 2363, 
	2570, 2619, 65, 83, 97, 115, 77, 109, 
	69, 101, 9, 32, 40, 41, 2058, 2107, 
	2314, 2363, 2570, 2619, 75, 107, 69, 101, 
	89, 121, 9, 32, 40, 41, 2058, 2107, 
	2314, 2363, 2570, 2619, 9, 32, 40, 41, 
	2058, 2107, 2314, 2363, 2570, 2619, 85, 117, 
	73, 105, 52, 54, 56, 9, 32, 40, 
	41, 2058, 2107, 2314, 2363, 2570, 2619, 52, 
	9, 32, 40, 41, 2058, 2107, 2314, 2363, 
	2570, 2619, 73, 105, 78, 110, 70, 102, 
	79, 111, 9, 32, 40, 41, 2058, 2107, 
	2314, 2363, 2570, 2619, 78, 80, 110, 112, 
	9, 32, 40, 41, 1034, 1083, 9, 32, 
	40, 41, 65, 67, 68, 69, 72, 73, 
	75, 76, 77, 78, 80, 82, 83, 84, 
	85, 97, 99, 100, 101, 104, 105, 107, 
	108, 109, 110, 112, 114, 115, 116, 117, 
	1034, 1083, 80, 112, 83, 115, 69, 101, 
	67, 99, 75, 107, 69, 101, 89, 121, 
	9, 32, 40, 41, 2058, 2107, 2314, 2363, 
	2570, 2619, 69, 88, 101, 120, 89, 121, 
	9, 32, 40, 41, 2058, 2107, 2314, 2363, 
	2570, 2619, 9, 32, 40, 41, 2058, 2107, 
	2314, 2363, 2570, 2619, 51, 54, 66, 79, 
	80, 98, 111, 112, 50, 9, 32, 40, 
	41, 2058, 2107, 2314, 2363, 2570, 2619, 52, 
	9, 32, 40, 41, 2058, 2107, 2314, 2363, 
	2570, 2619, 9, 32, 40, 41, 2058, 2107, 
	2314, 2363, 2570, 2619, 67, 99, 9, 32, 
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619, 
	9, 32, 40, 41, 2058, 2107, 2314, 2363, 
	2570, 2619, 73, 88, 105, 120, 78, 110, 
	70, 102, 79, 111, 9, 32, 40, 41, 
	2058, 2107, 2314, 2363, 2570, 2619, 9, 32, 
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619, 
	65, 73, 83, 97, 105, 115, 80, 112, 
	84, 116, 82, 114, 9, 32, 40, 41, 
	2058, 2107, 2314, 2363, 2570, 2619, 68, 100, 
	9, 32, 40, 41, 2058, 2107, 2314, 2363, 
	2570, 2619, 9, 32, 40, 41, 69, 101, 
	2058, 2107, 2314, 2363, 2570, 2619, 67, 99, 
	9, 32, 40, 41, 51, 2058, 2107, 2314, 
	2363, 2570, 2619, 9, 32, 40, 41, 80, 
	112, 2058, 2107, 2314, 2363, 2570, 2619, 65, 
	97, 82, 114, 65, 97, 77, 109, 9, 
	32, 40, 41, 2058, 2107, 2314, 2363, 2570, 
	2619, 84, 116, 82, 114, 9, 32, 40, 
	41, 2058, 2107, 2314, 2363, 2570, 2619, 80, 
	82, 84, 112, 114, 116, 9, 32, 40, 
	41, 2058, 2107, 2314, 2363, 2570, 2619, 83, 
	115, 73, 105, 71, 103, 9, 32, 40, 
	41, 2058, 2107, 2314, 2363, 2570, 2619, 9, 
	32, 40, 41, 2058, 2107, 2314, 2363, 2570, 
	2619, 79, 80, 82, 83, 111, 112, 114, 
	115, 65, 97, 9, 32, 40, 41, 2058, 
	2107, 2314, 2363, 2570, 2619, 70, 102, 9, 
	32, 40, 41, 2058, 2107, 2314, 2363, 2570, 
	2619, 86, 118, 9, 32, 40, 41, 2058, 
	2107, 2314, 2363, 2570, 2619, 72, 104, 70, 
	102, 80, 112, 9, 32, 40, 41, 2058, 
	2107, 2314, 2363, 2570, 2619, 76, 88, 89, 
	108, 120, 121, 83, 115, 65, 97, 9, 
	32, 40, 41, 2058, 2107, 2314, 2363, 2570, 
	2619, 84, 116, 9, 32, 40, 41, 2058, 
	2107, 2314, 2363, 2570, 2619, 80, 112, 69, 
	101, 48, 57, 9, 32, 40, 41, 2058, 
	2107, 2314, 2363, 2570, 2619, 48, 57, 82, 
	114, 73, 105, 9, 32, 40, 41, 2058, 
	2107, 2314, 2363, 2570, 2619, 1034, 896, 1151, 
	9, 32, 40, 41, 65, 67, 68, 69, 
	72, 73, 75, 76, 77, 78, 80, 82, 
	83, 84, 85, 97, 99, 100, 101, 104, 
	105, 107, 108, 109, 110, 112, 114, 115, 
	116, 117, 778, 827, 1034, 1083, 48, 57, 
	78, 80, 110, 112, 9, 32, 40, 41, 
	1034, 1083, 9, 32, 40, 41, 65, 67, 
	68, 69, 72, 73, 75, 76, 77, 78, 
	80, 82, 83, 84, 85, 97, 99, 100, 
	101, 104, 105, 107, 108, 109, 110, 112, 
	114, 115, 116, 117, 1034, 1083, 48, 57, 
	9, 32, 40, 41, 68, 72, 77, 83, 
	87, 100, 104, 109, 115, 119, 1034, 1083, 
	48, 57, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 68, 72, 77, 83, 87, 100, 
	104, 109, 115, 119, 48, 57, 9, 32, 
	40, 41, 1034, 1083, 48, 57, 1034, 896, 
	1151, 10, 73, 79, 84, 105, 111, 116, 
	78, 110, 67, 99, 76, 108, 85, 117, 
	68, 100, 69, 101, 32, 59, 9, 10, 
	40, 41, 9, 32, 40, 41, 1034, 1083, 
	9, 32, 40, 41, 65, 67, 68, 69, 
	72, 73, 75, 76, 77, 78, 80, 82, 
	83, 84, 85, 97, 99, 100, 101, 104, 
	105, 107, 108, 109, 110, 112, 114, 115, 
	116, 117, 1034, 1083, 48, 57, 1034, 896, 
	1151, 9, 32, 40, 41, 68, 72, 77, 
	83, 87, 100, 104, 109, 115, 119, 1034, 
	1083, 48, 57, 9, 32, 40, 41, 65, 
	67, 68, 69, 72, 73, 75, 76, 77, 
	78, 80, 82, 83, 84, 85, 97, 99, 
	100, 101, 104, 105, 107, 108, 109, 110, 
	112, 114, 115, 116, 117, 1034, 1083, 48, 
	57, 1034, 896, 1151, 9, 32, 40, 41, 
	1034, 1083, 48, 57, 68, 72, 77, 83, 
	87, 100, 104, 109, 115, 119, 48, 57, 
	9, 32, 40, 41, 1034, 1083, 48, 57, 
	1034, 896, 1151, 9, 32, 40, 41, 65, 
	70, 80, 97, 102, 112, 2058, 2107, 2314, 
	2363, 2570, 2619, 9, 32, 40, 41, 58, 
	65, 67, 68, 69, 72, 73, 75, 76, 
	77, 78, 80, 82, 83, 84, 85, 92, 
	97, 99, 100, 101, 104, 105, 107, 108, 
	109, 110, 112, 114, 115, 116, 117, 2058, 
	2107, 2314, 2363, 2570, 2619, -128, 8, 11, 
	47, 48, 57, 60, 127, 9, 32, 40, 
	41, 65, 70, 80, 97, 102, 112, 1802, 
	1851, 2058, 2107, 2314, 2363, 2570, 2619, 9, 
	32, 40, 41, 92, 1802, 1851, 2058, 2107, 
	2314, 2363, 2570, 2619, -128, 8, 11, 58, 
	60, 127, 9, 32, 40, 41, 65, 67, 
	68, 69, 72, 73, 75, 76, 77, 78, 
	80, 82, 83, 84, 85, 97, 99, 100, 
	101, 104, 105, 107, 108, 109, 110, 112, 
	114, 115, 116, 117, 778, 827, 1034, 1083, 
	48, 57, 778, 1034, 640, 895, 896, 1151, 
	9, 32, 40, 41, 778, 827, 1034, 1083, 
	-128, 8, 11, 58, 60, 127, 9, 32, 
	40, 41, 778, 827, 1034, 1083, -128, 8, 
	11, 58, 60, 127, 9, 32, 40, 41, 
	58, 65, 67, 68, 69, 72, 73, 75, 
	76, 77, 78, 80, 82, 83, 84, 85, 
	92, 97, 99, 100, 101, 104, 105, 107, 
	108, 109, 110, 112, 114, 115, 116, 117, 
	1802, 1851, 2058, 2107, 2314, 2363, 2570, 2619, 
	-128, 8, 11, 47, 48, 57, 60, 127, 
	9, 32, 40, 41, 65, 68, 69, 78, 
	97, 100, 101, 110, 778, 827, 1034, 1083, 
	9, 32, 40, 41, 72, 78, 83, 104, 
	110, 115, 778, 827, 1034, 1083, 9, 32, 
	40, 41, 85, 117, 778, 827, 1034, 1083, 
	9, 32, 40, 41, 73, 105, 778, 827, 
	1034, 1083, 9, 32, 40, 41, 78, 80, 
	110, 112, 778, 827, 1034, 1083, 9, 32, 
	40, 41, 69, 88, 101, 120, 778, 827, 
	1034, 1083, 9, 32, 40, 41, 51, 54, 
	66, 79, 80, 98, 111, 112, 778, 827, 
	1034, 1083, 9, 32, 40, 41, 73, 88, 
	105, 120, 778, 827, 1034, 1083, 9, 32, 
	40, 41, 65, 73, 83, 97, 105, 115, 
	778, 827, 1034, 1083, 9, 32, 40, 41, 
	84, 116, 778, 827, 1034, 1083, 9, 32, 
	40, 41, 80, 82, 84, 112, 114, 116, 
	778, 827, 1034, 1083, 9, 32, 40, 41, 
	79, 80, 82, 83, 111, 112, 114, 115, 
	778, 827, 1034, 1083, 9, 32, 40, 41, 
	76, 88, 89, 108, 120, 121, 778, 827, 
	1034, 1083, 9, 32, 40, 41, 82, 114, 
	778, 827, 1034, 1083, 778, 1034, 640, 895, 
	896, 1151, 9, 32, 40, 41, 73, 79, 
	84, 105, 111, 116, 778, 827, 1034, 1083, 
	82, 114, 73, 105, 71, 103, 73, 105, 
	78, 110, 32, 59, 9, 10, 40, 41, 
	84, 116, 76, 108, 32, 59, 9, 10, 
	40, 41, 9, 32, 40, 41, 778, 827, 
	1034, 1083, 9, 32, 40, 41, 68, 72, 
	77, 83, 87, 100, 104, 109, 115, 119, 
	778, 827, 1034, 1083, 48, 57, 9, 32, 
	40, 41, 65, 67, 68, 69, 72, 73, 
	75, 76, 77, 78, 80, 82, 83, 84, 
	85, 97, 99, 100, 101, 104, 105, 107, 
	108, 109, 110, 112, 114, 115, 116, 117, 
	778, 827, 1034, 1083, 48, 57, 778, 1034, 
	640, 895, 896, 1151, 9, 32, 40, 41, 
	65, 70, 80, 97, 102, 112, 1802, 1851, 
	2058, 2107, 2314, 2363, 2570, 2619, 9, 32, 
	40, 41, 58, 65, 67, 68, 69, 72, 
	73, 75, 76, 77, 78, 80, 82, 83, 
	84, 85, 92, 97, 99, 100, 101, 104, 
	105, 107, 108, 109, 110, 112, 114, 115, 
	116, 117, 1802, 1851, 2058, 2107, 2314, 2363, 
	2570, 2619, -128, 8, 11, 47, 48, 57, 
	60, 127, 9, 32, 40, 41, 65, 68, 
	69, 78, 97, 100, 101, 110, 778, 827, 
	1034, 1083, 9, 32, 40, 41, 72, 78, 
	83, 104, 110, 115, 778, 827, 1034, 1083, 
	9, 32, 40, 41, 85, 117, 778, 827, 
	1034, 1083, 9, 32, 40, 41, 73, 105, 
	778, 827, 1034, 1083, 9, 32, 40, 41, 
	78, 80, 110, 112, 778, 827, 1034, 1083, 
	9, 32, 40, 41, 69, 88, 101, 120, 
	778, 827, 1034, 1083, 9, 32, 40, 41, 
	51, 54, 66, 79, 80, 98, 111, 112, 
	778, 827, 1034, 1083, 9, 32, 40, 41, 
	73, 88, 105, 120, 778, 827, 1034, 1083, 
	9, 32, 40, 41, 65, 73, 83, 97, 
	105, 115, 778, 827, 1034, 1083, 9, 32, 
	40, 41, 84, 116, 778, 827, 1034, 1083, 
	9, 32, 40, 41, 80, 82, 84, 112, 
	114, 116, 778, 827, 1034, 1083, 9, 32, 
	40, 41, 79, 80, 82, 83, 111, 112, 
	114, 115, 778, 827, 1034, 1083, 9, 32, 
	40, 41, 76, 88, 89, 108, 120, 121, 
	778, 827, 1034, 1083, 9, 32, 40, 41, 
	82, 114, 778, 827, 1034, 1083, 9, 32, 
	35, 40, 41, 778, 827, 1034, 1083, -128, 
	8, 11, 58, 60, 127, 9, 32, 40, 
	41, 65, 67, 68, 69, 72, 73, 75, 
	76, 77, 78, 80, 82, 83, 84, 85, 
	97, 99, 100, 101, 104, 105, 107, 108, 
	109, 110, 112, 114, 115, 116, 117, 778, 
	827, 1034, 1083, 48, 57, 777, 778, 800, 
	808, 809, 827, 1033, 1034, 1056, 1064, 1065, 
	1083, 896, 1151, 777, 778, 800, 808, 809, 
	827, 1033, 1034, 1056, 1064, 1065, 1083, 896, 
	1151, 777, 778, 800, 808, 809, 827, 1033, 
	1034, 1056, 1064, 1065, 1083, 640, 895, 896, 
	1151, 777, 778, 800, 808, 809, 1033, 1034, 
	1056, 1064, 1065, 640, 895, 896, 1151, 65, 
	97, 65, 97, 9, 32, 40, 41, 2058, 
	2107, 2314, 2363, 2570, 2619, 83, 115, 68, 
	100, 66, 98, 9, 32, 40, 41, 2058, 
	2107, 2314, 2363, 2570, 2619, 76, 108, 9, 
	32, 40, 41, 2058, 2107, 2314, 2363, 2570, 
	2619, 778, 1034, 640, 895, 896, 1151, 9, 
	32, 40, 41, 778, 827, 1034, 1083, -128, 
	8, 11, 58, 60, 127, 9, 32, 40, 
	41, 778, 827, 1034, 1083, -128, 8, 11, 
	58, 60, 127, 777, 778, 800, 808, 809, 
	827, 1033, 1034, 1056, 1064, 1065, 1083, 640, 
	895, 896, 1151, 777, 778, 800, 808, 809, 
	827, 1033, 1034, 1056, 1064, 1065, 1083, 640, 
	895, 896, 1151, 777, 778, 800, 808, 809, 
	827, 1033, 1034, 1056, 1064, 1065, 1083, 640, 
	895, 896, 1151, 777, 778, 800, 808, 809, 
	1033, 1034, 1056, 1064, 1065, 640, 895, 896, 
	1151, 1034, 896, 1151, 9, 32, 40, 41, 
	58, 65, 67, 68, 69, 72, 73, 75, 
	76, 77, 78, 80, 82, 83, 84, 85, 
	92, 97, 99, 100, 101, 104, 105, 107, 
	108, 109, 110, 112, 114, 115, 116, 117, 
	1802, 1851, 2058, 2107, 2314, 2363, 2570, 2619, 
	-128, 8, 11, 47, 48, 57, 60, 127, 
	777, 778, 800, 808, 809, 827, 1033, 1034, 
	1056, 1064, 1065, 1083, 896, 1151, 777, 778, 
	800, 808, 809, 827, 1033, 1034, 1056, 1064, 
	1065, 1083, 896, 1151, 9, 32, 40, 41, 
	65, 68, 69, 78, 97, 100, 101, 110, 
	1034, 1083, 9, 32, 40, 41, 72, 78, 
	83, 104, 110, 115, 1034, 1083, 9, 32, 
	40, 41, 85, 117, 1034, 1083, 9, 32, 
	40, 41, 73, 105, 1034, 1083, 9, 32, 
	40, 41, 78, 80, 110, 112, 1034, 1083, 
	9, 32, 40, 41, 69, 88, 101, 120, 
	1034, 1083, 9, 32, 40, 41, 51, 54, 
	66, 79, 80, 98, 111, 112, 1034, 1083, 
	9, 32, 40, 41, 73, 88, 105, 120, 
	1034, 1083, 9, 32, 40, 41, 65, 73, 
	83, 97, 105, 115, 1034, 1083, 9, 32, 
	40, 41, 84, 116, 1034, 1083, 9, 32, 
	40, 41, 80, 82, 84, 112, 114, 116, 
	1034, 1083, 9, 32, 40, 41, 79, 80, 
	82, 83, 111, 112, 114, 115, 1034, 1083, 
	9, 32, 40, 41, 76, 88, 89, 108, 
	120, 121, 1034, 1083, 9, 32, 40, 41, 
	82, 114, 1034, 1083, 778, 1034, 640, 895, 
	896, 1151, 778, 1034, 640, 895, 896, 1151, 
	9, 32, 40, 41, 78, 80, 110, 112, 
	1034, 1083, 778, 1034, 640, 895, 896, 1151, 
	10, 10, 42, 46, 64, 92, 95, 45, 
	57, 65, 90, 97, 122, 32, 42, 46, 
	59, 92, 95, 9, 10, 40, 41, 45, 
	57, 65, 90, 97, 122, 32, 42, 45, 
	59, 92, 95, 9, 10, 40, 41, 47, 
	57, 65, 90, 97, 122, 48, 57, 48, 
	57, 48, 57, 32, 42, 46, 59, 92, 
	95, 9, 10, 40, 41, 45, 57, 65, 
	90, 97, 122, 32, 59, 9, 10, 40, 
	41, 32, 59, 9, 10, 40, 41, 34, 
	92, 33, 58, 60, 126, 32, 33, 59, 
	92, 9, 10, 35, 39, 40, 41, 42, 
	126, 32, 47, 48, 57, 58, 126, 48, 
	57, 48, 57, 32, 33, 59, 92, 9, 
	10, 35, 39, 40, 41, 42, 126, 9, 
	34, 92, 522, 32, 126, 32, 59, 9, 
	10, 40, 41, 32, 47, 48, 57, 58, 
	126, 48, 57, 48, 57, 9, 34, 92, 
	522, 32, 126, 9, 32, 40, 41, 1034, 
	1083, 9, 32, 40, 41, 1034, 1083, 48, 
	57, 9, 32, 40, 41, 68, 72, 77, 
	83, 87, 100, 104, 109, 115, 119, 778, 
	827, 1034, 1083, 48, 57, 9, 32, 40, 
	41, 778, 827, 1034, 1083, 10, 9, 32, 
	40, 41, 778, 827, 1034, 1083, 48, 57, 
	68, 72, 77, 83, 87, 100, 104, 109, 
	115, 119, 48, 57, 9, 32, 40, 41, 
	778, 827, 1034, 1083, 48, 57, 1034, 896, 
	1151, 9, 32, 40, 41, 1034, 1083, 9, 
	32, 40, 41, 42, 46, 92, 95, 1034, 
	1083, 45, 57, 65, 90, 97, 122, 42, 
	46, 92, 95, 45, 57, 65, 90, 97, 
	122, 9, 32, 40, 41, 42, 45, 92, 
	95, 778, 827, 1034, 1083, 47, 57, 65, 
	90, 97, 122, 9, 32, 40, 41, 778, 
	827, 1034, 1083, 10, 48, 57, 48, 57, 
	48, 57, 42, 46, 92, 95, 45, 57, 
	65, 90, 97, 122, 9, 32, 40, 41, 
	778, 827, 1034, 1083, 1034, 896, 1151, 9, 
	32, 40, 41, 1034, 1083, 9, 32, 40, 
	41, 1034, 1083, -128, 8, 11, 58, 60, 
	127, 9, 32, 40, 41, 778, 827, 1034, 
	1083, 9, 32, 40, 41, 42, 46, 92, 
	95, 778, 827, 1034, 1083, 45, 57, 65, 
	90, 97, 122, 42, 46, 92, 95, 45, 
	57, 65, 90, 97, 122, 9, 32, 40, 
	41, 42, 45, 92, 95, 778, 827, 1034, 
	1083, 47, 57, 65, 90, 97, 122, 9, 
	32, 40, 41, 778, 827, 1034, 1083, 10, 
	48, 57, 48, 57, 48, 57, 42, 46, 
	92, 95, 45, 57, 65, 90, 97, 122, 
	9, 32, 40, 41, 778, 827, 1034, 1083, 
	778, 1034, 640, 895, 896, 1151, 9, 32, 
	40, 41, 42, 46, 92, 95, 1034, 1083, 
	45, 57, 65, 90, 97, 122, 1034, 896, 
	1151, 1034, 896, 1151, 43, 47, 57, 65, 
	90, 97, 122, 43, 47, 57, 65, 90, 
	97, 122, 43, 61, 47, 57, 65, 90, 
	97, 122, 43, 61, 47, 57, 65, 90, 
	97, 122, 9, 32, 40, 41, 43, 2058, 
	2107, 2314, 2363, 2570, 2619, 47, 57, 65, 
	90, 97, 122, 1034, 896, 1151, 61, 9, 
	32, 40, 41, 2058, 2107, 2314, 2363, 2570, 
	2619, 9, 32, 40, 41, 65, 67, 68, 
	69, 72, 73, 75, 76, 77, 78, 80, 
	82, 83, 84, 85, 97, 99, 100, 101, 
	104, 105, 107, 108, 109, 110, 112, 114, 
	115, 116, 117, 2058, 2107, 2314, 2363, 2570, 
	2619, 9, 32, 40, 41, 65, 70, 80, 
	97, 102, 112, 2058, 2107, 2314, 2363, 2570, 
	2619, 65, 97, 65, 97, 9, 32, 40, 
	41, 2058, 2107, 2314, 2363, 2570, 2619, 1034, 
	896, 1151, 65, 68, 69, 78, 97, 100, 
	101, 110, 65, 97, 9, 32, 40, 41, 
	2058, 2107, 2314, 2363, 2570, 2619, 78, 83, 
	110, 115, 83, 115, 75, 107, 69, 101, 
	89, 121, 9, 32, 40, 41, 2058, 2107, 
	2314, 2363, 2570, 2619, 9, 32, 40, 41, 
	2058, 2107, 2314, 2363, 2570, 2619, 82, 114, 
	84, 116, 9, 32, 40, 41, 2058, 2107, 
	2314, 2363, 2570, 2619, 65, 97, 77, 109, 
	69, 101, 9, 32, 40, 41, 2058, 2107, 
	2314, 2363, 2570, 2619, 72, 78, 83, 104, 
	110, 115, 67, 99, 73, 105, 68, 100, 
	9, 32, 40, 41, 2058, 2107, 2314, 2363, 
	2570, 2619, 65, 83, 97, 115, 77, 109, 
	69, 101, 9, 32, 40, 41, 2058, 2107, 
	2314, 2363, 2570, 2619, 75, 107, 69, 101, 
	89, 121, 9, 32, 40, 41, 2058, 2107, 
	2314, 2363, 2570, 2619, 9, 32, 40, 41, 
	2058, 2107, 2314, 2363, 2570, 2619, 85, 117, 
	73, 105, 52, 54, 56, 9, 32, 40, 
	41, 2058, 2107, 2314, 2363, 2570, 2619, 52, 
	9, 32, 40, 41, 2058, 2107, 2314, 2363, 
	2570, 2619, 73, 105, 78, 110, 70, 102, 
	79, 111, 9, 32, 40, 41, 2058, 2107, 
	2314, 2363, 2570, 2619, 80, 112, 83, 115, 
	69, 101, 67, 99, 75, 107, 69, 101, 
	89, 121, 9, 32, 40, 41, 2058, 2107, 
	2314, 2363, 2570, 2619, 69, 88, 101, 120, 
	89, 121, 9, 32, 40, 41, 2058, 2107, 
	2314, 2363, 2570, 2619, 9, 32, 40, 41, 
	2058, 2107, 2314, 2363, 2570, 2619, 51, 54, 
	66, 79, 80, 98, 111, 112, 50, 9, 
	32, 40, 41, 2058, 2107, 2314, 2363, 2570, 
	2619, 52, 9, 32, 40, 41, 2058, 2107, 
	2314, 2363, 2570, 2619, 9, 32, 40, 41, 
	2058, 2107, 2314, 2363, 2570, 2619, 67, 99, 
	9, 32, 40, 41, 2058, 2107, 2314, 2363, 
	2570, 2619, 9, 32, 40, 41, 2058, 2107, 
	2314, 2363, 2570, 2619, 73, 88, 105, 120, 
	78, 110, 70, 102, 79, 111, 9, 32, 
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619, 
	9, 32, 40, 41, 2058, 2107, 2314, 2363, 
	2570, 2619, 65, 73, 83, 97, 105, 115, 
	80, 112, 84, 116, 82, 114, 9, 32, 
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619, 
	68, 100, 9, 32, 40, 41, 2058, 2107, 
	2314, 2363, 2570, 2619, 9, 32, 40, 41, 
	69, 101, 2058, 2107, 2314, 2363, 2570, 2619, 
	67, 99, 9, 32, 40, 41, 51, 2058, 
	2107, 2314, 2363, 2570, 2619, 9, 32, 40, 
	41, 80, 112, 2058, 2107, 2314, 2363, 2570, 
	2619, 65, 97, 82, 114, 65, 97, 77, 
	109, 9, 32, 40, 41, 2058, 2107, 2314, 
	2363, 2570, 2619, 84, 116, 82, 114, 9, 
	32, 40, 41, 2058, 2107, 2314, 2363, 2570, 
	2619, 80, 82, 84, 112, 114, 116, 9, 
	32, 40, 41, 2058, 2107, 2314, 2363, 2570, 
	2619, 83, 115, 73, 105, 71, 103, 9, 
	32, 40, 41, 2058, 2107, 2314, 2363, 2570, 
	2619, 9, 32, 40, 41, 2058, 2107, 2314, 
	2363, 2570, 2619, 79, 80, 82, 83, 111, 
	112, 114, 115, 65, 97, 9, 32, 40, 
	41, 2058, 2107, 2314, 2363, 2570, 2619, 70, 
	102, 9, 32, 40, 41, 2058, 2107, 2314, 
	2363, 2570, 2619, 86, 118, 9, 32, 40, 
	41, 2058, 2107, 2314, 2363, 2570, 2619, 72, 
	104, 70, 102, 80, 112, 9, 32, 40, 
	41, 2058, 2107, 2314, 2363, 2570, 2619, 76, 
	88, 89, 108, 120, 121, 83, 115, 65, 
	97, 9, 32, 40, 41, 2058, 2107, 2314, 
	2363, 2570, 2619, 84, 116, 9, 32, 40, 
	41, 2058, 2107, 2314, 2363, 2570, 2619, 80, 
	112, 69, 101, 48, 57, 9, 32, 40, 
	41, 2058, 2107, 2314, 2363, 2570, 2619, 48, 
	57, 82, 114, 73, 105, 9, 32, 40, 
	41, 2058, 2107, 2314, 2363, 2570, 2619, 83, 
	115, 68, 100, 66, 98, 9, 32, 40, 
	41, 2058, 2107, 2314, 2363, 2570, 2619, 76, 
	108, 9, 32, 40, 41, 2058, 2107, 2314, 
	2363, 2570, 2619, 9, 32, 40, 41, 1034, 
	1083, 9, 32, 40, 41, 1034, 1083, 48, 
	57, 9, 32, 40, 41, 1034, 1083, 48, 
	57, 9, 32, 40, 41, 1034, 1083, 48, 
	57, 65, 70, 97, 102, 48, 57, 65, 
	70, 97, 102, 9, 32, 40, 41, 2058, 
	2107, 2314, 2363, 2570, 2619, 48, 57, 65, 
	70, 97, 102, 1034, 896, 1151, 1034, 896, 
	1151, 1034, 896, 1151, 9, 32, 40, 41, 
	1034, 1083, 9, 32, 40, 41, 48, 1034, 
	1083, 49, 57, 9, 32, 40, 41, 778, 
	827, 1034, 1083, 48, 57, 9, 32, 40, 
	41, 1034, 1083, 48, 57, 65, 70, 97, 
	102, 48, 57, 65, 70, 97, 102, 9, 
	32, 40, 41, 2058, 2107, 2314, 2363, 2570, 
	2619, 48, 57, 65, 70, 97, 102, 1034, 
	896, 1151, 1034, 896, 1151, 9, 32, 40, 
	41, 1034, 1083, 48, 57, 1034, 896, 1151, 
	68, 69, 73, 80, 82, 100, 101, 105, 
	112, 114, 48, 57, 32, 59, 9, 10, 
	40, 41, 48, 57, 72, 83, 104, 115, 
	32, 59, 9, 10, 40, 41, 65, 97, 
	32, 45, 59, 9, 10, 40, 41, 78, 
	110, 83, 115, 69, 101, 67, 99, 51, 
	45, 83, 115, 72, 104, 65, 97, 49, 
	32, 59, 9, 10, 40, 41, 67, 68, 
	99, 100, 67, 68, 99, 100, 45, 71, 
	103, 79, 111, 83, 115, 84, 116, 32, 
	59, 9, 10, 40, 41, 83, 115, 65, 
	97, 80, 112, 50, 51, 53, 54, 83, 
	115, 72, 104, 65, 97, 50, 53, 54, 
	32, 59, 9, 10, 40, 41, 56, 52, 
	83, 115, 72, 104, 65, 97, 51, 56, 
	52, 32, 59, 9, 10, 40, 41, 50, 
	52, 53, 53, 49, 57, 32, 59, 9, 
	10, 40, 41, 52, 56, 32, 59, 9, 
	10, 40, 41, 78, 110, 68, 100, 73, 
	105, 82, 114, 69, 101, 67, 99, 84, 
	116, 32, 59, 9, 10, 40, 41, 82, 
	114, 73, 105, 86, 118, 65, 97, 84, 
	116, 69, 101, 68, 79, 100, 111, 78, 
	110, 83, 115, 32, 59, 9, 10, 40, 
	41, 73, 105, 68, 100, 32, 59, 9, 
	10, 40, 41, 83, 115, 65, 97, 77, 
	83, 109, 115, 68, 100, 53, 32, 59, 
	9, 10, 40, 41, 72, 104, 65, 97, 
	49, 50, 53, 32, 45, 59, 9, 10, 
	40, 41, 78, 110, 83, 115, 69, 101, 
	67, 99, 51, 45, 83, 115, 72, 104, 
	65, 97, 49, 32, 59, 9, 10, 40, 
	41, 53, 54, 32, 59, 9, 10, 40, 
	41, 49, 50, 32, 59, 9, 10, 40, 
	41, 65, 73, 79, 80, 83, 85, 97, 
	105, 111, 112, 115, 117, 48, 57, 32, 
	59, 9, 10, 40, 41, 48, 57, 67, 
	99, 80, 112, 75, 107, 73, 105, 88, 
	120, 32, 59, 9, 10, 40, 41, 65, 
	80, 83, 97, 112, 115, 67, 99, 80, 
	112, 75, 107, 73, 105, 88, 120, 32, 
	59, 9, 10, 40, 41, 71, 75, 103, 
	107, 80, 112, 32, 59, 9, 10, 40, 
	41, 73, 105, 88, 120, 32, 59, 9, 
	10, 40, 41, 80, 112, 75, 107, 73, 
	105, 32, 59, 9, 10, 40, 41, 73, 
	105, 68, 100, 32, 59, 9, 10, 40, 
	41, 71, 75, 103, 107, 80, 112, 32, 
	59, 9, 10, 40, 41, 73, 105, 88, 
	120, 32, 59, 9, 10, 40, 41, 80, 
	112, 75, 107, 73, 105, 32, 59, 9, 
	10, 40, 41, 82, 114, 73, 105, 32, 
	59, 9, 10, 40, 41, 46, 48, 57, 
	32, 46, 59, 9, 10, 40, 41, 48, 
	57, 42, 92, 95, 45, 57, 64, 90, 
	97, 122, 32, 59, 9, 10, 40, 41, 
	42, 92, 95, 45, 57, 64, 90, 97, 
	122, 9, 32, 40, 41, 1034, 1083, 9, 
	32, 40, 41, 42, 92, 95, 1034, 1083, 
	45, 57, 64, 90, 97, 122, 9, 32, 
	40, 41, 1034, 1083, 9, 32, 40, 41, 
	1034, 1083, 48, 57, 9, 32, 40, 41, 
	1034, 1083, 48, 57, 9, 32, 40, 41, 
	1034, 1083, 48, 57, 9, 32, 40, 41, 
	68, 72, 77, 83, 87, 100, 104, 109, 
	115, 119, 1034, 1083, 48, 57, 9, 32, 
	40, 41, 1034, 1083, 48, 57, 9, 32, 
	40, 41, 68, 72, 77, 83, 87, 100, 
	104, 109, 115, 119, 1034, 1083, 48, 57, 
	9, 32, 40, 41, 1034, 1083, 48, 57, 
	9, 32, 40, 41, 68, 72, 77, 83, 
	87, 100, 104, 109, 115, 119, 1034, 1083, 
	48, 57, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 32, 59, 68, 72, 77, 83, 
	87, 100, 104, 109, 115, 119, 9, 10, 
	40, 41, 48, 57, 32, 59, 9, 10, 
	40, 41, 48, 57, 68, 72, 77, 83, 
	87, 100, 104, 109, 115, 119, 48, 57, 
	32, 59, 9, 10, 40, 41, 48, 57, 
	1034, 896, 1151, 9, 32, 40, 41, 1034, 
	1083, 48, 57, 68, 72, 77, 83, 87, 
	100, 104, 109, 115, 119, 48, 57, 9, 
	32, 40, 41, 1034, 1083, 48, 57, 1034, 
	896, 1151, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 68, 72, 77, 83, 87, 100, 
	104, 109, 115, 119, 48, 57, 9, 32, 
	40, 41, 1034, 1083, 48, 57, 1034, 896, 
	1151, 9, 32, 40, 41, 1034, 1083, 48, 
	57, 68, 72, 77, 83, 87, 100, 104, 
	109, 115, 119, 48, 57, 9, 32, 40, 
	41, 1034, 1083, 48, 57, 1034, 896, 1151, 
	1034, 896, 1151, 1034, 896, 1151, 32, 59, 
	9, 10, 40, 41, 9, 32, 40, 41, 
	1034, 1083, 9, 32, 40, 41, 1034, 1083, 
	-128, 8, 11, 58, 60, 127, 32, 59, 
	9, 10, 40, 41, 1034, 896, 1151, 42, 
	92, 95, 45, 57, 64, 90, 97, 122, 
	9, 32, 40, 41, 1034, 1083, 9, 32, 
	40, 41, 42, 92, 95, 1034, 1083, 45, 
	57, 64, 90, 97, 122, 32, 59, 9, 
	10, 40, 41, 1034, 896, 1151, 48, 57, 
	9, 32, 40, 41, 1034, 1083, 48, 57, 
	9, 32, 40, 41, 42, 92, 95, 1034, 
	1083, 45, 57, 64, 90, 97, 122, 32, 
	59, 9, 10, 40, 41, 1034, 896, 1151, 
	32, 59, 9, 10, 40, 41, 9, 32, 
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619, 
	9, 32, 40, 41, 2058, 2107, 2314, 2363, 
	2570, 2619, -128, 8, 11, 58, 60, 127, 
	1034, 896, 1151, 46, 48, 58, 65, 70, 
	97, 102, 32, 46, 59, 9, 10, 40, 
	41, 48, 58, 65, 70, 97, 102, 48, 
	57, 9, 32, 40, 41, 1034, 1083, 48, 
	57, 9, 32, 40, 41, 78, 83, 1034, 
	1083, 48, 57, 9, 32, 40, 41, 1034, 
	1083, 48, 57, 9, 32, 40, 41, 78, 
	83, 1034, 1083, 48, 57, 9, 32, 40, 
	41, 46, 1034, 1083, 48, 57, 9, 32, 
	40, 41, 78, 83, 1034, 1083, 9, 32, 
	40, 41, 1034, 1083, 9, 32, 40, 41, 
	1034, 1083, 48, 57, 9, 32, 40, 41, 
	1034, 1083, 48, 57, 9, 32, 40, 41, 
	69, 87, 1034, 1083, 48, 57, 9, 32, 
	40, 41, 1034, 1083, 48, 57, 9, 32, 
	40, 41, 69, 87, 1034, 1083, 48, 57, 
	9, 32, 40, 41, 46, 1034, 1083, 48, 
	57, 9, 32, 40, 41, 69, 87, 1034, 
	1083, 9, 32, 40, 41, 1034, 1083, 9, 
	32, 40, 41, 45, 1034, 1083, 48, 57, 
	48, 57, 9, 32, 40, 41, 46, 109, 
	2058, 2107, 2314, 2363, 2570, 2619, 48, 57, 
	9, 32, 40, 41, 2058, 2107, 2314, 2363, 
	2570, 2619, 48, 57, 9, 32, 40, 41, 
	46, 109, 2058, 2107, 2314, 2363, 2570, 2619, 
	48, 57, 9, 32, 40, 41, 2058, 2107, 
	2314, 2363, 2570, 2619, 48, 57, 9, 32, 
	40, 41, 46, 109, 2058, 2107, 2314, 2363, 
	2570, 2619, 48, 57, 9, 32, 40, 41, 
	2058, 2107, 2314, 2363, 2570, 2619, 48, 57, 
	9, 32, 40, 41, 46, 109, 2058, 2107, 
	2314, 2363, 2570, 2619, 48, 57, 9, 32, 
	40, 41, 2058, 2107, 2314, 2363, 2570, 2619, 
	1034, 896, 1151, 9, 32, 40, 41, 109, 
	2058, 2107, 2314, 2363, 2570, 2619, 48, 57, 
	9, 32, 40, 41, 109, 2058, 2107, 2314, 
	2363, 2570, 2619, 48, 57, 1034, 896, 1151, 
	9, 32, 40, 41, 109, 2058, 2107, 2314, 
	2363, 2570, 2619, 48, 57, 9, 32, 40, 
	41, 109, 2058, 2107, 2314, 2363, 2570, 2619, 
	48, 57, 9, 32, 40, 41, 2058, 2107, 
	2314, 2363, 2570, 2619, 1034, 896, 1151, 9, 
	32, 40, 41, 109, 2058, 2107, 2314, 2363, 
	2570, 2619, 48, 57, 9, 32, 40, 41, 
	109, 2058, 2107, 2314, 2363, 2570, 2619, 48, 
	57, 9, 32, 40, 41, 2058, 2107, 2314, 
	2363, 2570, 2619, 1034, 896, 1151, 9, 32, 
	40, 41, 109, 2058, 2107, 2314, 2363, 2570, 
	2619, 48, 57, 9, 32, 40, 41, 109, 
	2058, 2107, 2314, 2363, 2570, 2619, 48, 57, 
	9, 32, 40, 41, 2058, 2107, 2314, 2363, 
	2570, 2619, 1034, 896, 1151, 9, 32, 40, 
	41, 1034, 1083, 1034, 896, 1151, 9, 32, 
	40, 41, 1034, 1083, 48, 57, 9, 32, 
	40, 41, 1034, 1083, 48, 57, 1034, 896, 
	1151, 1034, 896, 1151, 1034, 896, 1151, 9, 
	32, 40, 41, 1034, 1083, 1034, 896, 1151, 
	9, 32, 40, 41, 1034, 1083, 48, 57, 
	9, 32, 40, 41, 1034, 1083, 48, 57, 
	1034, 896, 1151, 1034, 896, 1151, 48, 57, 
	9, 32, 40, 41, 1034, 1083, 48, 57, 
	9, 32, 40, 41, 1034, 1083, 48, 57, 
	9, 32, 40, 41, 1034, 1083, 48, 57, 
	9, 32, 40, 41, 1034, 1083, 48, 57, 
	9, 32, 40, 41, 1034, 1083, 48, 57, 
	9, 32, 40, 41, 42, 92, 95, 1034, 
	1083, 45, 57, 64, 90, 97, 122, 32, 
	59, 9, 10, 40, 41, 1034, 896, 1151, 
	1034, 896, 1151, 1034, 896, 1151, 48, 57, 
	9, 32, 40, 41, 1034, 1083, 48, 57, 
	9, 32, 40, 41, 1034, 1083, 48, 57, 
	9, 32, 40, 41, 1034, 1083, 48, 57, 
	9, 32, 40, 41, 1034, 1083, -128, 8, 
	11, 58, 60, 127, 9, 32, 40, 41, 
	1034, 1083, 9, 32, 40, 41, 1034, 1083, 
	-128, 8, 11, 58, 60, 127, 9, 32, 
	40, 41, 1034, 1083, 9, 32, 40, 41, 
	1034, 1083, -128, 8, 11, 58, 60, 127, 
	9, 32, 40, 41, 1034, 1083, 9, 32, 
	40, 41, 42, 92, 95, 1034, 1083, 45, 
	57, 64, 90, 97, 122, 32, 59, 9, 
	10, 40, 41, 1034, 896, 1151, 1034, 896, 
	1151, 1034, 896, 1151, 1034, 896, 1151, 1034, 
	896, 1151, 48, 57, 65, 90, 97, 122, 
	9, 32, 40, 41, 1034, 1083, 9, 32, 
	40, 41, 1034, 1083, 48, 57, 9, 32, 
	40, 41, 1034, 1083, 48, 57, 9, 32, 
	40, 41, 1034, 1083, 48, 57, 65, 90, 
	97, 122, 9, 32, 40, 41, 1034, 1083, 
	9, 32, 40, 41, 43, 1034, 1083, 47, 
	57, 65, 90, 97, 122, 1546, 1595, 1034, 
	896, 1151, 1034, 896, 1151, 1034, 896, 1151, 
	9, 32, 33, 40, 41, 49, 50, 2058, 
	2107, 2314, 2363, 2570, 2619, 49, 50, 58, 
	46, 48, 57, 47, 46, 57, 48, 57, 
	9, 32, 40, 41, 2058, 2107, 2314, 2363, 
	2570, 2619, 48, 57, 1034, 896, 1151, 58, 
	46, 48, 58, 65, 70, 97, 102, 47, 
	46, 58, 65, 70, 97, 102, 48, 57, 
	9, 32, 40, 41, 1034, 1083, 48, 57, 
	9, 32, 40, 41, 1034, 1083, 48, 57, 
	65, 90, 97, 122, 9, 32, 40, 41, 
	1034, 1083, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 65, 70, 97, 102, 48, 57, 
	65, 70, 97, 102, 9, 32, 40, 41, 
	2058, 2107, 2314, 2363, 2570, 2619, 48, 57, 
	65, 70, 97, 102, 1034, 896, 1151, 1034, 
	896, 1151, 1034, 896, 1151, 1034, 896, 1151, 
	48, 57, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 65, 70, 97, 102, 48, 57, 
	65, 70, 97, 102, 9, 32, 40, 41, 
	2058, 2107, 2314, 2363, 2570, 2619, 48, 57, 
	65, 70, 97, 102, 1034, 896, 1151, 1034, 
	896, 1151, 1034, 896, 1151, 48, 57, 9, 
	32, 40, 41, 1034, 1083, 48, 57, 9, 
	32, 40, 41, 48, 49, 50, 51, 1034, 
	1083, 9, 32, 40, 41, 1034, 1083, 9, 
	32, 40, 41, 1034, 1083, 48, 57, 9, 
	32, 40, 41, 1034, 1083, 48, 57, 9, 
	32, 40, 41, 46, 1034, 1083, 6153, 6176, 
	6184, 6185, 6409, 6432, 6440, 6441, 6665, 6688, 
	6696, 6697, 9482, 9531, 9738, 9787, 10250, 10299, 
	10506, 10555, 10762, 10811, 11274, 11323, 11530, 11579, 
	11786, 11835, 12298, 12347, 12554, 12603, 12810, 12859, 
	3081, 3104, 3112, 3113, 3115, 4106, 4155, 3119, 
	3129, 3137, 3162, 3169, 3194, 1546, 1595, 4106, 
	3968, 4223, 4617, 4640, 4648, 4649, 13578, 13627, 
	13834, 13883, 14346, 14395, 14602, 14651, 14858, 14907, 
	5642, 5504, 5759, 3115, 6153, 6176, 6184, 6185, 
	6409, 6432, 6440, 6441, 6665, 6688, 6696, 6697, 
	9482, 9531, 9738, 9787, 10250, 10299, 10506, 10555, 
	10762, 10811, 11274, 11323, 11530, 11579, 11786, 11835, 
	12298, 12347, 12554, 12603, 12810, 12859, 3119, 3129, 
	3137, 3162, 3169, 3194, 7690, 8202, 8714, 7552, 
	7807, 8064, 8319, 8576, 8831, 1034, 896, 1151, 
	1034, 896, 1151, 9, 32, 40, 41, 1034, 
	1083, 9, 32, 40, 41, 1034, 1083, 48, 
	57, 9, 32, 40, 41, 1034, 1083, 48, 
	57, 9, 32, 40, 41, 46, 1034, 1083, 
	48, 57, 46, 6153, 6176, 6184, 6185, 6409, 
	6432, 6440, 6441, 6665, 6688, 6696, 6697, 9482, 
	9531, 9738, 9787, 10250, 10299, 10506, 10555, 10762, 
	10811, 11274, 11323, 11530, 11579, 11786, 11835, 12298, 
	12347, 12554, 12603, 12810, 12859, 48, 57, 1034, 
	896, 1151, 1034, 896, 1151, 9, 32, 40, 
	41, 1034, 1083, 9, 32, 40, 41, 1034, 
	1083, 48, 57, 9, 32, 40, 41, 1034, 
	1083, 48, 57, 9, 32, 40, 41, 46, 
	1034, 1083, 48, 58, 65, 70, 97, 102, 
	46, 6153, 6176, 6184, 6185, 6409, 6432, 6440, 
	6441, 6665, 6688, 6696, 6697, 9482, 9531, 9738, 
	9787, 10250, 10299, 10506, 10555, 10762, 10811, 11274, 
	11323, 11530, 11579, 11786, 11835, 12298, 12347, 12554, 
	12603, 12810, 12859, 48, 58, 65, 70, 97, 
	102, 1034, 896, 1151, 1034, 896, 1151, 9, 
	32, 40, 41, 1034, 1083, 9, 32, 40, 
	41, 1034, 1083, 48, 57, 9, 32, 40, 
	41, 1034, 1083, 48, 57, 9, 32, 40, 
	41, 42, 92, 95, 1034, 1083, 45, 57, 
	64, 90, 97, 122, 6153, 6176, 6184, 6185, 
	6409, 6432, 6440, 6441, 6665, 6688, 6696, 6697, 
	9482, 9531, 9738, 9787, 10250, 10299, 10506, 10555, 
	10762, 10811, 11274, 11323, 11530, 11579, 11786, 11835, 
	12298, 12347, 12554, 12603, 12810, 12859, 1034, 896, 
	1151, 1034, 896, 1151, 1034, 896, 1151, 65, 
	67, 68, 69, 72, 73, 75, 76, 77, 
	78, 80, 82, 83, 84, 85, 97, 99, 
	100, 101, 104, 105, 107, 108, 109, 110, 
	112, 114, 115, 116, 117, 9, 32, 40, 
	41, 65, 70, 80, 97, 102, 112, 1034, 
	1083, 9, 32, 40, 41, 1034, 1083, 48, 
	57, 65, 90, 97, 122, 9, 32, 40, 
	41, 1034, 1083, 9, 32, 40, 41, 1034, 
	1083, 48, 57, 9, 32, 40, 41, 1034, 
	1083, 48, 57, 9, 32, 40, 41, 1034, 
	1083, 48, 57, 9, 32, 40, 41, 1034, 
	1083, 48, 57, 9, 32, 40, 41, 1034, 
	1083, 48, 57, 9, 32, 40, 41, 1034, 
	1083, 48, 57, 9, 32, 40, 41, 1034, 
	1083, 48, 57, 9, 32, 40, 41, 1034, 
	1083, 48, 57, 9, 32, 40, 41, 1034, 
	1083, 48, 57, 9, 32, 40, 41, 1034, 
	1083, 48, 57, 9, 32, 40, 41, 42, 
	92, 95, 1034, 1083, 45, 57, 64, 90, 
	97, 122, 9, 32, 40, 41, 1034, 1083, 
	9, 32, 40, 41, 43, 1034, 1083, 47, 
	57, 65, 90, 97, 122, 1546, 1595, 1034, 
	896, 1151, 1034, 896, 1151, 1034, 896, 1151, 
	1034, 896, 1151, 1034, 896, 1151, 1034, 896, 
	1151, 1034, 896, 1151, 1034, 896, 1151, 65, 
	97, 65, 97, 9, 32, 40, 41, 1034, 
	1083, 83, 115, 68, 100, 66, 98, 9, 
	32, 40, 41, 1034, 1083, 76, 108, 9, 
	32, 40, 41, 1034, 1083, 65, 68, 69, 
	78, 97, 100, 101, 110, 65, 97, 9, 
	32, 40, 41, 1034, 1083, 78, 83, 110, 
	115, 83, 115, 75, 107, 69, 101, 89, 
	121, 9, 32, 40, 41, 1034, 1083, 9, 
	32, 40, 41, 1034, 1083, 82, 114, 84, 
	116, 9, 32, 40, 41, 1034, 1083, 65, 
	97, 77, 109, 69, 101, 9, 32, 40, 
	41, 1034, 1083, 72, 78, 83, 104, 110, 
	115, 67, 99, 73, 105, 68, 100, 9, 
	32, 40, 41, 1034, 1083, 65, 83, 97, 
	115, 77, 109, 69, 101, 9, 32, 40, 
	41, 1034, 1083, 75, 107, 69, 101, 89, 
	121, 9, 32, 40, 41, 1034, 1083, 9, 
	32, 40, 41, 1034, 1083, 85, 117, 73, 
	105, 52, 54, 56, 9, 32, 40, 41, 
	1034, 1083, 52, 9, 32, 40, 41, 1034, 
	1083, 73, 105, 78, 110, 70, 102, 79, 
	111, 9, 32, 40, 41, 1034, 1083, 80, 
	112, 83, 115, 69, 101, 67, 99, 75, 
	107, 69, 101, 89, 121, 9, 32, 40, 
	41, 1034, 1083, 69, 88, 101, 120, 89, 
	121, 9, 32, 40, 41, 1034, 1083, 9, 
	32, 40, 41, 1034, 1083, 51, 54, 66, 
	79, 80, 98, 111, 112, 50, 9, 32, 
	40, 41, 1034, 1083, 52, 9, 32, 40, 
	41, 1034, 1083, 9, 32, 40, 41, 1034, 
	1083, 67, 99, 9, 32, 40, 41, 1034, 
	1083, 9, 32, 40, 41, 1034, 1083, 73, 
	88, 105, 120, 78, 110, 70, 102, 79, 
	111, 9, 32, 40, 41, 1034, 1083, 9, 
	32, 40, 41, 1034, 1083, 65, 73, 83, 
	97, 105, 115, 80, 112, 84, 116, 82, 
	114, 9, 32, 40, 41, 1034, 1083, 68, 
	100, 9, 32, 40, 41, 1034, 1083, 9, 
	32, 40, 41, 69, 101, 1034, 1083, 67, 
	99, 9, 32, 40, 41, 51, 1034, 1083, 
	9, 32, 40, 41, 80, 112, 1034, 1083, 
	65, 97, 82, 114, 65, 97, 77, 109, 
	9, 32, 40, 41, 1034, 1083, 84, 116, 
	82, 114, 9, 32, 40, 41, 1034, 1083, 
	80, 82, 84, 112, 114, 116, 9, 32, 
	40, 41, 1034, 1083, 83, 115, 73, 105, 
	71, 103, 9, 32, 40, 41, 1034, 1083, 
	9, 32, 40, 41, 1034, 1083, 79, 80, 
	82, 83, 111, 112, 114, 115, 65, 97, 
	9, 32, 40, 41, 1034, 1083, 70, 102, 
	9, 32, 40, 41, 1034, 1083, 86, 118, 
	9, 32, 40, 41, 1034, 1083, 72, 104, 
	70, 102, 80, 112, 9, 32, 40, 41, 
	1034, 1083, 76, 88, 89, 108, 120, 121, 
	83, 115, 65, 97, 9, 32, 40, 41, 
	1034, 1083, 84, 116, 9, 32, 40, 41, 
	1034, 1083, 80, 112, 69, 101, 48, 57, 
	9, 32, 40, 41, 1034, 1083, 48, 57, 
	82, 114, 73, 105, 9, 32, 40, 41, 
	1034, 1083, 42, 92, 95, 45, 57, 64, 
	90, 97, 122, 32, 59, 9, 10, 40, 
	41, 32, 59, 9, 10, 40, 41, 48, 
	57, 9, 32, 40, 41, 1034, 1083, 48, 
	57, 9, 32, 40, 41, 1034, 1083, 48, 
	57, 9, 32, 40, 41, 1034, 1083, 48, 
	57, 9, 32, 40, 41, 1034, 1083, 48, 
	57, 65, 90, 97, 122, 9, 32, 40, 
	41, 1034, 1083, 9, 32, 40, 41, 43, 
	1034, 1083, 47, 57, 65, 90, 97, 122, 
	1546, 1595, 1034, 896, 1151, 1034, 896, 1151, 
	1034, 896, 1151, 43, 47, 57, 65, 90, 
	97, 122, 1546, 1595, 48, 57, 9, 32, 
	40, 41, 1034, 1083, 48, 57, 9, 32, 
	40, 41, 1034, 1083, 48, 57, 9, 32, 
	40, 41, 1034, 1083, 48, 57, 9, 32, 
	40, 41, 1034, 1083, 48, 57, 9, 32, 
	40, 41, 1034, 1083, 48, 57, 9, 32, 
	40, 41, 45, 1034, 1083, 48, 57, 65, 
	70, 97, 102, 9, 32, 40, 41, 1034, 
	1083, 9, 32, 40, 41, 1034, 1083, 48, 
	57, 65, 86, 97, 118, 48, 57, 65, 
	86, 97, 118, 61, 48, 57, 65, 86, 
	97, 118, 48, 57, 65, 86, 97, 118, 
	61, 48, 57, 65, 86, 97, 118, 61, 
	48, 57, 65, 86, 97, 118, 48, 57, 
	65, 86, 97, 118, 61, 48, 57, 65, 
	86, 97, 118, 32, 59, 9, 10, 40, 
	41, 48, 57, 65, 86, 97, 118, 32, 
	59, 9, 10, 40, 41, 61, 61, 61, 
	61, 61, 1034, 896, 1151, 48, 57, 65, 
	70, 97, 102, 9, 32, 40, 41, 1034, 
	1083, 48, 57, 65, 70, 97, 102, 1034, 
	896, 1151, 1034, 896, 1151, 1034, 896, 1151, 
	48, 57, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 9, 32, 40, 41, 45, 1034, 
	1083, 48, 57, 65, 70, 97, 102, 32, 
	59, 9, 10, 40, 41, 48, 57, 65, 
	70, 97, 102, 32, 59, 9, 10, 40, 
	41, 48, 57, 65, 70, 97, 102, 1034, 
	896, 1151, 1034, 896, 1151, 1034, 896, 1151, 
	48, 57, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 65, 70, 97, 102, 48, 57, 
	65, 70, 97, 102, 9, 32, 40, 41, 
	2058, 2107, 2314, 2363, 2570, 2619, 48, 57, 
	65, 70, 97, 102, 1034, 896, 1151, 1034, 
	896, 1151, 1034, 896, 1151, 1034, 896, 1151, 
	48, 57, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 9, 32, 40, 41, 46, 1034, 
	1083, 48, 57, 32, 46, 59, 9, 10, 
	40, 41, 48, 57, 1034, 896, 1151, 48, 
	57, 9, 32, 40, 41, 1034, 1083, 48, 
	57, 9, 32, 40, 41, 1034, 1083, 48, 
	57, 65, 70, 97, 102, 48, 57, 65, 
	70, 97, 102, 48, 57, 65, 70, 97, 
	102, 48, 57, 65, 70, 97, 102, 58, 
	48, 57, 65, 70, 97, 102, 48, 57, 
	65, 70, 97, 102, 48, 57, 65, 70, 
	97, 102, 48, 57, 65, 70, 97, 102, 
	32, 58, 59, 9, 10, 40, 41, 1034, 
	896, 1151, 48, 57, 65, 70, 97, 102, 
	48, 57, 65, 70, 97, 102, 45, 48, 
	57, 65, 70, 97, 102, 48, 57, 65, 
	70, 97, 102, 32, 45, 59, 9, 10, 
	40, 41, 48, 57, 65, 70, 97, 102, 
	48, 57, 65, 70, 97, 102, 45, 48, 
	57, 65, 70, 97, 102, 48, 57, 65, 
	70, 97, 102, 32, 45, 59, 9, 10, 
	40, 41, 48, 57, 9, 32, 40, 41, 
	1034, 1083, 48, 57, 9, 32, 40, 41, 
	1034, 1083, 48, 57, 9, 32, 40, 41, 
	1034, 1083, 48, 57, 9, 32, 40, 41, 
	1034, 1083, -128, 8, 11, 58, 60, 127, 
	32, 59, 9, 10, 40, 41, 1034, 896, 
	1151, 1034, 896, 1151, 48, 57, 9, 32, 
	40, 41, 1034, 1083, 48, 57, 9, 32, 
	40, 41, 1034, 1083, -128, 8, 11, 58, 
	60, 127, 9, 32, 40, 41, 1034, 1083, 
	9, 32, 40, 41, 1034, 1083, -128, 8, 
	11, 58, 60, 127, 32, 59, 9, 10, 
	40, 41, 1034, 896, 1151, 1034, 896, 1151, 
	48, 57, 9, 32, 40, 41, 1034, 1083, 
	48, 57, 9, 32, 40, 41, 1034, 1083, 
	-128, 8, 11, 58, 60, 127, 9, 32, 
	40, 41, 1034, 1083, 9, 32, 40, 41, 
	42, 92, 95, 1034, 1083, 45, 57, 64, 
	90, 97, 122, 32, 59, 9, 10, 40, 
	41, 1034, 896, 1151, 1034, 896, 1151, 9, 
	32, 36, 40, 41, 42, 92, 95, 778, 
	827, 1034, 1083, 45, 57, 64, 90, 97, 
	122, 9, 32, 36, 40, 41, 42, 58, 
	92, 95, 1802, 1851, 2058, 2107, 2314, 2363, 
	2570, 2619, -128, 8, 11, 44, 45, 57, 
	60, 63, 64, 90, 91, 96, 97, 122, 
	123, 127, 9, 32, 36, 40, 41, 42, 
	65, 67, 68, 69, 72, 73, 75, 76, 
	77, 78, 80, 82, 83, 84, 85, 92, 
	95, 97, 99, 100, 101, 104, 105, 107, 
	108, 109, 110, 112, 114, 115, 116, 117, 
	778, 827, 1034, 1083, 45, 57, 64, 90, 
	98, 122, 9, 32, 36, 40, 41, 42, 
	65, 67, 68, 69, 72, 73, 75, 76, 
	77, 78, 80, 82, 83, 84, 85, 92, 
	95, 97, 99, 100, 101, 104, 105, 107, 
	108, 109, 110, 112, 114, 115, 116, 117, 
	778, 827, 1034, 1083, 45, 47, 48, 57, 
	64, 90, 98, 122, 9, 32, 36, 40, 
	41, 42, 92, 95, 778, 827, 1034, 1083, 
	45, 57, 64, 90, 97, 122, 9, 32, 
	36, 40, 41, 42, 65, 67, 68, 69, 
	72, 73, 75, 76, 77, 78, 80, 82, 
	83, 84, 85, 92, 95, 97, 99, 100, 
	101, 104, 105, 107, 108, 109, 110, 112, 
	114, 115, 116, 117, 778, 827, 1034, 1083, 
	45, 47, 48, 57, 64, 90, 98, 122, 
	9, 32, 36, 40, 41, 42, 92, 95, 
	778, 827, 1034, 1083, 45, 57, 64, 90, 
	97, 122, 9, 32, 36, 40, 41, 42, 
	58, 92, 95, 1802, 1851, 2058, 2107, 2314, 
	2363, 2570, 2619, -128, 8, 11, 44, 45, 
	57, 60, 63, 64, 90, 91, 96, 97, 
	122, 123, 127, 9, 32, 36, 40, 41, 
	42, 58, 65, 67, 68, 69, 72, 73, 
	75, 76, 77, 78, 80, 82, 83, 84, 
	85, 92, 95, 97, 99, 100, 101, 104, 
	105, 107, 108, 109, 110, 112, 114, 115, 
	116, 117, 1802, 1851, 2058, 2107, 2314, 2363, 
	2570, 2619, -128, 8, 11, 44, 45, 47, 
	48, 57, 60, 63, 64, 90, 91, 96, 
	98, 122, 123, 127, 9, 32, 36, 40, 
	41, 42, 58, 65, 67, 68, 69, 72, 
	73, 75, 76, 77, 78, 80, 82, 83, 
	84, 85, 92, 95, 97, 99, 100, 101, 
	104, 105, 107, 108, 109, 110, 112, 114, 
	115, 116, 117, 1802, 1851, 2058, 2107, 2314, 
	2363, 2570, 2619, -128, 8, 11, 44, 45, 
	47, 48, 57, 60, 63, 64, 90, 91, 
	96, 98, 122, 123, 127, 32, 33, 59, 
	92, 9, 10, 35, 39, 40, 41, 42, 
	126, 9, 32, 40, 41, 42, 46, 92, 
	95, 1034, 1083, 45, 57, 65, 90, 97, 
	122, 9, 32, 40, 41, 43, 2058, 2107, 
	2314, 2363, 2570, 2619, 47, 57, 65, 90, 
	97, 122, 1034, 896, 1151, 9, 32, 40, 
	41, 65, 67, 68, 69, 72, 73, 75, 
	76, 77, 78, 80, 82, 83, 84, 85, 
	97, 99, 100, 101, 104, 105, 107, 108, 
	109, 110, 112, 114, 115, 116, 117, 2058, 
	2107, 2314, 2363, 2570, 2619, 1034, 896, 1151, 
	9, 32, 40, 41, 2058, 2107, 2314, 2363, 
	2570, 2619, 48, 57, 65, 70, 97, 102, 
	1034, 896, 1151, 9, 32, 40, 41, 1034, 
	1083, 48, 57, 65, 70, 97, 102, 9, 
	32, 40, 41, 2058, 2107, 2314, 2363, 2570, 
	2619, 48, 57, 65, 70, 97, 102, 1034, 
	896, 1151, 1034, 896, 1151, 9, 32, 40, 
	41, 2058, 2107, 2314, 2363, 2570, 2619, -128, 
	8, 11, 58, 60, 127, 1034, 896, 1151, 
	9, 32, 40, 41, 2058, 2107, 2314, 2363, 
	2570, 2619, 1034, 896, 1151, 9, 32, 40, 
	41, 2058, 2107, 2314, 2363, 2570, 2619, 48, 
	57, 1034, 896, 1151, 9, 32, 40, 41, 
	2058, 2107, 2314, 2363, 2570, 2619, 48, 57, 
	1034, 896, 1151, 9, 32, 40, 41, 2058, 
	2107, 2314, 2363, 2570, 2619, 48, 57, 1034, 
	896, 1151, 9, 32, 33, 40, 41, 49, 
	50, 2058, 2107, 2314, 2363, 2570, 2619, 1034, 
	896, 1151, 9, 32, 40, 41, 2058, 2107, 
	2314, 2363, 2570, 2619, 48, 57, 65, 70, 
	97, 102, 1034, 896, 1151, 9, 32, 40, 
	41, 2058, 2107, 2314, 2363, 2570, 2619, 48, 
	57, 65, 70, 97, 102, 1034, 896, 1151, 
	4617, 4640, 4648, 4649, 13578, 13627, 13834, 13883, 
	14346, 14395, 14602, 14651, 14858, 14907, 5642, 5504, 
	5759, 3081, 3104, 3112, 3113, 3115, 4106, 4155, 
	3119, 3129, 3137, 3162, 3169, 3194, 4106, 3968, 
	4223, 3115, 6153, 6176, 6184, 6185, 6409, 6432, 
	6440, 6441, 6665, 6688, 6696, 6697, 9482, 9531, 
	9738, 9787, 10250, 10299, 10506, 10555, 10762, 10811, 
	11274, 11323, 11530, 11579, 11786, 11835, 12298, 12347, 
	12554, 12603, 12810, 12859, 3119, 3129, 3137, 3162, 
	3169, 3194, 7690, 8202, 8714, 7552, 7807, 8064, 
	8319, 8576, 8831, 9, 32, 40, 41, 2058, 
	2107, 2314, 2363, 2570, 2619, 48, 57, 65, 
	70, 97, 102, 1034, 896, 1151, 0
};

static const char _zone_scanner_single_lengths[] = {
	0, 38, 16, 36, 16, 11, 8, 8, 
	1, 1, 1, 13, 13, 2, 44, 18, 
	38, 8, 2, 10, 12, 12, 4, 2, 
	2, 2, 2, 10, 10, 2, 2, 10, 
	2, 2, 2, 10, 6, 2, 2, 2, 
	10, 4, 2, 2, 10, 2, 2, 2, 
	10, 10, 2, 2, 2, 1, 10, 1, 
	10, 2, 2, 2, 2, 10, 4, 6, 
	36, 2, 2, 2, 2, 2, 2, 2, 
	10, 4, 2, 10, 10, 8, 1, 10, 
	1, 10, 10, 2, 10, 10, 4, 2, 
	2, 2, 10, 10, 6, 2, 2, 2, 
	10, 2, 10, 12, 2, 11, 12, 2, 
	2, 2, 2, 10, 2, 2, 10, 6, 
	10, 2, 2, 2, 10, 10, 8, 2, 
	10, 2, 10, 2, 10, 2, 2, 2, 
	10, 6, 2, 2, 10, 2, 10, 2, 
	2, 0, 10, 2, 2, 10, 1, 38, 
	4, 6, 36, 16, 6, 10, 6, 1, 
	1, 6, 2, 2, 2, 2, 2, 2, 
	2, 6, 36, 1, 16, 36, 1, 6, 
	10, 6, 1, 16, 42, 18, 13, 38, 
	2, 8, 8, 44, 16, 14, 10, 10, 
	12, 12, 16, 12, 14, 10, 14, 16, 
	14, 10, 2, 14, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 8, 18, 38, 
	2, 18, 44, 16, 14, 10, 10, 12, 
	12, 16, 12, 14, 10, 14, 16, 14, 
	10, 9, 38, 12, 12, 12, 10, 2, 
	2, 10, 2, 2, 2, 10, 2, 10, 
	2, 8, 8, 12, 12, 12, 10, 1, 
	44, 12, 12, 14, 12, 8, 8, 10, 
	10, 14, 10, 12, 8, 12, 14, 12, 
	8, 2, 2, 10, 2, 1, 1, 5, 
	6, 6, 0, 0, 0, 6, 2, 2, 
	2, 4, 0, 0, 0, 4, 4, 2, 
	0, 0, 0, 4, 6, 6, 18, 8, 
	1, 8, 10, 8, 1, 6, 10, 4, 
	12, 8, 1, 0, 0, 0, 4, 8, 
	1, 6, 6, 8, 12, 4, 12, 8, 
	1, 0, 0, 0, 4, 8, 2, 10, 
	1, 1, 1, 1, 2, 2, 11, 1, 
	1, 10, 40, 16, 2, 2, 10, 1, 
	8, 2, 10, 4, 2, 2, 2, 2, 
	10, 10, 2, 2, 10, 2, 2, 2, 
	10, 6, 2, 2, 2, 10, 4, 2, 
	2, 10, 2, 2, 2, 10, 10, 2, 
	2, 2, 1, 10, 1, 10, 2, 2, 
	2, 2, 10, 2, 2, 2, 2, 2, 
	2, 2, 10, 4, 2, 10, 10, 8, 
	1, 10, 1, 10, 10, 2, 10, 10, 
	4, 2, 2, 2, 10, 10, 6, 2, 
	2, 2, 10, 2, 10, 12, 2, 11, 
	12, 2, 2, 2, 2, 10, 2, 2, 
	10, 6, 10, 2, 2, 2, 10, 10, 
	8, 2, 10, 2, 10, 2, 10, 2, 
	2, 2, 10, 6, 2, 2, 10, 2, 
	10, 2, 2, 0, 10, 2, 2, 10, 
	2, 2, 2, 10, 2, 10, 6, 6, 
	6, 6, 0, 10, 1, 1, 1, 6, 
	7, 8, 6, 0, 10, 1, 1, 6, 
	1, 10, 2, 4, 2, 2, 3, 2, 
	2, 2, 2, 1, 1, 2, 2, 2, 
	1, 2, 4, 4, 1, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 1, 1, 
	2, 2, 2, 1, 1, 1, 2, 1, 
	1, 2, 2, 2, 1, 1, 1, 2, 
	2, 1, 1, 1, 1, 2, 1, 1, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 4, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	4, 2, 1, 2, 2, 2, 3, 3, 
	2, 2, 2, 2, 1, 1, 2, 2, 
	2, 1, 2, 1, 1, 2, 1, 1, 
	2, 12, 2, 2, 2, 2, 2, 2, 
	2, 6, 2, 2, 2, 2, 2, 2, 
	4, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 4, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 1, 3, 3, 2, 3, 6, 
	9, 6, 6, 6, 6, 16, 6, 16, 
	6, 16, 6, 12, 2, 10, 2, 1, 
	6, 10, 6, 1, 6, 10, 6, 1, 
	6, 10, 6, 1, 1, 1, 2, 6, 
	6, 2, 1, 3, 6, 9, 2, 1, 
	0, 6, 9, 2, 1, 2, 10, 10, 
	1, 1, 3, 0, 6, 8, 6, 8, 
	7, 8, 6, 6, 6, 8, 6, 8, 
	7, 8, 6, 7, 0, 12, 10, 12, 
	10, 12, 10, 12, 10, 1, 11, 11, 
	1, 11, 11, 10, 1, 11, 11, 10, 
	1, 11, 11, 10, 1, 6, 1, 6, 
	6, 1, 1, 1, 6, 1, 6, 6, 
	1, 1, 0, 6, 6, 6, 6, 6, 
	9, 2, 1, 1, 1, 0, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 9, 
	2, 1, 1, 1, 1, 1, 0, 6, 
	6, 6, 6, 6, 7, 2, 1, 1, 
	1, 13, 2, 1, 1, 1, 0, 10, 
	1, 1, 1, 1, 0, 6, 6, 6, 
	6, 6, 6, 0, 10, 1, 1, 1, 
	1, 0, 6, 6, 6, 6, 0, 10, 
	1, 1, 1, 0, 6, 10, 6, 6, 
	6, 7, 34, 7, 2, 1, 14, 1, 
	35, 3, 1, 1, 6, 6, 6, 7, 
	35, 1, 1, 6, 6, 6, 7, 35, 
	1, 1, 6, 6, 6, 9, 34, 1, 
	1, 1, 30, 12, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	9, 6, 7, 2, 1, 1, 1, 1, 
	1, 1, 1, 1, 2, 2, 6, 2, 
	2, 2, 6, 2, 6, 8, 2, 6, 
	4, 2, 2, 2, 2, 6, 6, 2, 
	2, 6, 2, 2, 2, 6, 6, 2, 
	2, 2, 6, 4, 2, 2, 6, 2, 
	2, 2, 6, 6, 2, 2, 2, 1, 
	6, 1, 6, 2, 2, 2, 2, 6, 
	2, 2, 2, 2, 2, 2, 2, 6, 
	4, 2, 6, 6, 8, 1, 6, 1, 
	6, 6, 2, 6, 6, 4, 2, 2, 
	2, 6, 6, 6, 2, 2, 2, 6, 
	2, 6, 8, 2, 7, 8, 2, 2, 
	2, 2, 6, 2, 2, 6, 6, 6, 
	2, 2, 2, 6, 6, 8, 2, 6, 
	2, 6, 2, 6, 2, 2, 2, 6, 
	6, 2, 2, 6, 2, 6, 2, 2, 
	0, 6, 2, 2, 6, 3, 2, 2, 
	0, 6, 6, 6, 6, 6, 7, 2, 
	1, 1, 1, 1, 2, 0, 6, 6, 
	6, 6, 6, 7, 6, 6, 0, 1, 
	0, 1, 1, 0, 1, 2, 2, 1, 
	1, 1, 1, 1, 1, 0, 6, 1, 
	1, 1, 0, 6, 6, 6, 6, 6, 
	7, 2, 0, 2, 1, 1, 1, 0, 
	6, 6, 6, 6, 6, 6, 0, 10, 
	1, 1, 1, 1, 0, 6, 7, 3, 
	1, 0, 6, 6, 0, 0, 0, 1, 
	0, 0, 0, 0, 3, 1, 0, 0, 
	1, 0, 0, 3, 0, 0, 1, 0, 
	0, 3, 0, 6, 6, 6, 6, 2, 
	1, 1, 0, 6, 6, 6, 6, 2, 
	1, 1, 0, 6, 6, 6, 9, 2, 
	1, 1, 12, 17, 42, 42, 12, 42, 
	12, 17, 47, 47, 0, 0, 0, 4, 
	0, 0, 0, 10, 0, 11, 1, 0, 
	40, 1, 0, 10, 1, 6, 0, 10, 
	1, 1, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 10, 1, 0, 0, 10, 
	1, 10, 1, 10, 1, 10, 1, 0, 
	0, 0, 0, 13, 1, 0, 10, 1, 
	0, 10, 1, 0, 14, 1, 7, 1, 
	35, 3, 0, 0, 0, 0, 0, 0, 
	0, 10, 1, 0, 0, 0, 0, 0, 
	0, 0
};

static const char _zone_scanner_range_lengths[] = {
	0, 1, 1, 0, 0, 3, 0, 0, 
	0, 0, 1, 3, 3, 2, 4, 1, 
	0, 0, 0, 0, 1, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 1, 1, 0, 0, 0, 1, 1, 
	0, 0, 1, 1, 1, 1, 1, 1, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	2, 0, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 0, 4, 0, 3, 1, 
	2, 3, 3, 4, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 2, 0, 0, 0, 0, 0, 
	0, 2, 0, 0, 2, 0, 1, 1, 
	2, 0, 4, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 3, 1, 1, 1, 2, 2, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	2, 3, 3, 2, 2, 2, 2, 1, 
	4, 1, 1, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 2, 2, 0, 2, 0, 0, 3, 
	5, 5, 1, 1, 1, 5, 2, 2, 
	2, 4, 3, 1, 1, 4, 1, 2, 
	3, 1, 1, 1, 0, 1, 1, 0, 
	0, 1, 1, 1, 1, 0, 3, 3, 
	3, 0, 0, 1, 1, 1, 3, 0, 
	1, 0, 3, 0, 3, 3, 3, 0, 
	0, 1, 1, 1, 3, 0, 2, 3, 
	1, 1, 3, 3, 3, 3, 3, 1, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 1, 1, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	1, 3, 3, 3, 1, 1, 1, 0, 
	1, 1, 3, 3, 3, 1, 1, 1, 
	1, 1, 3, 0, 2, 0, 2, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 2, 0, 0, 0, 0, 0, 0, 
	0, 2, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 2, 0, 
	0, 0, 0, 0, 0, 0, 0, 2, 
	0, 0, 0, 0, 0, 2, 0, 0, 
	2, 0, 0, 0, 0, 0, 0, 0, 
	2, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 2, 0, 0, 2, 0, 0, 
	0, 0, 0, 2, 0, 0, 0, 2, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 2, 0, 0, 2, 0, 0, 
	2, 1, 3, 0, 0, 0, 0, 0, 
	2, 0, 0, 0, 0, 0, 0, 2, 
	0, 0, 2, 0, 0, 2, 0, 0, 
	0, 2, 0, 0, 2, 0, 0, 2, 
	0, 0, 2, 0, 0, 0, 2, 0, 
	0, 2, 1, 3, 3, 2, 3, 0, 
	3, 0, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 3, 3, 1, 3, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 2, 0, 
	3, 2, 1, 3, 0, 3, 2, 1, 
	1, 1, 3, 2, 1, 2, 0, 3, 
	1, 3, 5, 1, 1, 1, 1, 1, 
	1, 0, 0, 1, 1, 1, 1, 1, 
	1, 0, 0, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 0, 1, 1, 1, 
	1, 1, 1, 0, 1, 1, 1, 0, 
	1, 1, 1, 0, 1, 0, 1, 1, 
	1, 1, 1, 1, 0, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	3, 2, 1, 1, 1, 1, 1, 1, 
	1, 3, 0, 3, 0, 3, 0, 3, 
	2, 1, 1, 1, 1, 1, 3, 0, 
	1, 1, 3, 0, 3, 0, 1, 1, 
	1, 0, 0, 0, 1, 1, 1, 1, 
	1, 0, 3, 3, 1, 1, 3, 0, 
	1, 1, 3, 3, 3, 1, 1, 1, 
	1, 1, 1, 1, 1, 3, 3, 3, 
	1, 1, 1, 1, 1, 0, 0, 1, 
	1, 0, 0, 3, 0, 1, 0, 1, 
	3, 3, 1, 1, 0, 1, 1, 1, 
	1, 1, 1, 0, 1, 1, 3, 3, 
	1, 1, 0, 1, 1, 3, 0, 1, 
	1, 1, 0, 0, 3, 0, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	3, 0, 3, 0, 1, 1, 1, 1, 
	1, 1, 1, 1, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	1, 1, 0, 0, 0, 3, 2, 2, 
	1, 1, 1, 1, 3, 0, 3, 0, 
	1, 1, 1, 3, 0, 1, 1, 1, 
	1, 1, 1, 3, 0, 3, 3, 3, 
	3, 3, 3, 3, 3, 5, 2, 0, 
	0, 0, 0, 0, 1, 3, 3, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	3, 2, 3, 5, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 3, 3, 3, 
	1, 1, 1, 1, 1, 1, 1, 3, 
	1, 1, 1, 3, 3, 3, 3, 0, 
	3, 3, 3, 3, 2, 1, 3, 3, 
	0, 3, 3, 2, 3, 3, 0, 3, 
	3, 2, 1, 1, 1, 1, 3, 2, 
	1, 1, 1, 1, 3, 0, 3, 2, 
	1, 1, 1, 1, 3, 0, 3, 2, 
	1, 1, 3, 8, 3, 4, 3, 4, 
	3, 8, 9, 9, 0, 0, 0, 4, 
	0, 0, 0, 3, 0, 3, 1, 0, 
	0, 1, 0, 3, 1, 3, 0, 3, 
	1, 1, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 3, 1, 0, 0, 0, 
	1, 1, 1, 1, 1, 1, 1, 0, 
	0, 0, 0, 0, 1, 0, 3, 1, 
	0, 3, 1, 0, 0, 1, 3, 1, 
	3, 3, 0, 0, 0, 0, 0, 0, 
	0, 3, 1, 0, 0, 0, 0, 0, 
	0, 0
};

static const short _zone_scanner_index_offsets[] = {
	0, 0, 40, 58, 95, 112, 127, 136, 
	145, 147, 149, 152, 169, 186, 191, 240, 
	260, 299, 308, 311, 322, 336, 350, 355, 
	358, 361, 364, 367, 378, 389, 392, 395, 
	406, 409, 412, 415, 426, 433, 436, 439, 
	442, 453, 458, 461, 464, 475, 478, 481, 
	484, 495, 506, 509, 512, 515, 517, 528, 
	530, 541, 544, 547, 550, 553, 564, 569, 
	576, 613, 616, 619, 622, 625, 628, 631, 
	634, 645, 650, 653, 664, 675, 684, 686, 
	697, 699, 710, 721, 724, 735, 746, 751, 
	754, 757, 760, 771, 782, 789, 792, 795, 
	798, 809, 812, 823, 836, 839, 851, 864, 
	867, 870, 873, 876, 887, 890, 893, 904, 
	911, 922, 925, 928, 931, 942, 953, 962, 
	965, 976, 979, 990, 993, 1004, 1007, 1010, 
	1013, 1024, 1031, 1034, 1037, 1048, 1051, 1062, 
	1065, 1068, 1070, 1082, 1085, 1088, 1099, 1102, 
	1142, 1147, 1154, 1192, 1210, 1218, 1230, 1238, 
	1241, 1243, 1250, 1253, 1256, 1259, 1262, 1265, 
	1268, 1273, 1280, 1318, 1321, 1339, 1377, 1380, 
	1388, 1400, 1408, 1411, 1428, 1475, 1494, 1511, 
	1551, 1556, 1568, 1580, 1629, 1646, 1661, 1672, 
	1683, 1696, 1709, 1726, 1739, 1754, 1765, 1780, 
	1797, 1812, 1823, 1828, 1843, 1846, 1849, 1852, 
	1855, 1858, 1863, 1866, 1869, 1874, 1883, 1903, 
	1943, 1948, 1967, 2016, 2033, 2048, 2059, 2070, 
	2083, 2096, 2113, 2126, 2141, 2152, 2167, 2184, 
	2199, 2210, 2223, 2263, 2277, 2291, 2306, 2319, 
	2322, 2325, 2336, 2339, 2342, 2345, 2356, 2359, 
	2370, 2375, 2387, 2399, 2414, 2429, 2444, 2457, 
	2460, 2509, 2523, 2537, 2552, 2565, 2574, 2583, 
	2594, 2605, 2620, 2631, 2644, 2653, 2666, 2681, 
	2694, 2703, 2708, 2713, 2724, 2729, 2731, 2733, 
	2742, 2754, 2766, 2768, 2770, 2772, 2784, 2789, 
	2794, 2799, 2808, 2812, 2814, 2816, 2825, 2831, 
	2836, 2840, 2842, 2844, 2850, 2857, 2865, 2885, 
	2894, 2896, 2906, 2918, 2928, 2931, 2938, 2952, 
	2960, 2976, 2985, 2987, 2989, 2991, 2993, 3001, 
	3010, 3013, 3020, 3030, 3039, 3055, 3063, 3079, 
	3088, 3090, 3092, 3094, 3096, 3104, 3113, 3118, 
	3132, 3135, 3138, 3143, 3148, 3154, 3160, 3175, 
	3178, 3180, 3191, 3232, 3249, 3252, 3255, 3266, 
	3269, 3278, 3281, 3292, 3297, 3300, 3303, 3306, 
	3309, 3320, 3331, 3334, 3337, 3348, 3351, 3354, 
	3357, 3368, 3375, 3378, 3381, 3384, 3395, 3400, 
	3403, 3406, 3417, 3420, 3423, 3426, 3437, 3448, 
	3451, 3454, 3457, 3459, 3470, 3472, 3483, 3486, 
	3489, 3492, 3495, 3506, 3509, 3512, 3515, 3518, 
	3521, 3524, 3527, 3538, 3543, 3546, 3557, 3568, 
	3577, 3579, 3590, 3592, 3603, 3614, 3617, 3628, 
	3639, 3644, 3647, 3650, 3653, 3664, 3675, 3682, 
	3685, 3688, 3691, 3702, 3705, 3716, 3729, 3732, 
	3744, 3757, 3760, 3763, 3766, 3769, 3780, 3783, 
	3786, 3797, 3804, 3815, 3818, 3821, 3824, 3835, 
	3846, 3855, 3858, 3869, 3872, 3883, 3886, 3897, 
	3900, 3903, 3906, 3917, 3924, 3927, 3930, 3941, 
	3944, 3955, 3958, 3961, 3963, 3975, 3978, 3981, 
	3992, 3995, 3998, 4001, 4012, 4015, 4026, 4033, 
	4041, 4049, 4059, 4063, 4077, 4080, 4083, 4086, 
	4093, 4102, 4112, 4122, 4126, 4140, 4143, 4146, 
	4154, 4157, 4169, 4175, 4180, 4185, 4188, 4194, 
	4197, 4200, 4203, 4206, 4208, 4210, 4213, 4216, 
	4219, 4221, 4226, 4231, 4236, 4238, 4241, 4244, 
	4247, 4250, 4255, 4258, 4261, 4264, 4267, 4269, 
	4271, 4274, 4277, 4280, 4282, 4284, 4286, 4291, 
	4293, 4295, 4298, 4301, 4304, 4306, 4308, 4310, 
	4315, 4318, 4320, 4322, 4324, 4326, 4331, 4333, 
	4335, 4340, 4343, 4346, 4349, 4352, 4355, 4358, 
	4361, 4366, 4369, 4372, 4375, 4378, 4381, 4384, 
	4389, 4392, 4395, 4400, 4403, 4406, 4411, 4414, 
	4417, 4422, 4425, 4427, 4432, 4435, 4438, 4442, 
	4448, 4451, 4454, 4457, 4460, 4462, 4464, 4467, 
	4470, 4473, 4475, 4480, 4482, 4484, 4489, 4491, 
	4493, 4498, 4512, 4518, 4521, 4524, 4527, 4530, 
	4533, 4538, 4545, 4548, 4551, 4554, 4557, 4560, 
	4565, 4570, 4573, 4578, 4581, 4584, 4589, 4592, 
	4595, 4598, 4603, 4606, 4609, 4614, 4619, 4622, 
	4627, 4630, 4633, 4638, 4641, 4644, 4647, 4652, 
	4655, 4658, 4663, 4666, 4673, 4680, 4685, 4692, 
	4699, 4712, 4719, 4727, 4735, 4743, 4761, 4769, 
	4787, 4795, 4813, 4821, 4837, 4843, 4855, 4861, 
	4864, 4872, 4884, 4892, 4895, 4903, 4915, 4923, 
	4926, 4934, 4946, 4954, 4957, 4960, 4963, 4968, 
	4975, 4985, 4990, 4993, 5000, 5007, 5020, 5025, 
	5028, 5030, 5038, 5051, 5056, 5059, 5064, 5075, 
	5089, 5092, 5097, 5106, 5108, 5116, 5126, 5134, 
	5144, 5153, 5162, 5169, 5177, 5185, 5195, 5203, 
	5213, 5222, 5231, 5238, 5247, 5249, 5263, 5275, 
	5289, 5301, 5315, 5327, 5341, 5352, 5355, 5368, 
	5381, 5384, 5397, 5410, 5421, 5424, 5437, 5450, 
	5461, 5464, 5477, 5490, 5501, 5504, 5511, 5514, 
	5522, 5530, 5533, 5536, 5539, 5546, 5549, 5557, 
	5565, 5568, 5571, 5573, 5581, 5589, 5597, 5605, 
	5613, 5626, 5631, 5634, 5637, 5640, 5642, 5650, 
	5658, 5666, 5676, 5683, 5693, 5700, 5710, 5717, 
	5730, 5735, 5738, 5741, 5744, 5747, 5750, 5754, 
	5761, 5769, 5777, 5787, 5794, 5805, 5808, 5811, 
	5814, 5817, 5831, 5834, 5836, 5839, 5842, 5844, 
	5856, 5859, 5861, 5866, 5871, 5873, 5881, 5891, 
	5898, 5906, 5914, 5924, 5928, 5942, 5945, 5948, 
	5951, 5954, 5956, 5964, 5972, 5980, 5990, 5994, 
	6008, 6011, 6014, 6017, 6019, 6027, 6038, 6045, 
	6053, 6061, 6069, 6104, 6115, 6118, 6121, 6136, 
	6139, 6178, 6185, 6188, 6191, 6198, 6206, 6214, 
	6223, 6260, 6263, 6266, 6273, 6281, 6289, 6300, 
	6339, 6342, 6345, 6352, 6360, 6368, 6381, 6416, 
	6419, 6422, 6425, 6456, 6469, 6479, 6486, 6494, 
	6502, 6510, 6518, 6526, 6534, 6542, 6550, 6558, 
	6566, 6579, 6586, 6597, 6600, 6603, 6606, 6609, 
	6612, 6615, 6618, 6621, 6624, 6627, 6630, 6637, 
	6640, 6643, 6646, 6653, 6656, 6663, 6672, 6675, 
	6682, 6687, 6690, 6693, 6696, 6699, 6706, 6713, 
	6716, 6719, 6726, 6729, 6732, 6735, 6742, 6749, 
	6752, 6755, 6758, 6765, 6770, 6773, 6776, 6783, 
	6786, 6789, 6792, 6799, 6806, 6809, 6812, 6815, 
	6817, 6824, 6826, 6833, 6836, 6839, 6842, 6845, 
	6852, 6855, 6858, 6861, 6864, 6867, 6870, 6873, 
	6880, 6885, 6888, 6895, 6902, 6911, 6913, 6920, 
	6922, 6929, 6936, 6939, 6946, 6953, 6958, 6961, 
	6964, 6967, 6974, 6981, 6988, 6991, 6994, 6997, 
	7004, 7007, 7014, 7023, 7026, 7034, 7043, 7046, 
	7049, 7052, 7055, 7062, 7065, 7068, 7075, 7082, 
	7089, 7092, 7095, 7098, 7105, 7112, 7121, 7124, 
	7131, 7134, 7141, 7144, 7151, 7154, 7157, 7160, 
	7167, 7174, 7177, 7180, 7187, 7190, 7197, 7200, 
	7203, 7205, 7213, 7216, 7219, 7226, 7233, 7238, 
	7243, 7245, 7253, 7261, 7269, 7279, 7286, 7297, 
	7300, 7303, 7306, 7309, 7314, 7317, 7319, 7327, 
	7335, 7343, 7351, 7359, 7370, 7377, 7387, 7391, 
	7396, 7400, 7405, 7410, 7414, 7419, 7427, 7432, 
	7434, 7436, 7438, 7440, 7442, 7445, 7449, 7459, 
	7462, 7465, 7468, 7470, 7478, 7486, 7494, 7502, 
	7510, 7521, 7526, 7530, 7538, 7541, 7544, 7547, 
	7549, 7557, 7565, 7573, 7581, 7589, 7599, 7603, 
	7617, 7620, 7623, 7626, 7629, 7631, 7639, 7648, 
	7655, 7658, 7660, 7668, 7678, 7682, 7686, 7690, 
	7692, 7696, 7700, 7704, 7708, 7714, 7717, 7721, 
	7725, 7727, 7731, 7735, 7741, 7745, 7749, 7751, 
	7755, 7759, 7765, 7767, 7775, 7783, 7791, 7801, 
	7806, 7809, 7812, 7814, 7822, 7832, 7839, 7849, 
	7854, 7857, 7860, 7862, 7870, 7880, 7887, 7900, 
	7905, 7908, 7911, 7927, 7953, 7999, 8046, 8062, 
	8109, 8125, 8151, 8208, 8265, 8266, 8267, 8268, 
	8277, 8278, 8279, 8280, 8294, 8295, 8310, 8313, 
	8314, 8355, 8358, 8359, 8373, 8376, 8386, 8387, 
	8401, 8404, 8407, 8408, 8409, 8410, 8411, 8412, 
	8413, 8414, 8415, 8416, 8430, 8433, 8434, 8435, 
	8446, 8449, 8461, 8464, 8476, 8479, 8491, 8494, 
	8495, 8496, 8497, 8498, 8512, 8515, 8516, 8530, 
	8533, 8534, 8548, 8551, 8552, 8567, 8570, 8581, 
	8584, 8623, 8630, 8631, 8632, 8633, 8634, 8635, 
	8636, 8637, 8651, 8654, 8655, 8656, 8657, 8658, 
	8659, 8660
};

static const short _zone_scanner_indicies[] = {
	1, 1, 2, 3, 5, 6, 7, 8, 
	9, 10, 11, 12, 13, 14, 15, 16, 
	17, 18, 19, 5, 6, 7, 8, 9, 
	10, 11, 12, 13, 14, 15, 16, 17, 
	18, 19, 20, 21, 22, 23, 4, 0, 
	25, 25, 26, 27, 29, 30, 31, 32, 
	33, 29, 30, 31, 32, 33, 34, 35, 
	28, 24, 37, 37, 38, 39, 40, 41, 
	42, 43, 44, 45, 46, 47, 48, 49, 
	50, 51, 52, 53, 54, 40, 41, 42, 
	43, 44, 45, 46, 47, 48, 49, 50, 
	51, 52, 53, 54, 55, 56, 36, 58, 
	58, 59, 60, 61, 62, 63, 61, 62, 
	63, 64, 65, 66, 66, 67, 68, 57, 
	70, 70, 72, 73, 74, 75, 76, 69, 
	69, 77, 78, 69, 69, 69, 71, 80, 
	80, 81, 82, 83, 84, 83, 84, 79, 
	86, 86, 87, 88, 89, 90, 89, 90, 
	85, 92, 91, 94, 93, 96, 95, 71, 
	97, 97, 98, 99, 74, 83, 84, 83, 
	100, 101, 102, 83, 103, 69, 69, 69, 
	79, 104, 104, 105, 106, 74, 89, 90, 
	89, 107, 108, 109, 89, 110, 69, 69, 
	69, 79, 92, 112, 91, 111, 79, 113, 
	113, 115, 116, 69, 118, 119, 120, 121, 
	122, 123, 124, 125, 126, 127, 128, 129, 
	130, 131, 132, 74, 118, 119, 120, 121, 
	122, 123, 124, 125, 126, 127, 128, 129, 
	130, 131, 132, 20, 21, 133, 134, 135, 
	136, 137, 138, 69, 69, 117, 69, 114, 
	140, 140, 141, 142, 29, 30, 31, 32, 
	33, 29, 30, 31, 32, 33, 83, 84, 
	143, 144, 28, 139, 146, 146, 147, 148, 
	40, 41, 42, 43, 44, 45, 46, 47, 
	48, 49, 50, 51, 52, 53, 54, 40, 
	41, 42, 43, 44, 45, 46, 47, 48, 
	49, 50, 51, 52, 53, 54, 89, 90, 
	149, 150, 145, 151, 152, 153, 154, 151, 
	152, 153, 154, 36, 155, 155, 36, 156, 
	156, 157, 158, 159, 160, 161, 161, 162, 
	163, 57, 80, 83, 80, 81, 82, 84, 
	164, 83, 164, 165, 166, 167, 95, 79, 
	86, 89, 86, 87, 88, 90, 168, 89, 
	168, 169, 170, 111, 95, 79, 171, 172, 
	171, 172, 36, 173, 173, 36, 174, 174, 
	36, 175, 175, 36, 176, 176, 36, 177, 
	177, 178, 179, 180, 181, 182, 182, 183, 
	184, 57, 185, 185, 186, 187, 188, 189, 
	190, 190, 191, 192, 57, 193, 193, 36, 
	194, 194, 36, 195, 195, 196, 197, 198, 
	199, 200, 200, 201, 202, 57, 203, 203, 
	36, 204, 204, 36, 205, 205, 36, 206, 
	206, 207, 208, 209, 210, 211, 211, 212, 
	213, 57, 214, 215, 216, 214, 215, 216, 
	36, 217, 217, 36, 218, 218, 36, 219, 
	219, 36, 220, 220, 221, 222, 223, 224, 
	225, 225, 226, 227, 57, 228, 229, 228, 
	229, 36, 230, 230, 36, 231, 231, 36, 
	232, 232, 233, 234, 235, 236, 237, 237, 
	238, 239, 57, 240, 240, 36, 241, 241, 
	36, 242, 242, 36, 243, 243, 244, 245, 
	246, 247, 248, 248, 249, 250, 57, 251, 
	251, 252, 253, 254, 255, 256, 256, 257, 
	258, 57, 259, 259, 36, 260, 260, 36, 
	261, 262, 36, 263, 36, 264, 264, 265, 
	266, 267, 268, 269, 269, 270, 271, 57, 
	272, 36, 273, 273, 274, 275, 276, 277, 
	278, 278, 279, 280, 57, 281, 281, 36, 
	282, 282, 36, 283, 283, 36, 284, 284, 
	36, 285, 285, 286, 287, 288, 289, 290, 
	290, 291, 292, 57, 293, 294, 293, 294, 
	36, 295, 295, 296, 297, 298, 299, 36, 
	300, 300, 301, 302, 303, 304, 305, 306, 
	307, 308, 309, 310, 311, 312, 313, 314, 
	315, 316, 317, 303, 304, 305, 306, 307, 
	308, 309, 310, 311, 312, 313, 314, 315, 
	316, 317, 318, 319, 36, 294, 294, 36, 
	320, 320, 36, 321, 321, 36, 322, 322, 
	36, 323, 323, 36, 324, 324, 36, 325, 
	325, 36, 326, 326, 327, 328, 329, 330, 
	331, 331, 332, 333, 57, 334, 335, 334, 
	335, 36, 336, 336, 36, 337, 337, 338, 
	339, 340, 341, 342, 342, 343, 344, 57, 
	345, 345, 346, 347, 348, 349, 350, 350, 
	351, 352, 57, 353, 354, 355, 356, 357, 
	355, 356, 357, 36, 358, 36, 359, 359, 
	360, 361, 362, 363, 364, 364, 365, 366, 
	57, 367, 36, 368, 368, 369, 370, 371, 
	372, 373, 373, 374, 375, 57, 376, 376, 
	377, 378, 379, 380, 381, 381, 382, 383, 
	57, 384, 384, 36, 385, 385, 386, 387, 
	388, 389, 390, 390, 391, 392, 57, 393, 
	393, 394, 395, 396, 397, 398, 398, 399, 
	400, 57, 401, 402, 401, 402, 36, 403, 
	403, 36, 404, 404, 36, 405, 405, 36, 
	406, 406, 407, 408, 409, 410, 411, 411, 
	412, 413, 57, 414, 414, 415, 416, 417, 
	418, 419, 419, 420, 421, 57, 422, 423, 
	424, 422, 423, 424, 36, 425, 425, 36, 
	426, 426, 36, 427, 427, 36, 428, 428, 
	429, 430, 431, 432, 433, 433, 434, 435, 
	57, 436, 436, 36, 437, 437, 438, 439, 
	440, 441, 442, 442, 443, 444, 57, 445, 
	445, 446, 447, 448, 448, 449, 450, 451, 
	451, 452, 453, 57, 454, 454, 36, 455, 
	455, 456, 457, 458, 459, 460, 461, 461, 
	462, 463, 57, 464, 464, 465, 466, 467, 
	467, 468, 469, 470, 470, 471, 472, 57, 
	473, 473, 36, 474, 474, 36, 475, 475, 
	36, 476, 476, 36, 477, 477, 478, 479, 
	480, 481, 482, 482, 483, 484, 57, 485, 
	485, 36, 486, 486, 36, 487, 487, 488, 
	489, 490, 491, 492, 492, 493, 494, 57, 
	495, 496, 497, 495, 496, 497, 36, 498, 
	498, 499, 500, 501, 502, 503, 503, 504, 
	505, 57, 506, 506, 36, 507, 507, 36, 
	508, 508, 36, 509, 509, 510, 511, 512, 
	513, 514, 514, 515, 516, 57, 517, 517, 
	518, 519, 520, 521, 522, 522, 523, 524, 
	57, 525, 526, 527, 528, 525, 526, 527, 
	528, 36, 529, 529, 36, 530, 530, 531, 
	532, 533, 534, 535, 535, 536, 537, 57, 
	538, 538, 36, 539, 539, 540, 541, 542, 
	543, 544, 544, 545, 546, 57, 547, 547, 
	36, 548, 548, 549, 550, 551, 552, 553, 
	553, 554, 555, 57, 556, 556, 36, 557, 
	557, 36, 558, 558, 36, 559, 559, 560, 
	561, 562, 563, 564, 564, 565, 566, 57, 
	567, 568, 569, 567, 568, 569, 36, 570, 
	570, 36, 571, 571, 36, 572, 572, 573, 
	574, 575, 576, 577, 577, 578, 579, 57, 
	580, 580, 36, 581, 581, 582, 583, 584, 
	585, 586, 586, 587, 588, 57, 589, 589, 
	36, 590, 590, 36, 592, 591, 594, 594, 
	595, 596, 598, 599, 600, 600, 601, 602, 
	597, 593, 603, 603, 36, 604, 604, 36, 
	605, 605, 606, 607, 608, 609, 610, 610, 
	611, 612, 57, 614, 613, 36, 615, 615, 
	616, 617, 5, 6, 7, 8, 9, 10, 
	11, 12, 13, 14, 15, 16, 17, 18, 
	19, 5, 6, 7, 8, 9, 10, 11, 
	12, 13, 14, 15, 16, 17, 18, 19, 
	20, 21, 618, 619, 4, 0, 620, 294, 
	620, 294, 36, 621, 621, 622, 623, 624, 
	625, 36, 626, 626, 627, 628, 630, 631, 
	632, 633, 634, 635, 636, 637, 638, 639, 
	640, 641, 642, 643, 644, 630, 631, 632, 
	633, 634, 635, 636, 637, 638, 639, 640, 
	641, 642, 643, 644, 645, 646, 629, 591, 
	647, 647, 648, 649, 651, 652, 653, 654, 
	655, 651, 652, 653, 654, 655, 656, 657, 
	650, 24, 647, 647, 648, 649, 656, 657, 
	658, 24, 660, 661, 662, 663, 664, 660, 
	661, 662, 663, 664, 659, 24, 665, 665, 
	666, 667, 669, 670, 668, 24, 672, 671, 
	36, 674, 673, 676, 677, 678, 676, 677, 
	678, 675, 679, 679, 675, 680, 680, 675, 
	681, 681, 675, 682, 682, 675, 683, 683, 
	675, 684, 684, 675, 685, 685, 685, 685, 
	675, 687, 687, 688, 689, 690, 691, 686, 
	692, 692, 693, 694, 5, 6, 7, 8, 
	9, 10, 11, 12, 13, 14, 15, 16, 
	17, 18, 19, 5, 6, 7, 8, 9, 
	10, 11, 12, 13, 14, 15, 16, 17, 
	18, 19, 695, 696, 4, 591, 699, 697, 
	698, 701, 701, 702, 703, 29, 30, 31, 
	32, 33, 29, 30, 31, 32, 33, 704, 
	705, 28, 700, 706, 706, 707, 708, 5, 
	6, 7, 8, 9, 10, 11, 12, 13, 
	14, 15, 16, 17, 18, 19, 5, 6, 
	7, 8, 9, 10, 11, 12, 13, 14, 
	15, 16, 17, 18, 19, 709, 710, 4, 
	591, 712, 711, 36, 25, 25, 26, 27, 
	34, 35, 713, 24, 715, 716, 717, 718, 
	719, 715, 716, 717, 718, 719, 714, 24, 
	720, 720, 721, 722, 724, 725, 723, 24, 
	727, 726, 36, 729, 729, 730, 731, 61, 
	62, 63, 61, 62, 63, 732, 733, 66, 
	66, 734, 735, 728, 736, 736, 737, 738, 
	69, 118, 119, 120, 121, 122, 123, 124, 
	125, 126, 127, 128, 129, 130, 131, 132, 
	74, 118, 119, 120, 121, 122, 123, 124, 
	125, 126, 127, 128, 129, 130, 131, 132, 
	739, 740, 69, 69, 741, 742, 69, 69, 
	117, 69, 593, 744, 744, 745, 746, 61, 
	62, 63, 61, 62, 63, 83, 84, 747, 
	748, 749, 750, 751, 752, 743, 753, 753, 
	754, 755, 74, 89, 90, 756, 107, 108, 
	109, 757, 110, 69, 69, 69, 79, 758, 
	758, 759, 760, 5, 6, 7, 8, 9, 
	10, 11, 12, 13, 14, 15, 16, 17, 
	18, 19, 5, 6, 7, 8, 9, 10, 
	11, 12, 13, 14, 15, 16, 17, 18, 
	19, 89, 90, 761, 762, 4, 0, 92, 
	764, 91, 763, 85, 765, 765, 766, 767, 
	768, 769, 768, 769, 91, 91, 91, 79, 
	770, 770, 771, 772, 92, 91, 92, 91, 
	91, 91, 91, 85, 773, 773, 774, 775, 
	69, 118, 119, 120, 121, 122, 123, 124, 
	125, 126, 127, 128, 129, 130, 131, 132, 
	74, 118, 119, 120, 121, 122, 123, 124, 
	125, 126, 127, 128, 129, 130, 131, 132, 
	89, 90, 761, 776, 108, 109, 761, 777, 
	69, 69, 117, 69, 114, 80, 80, 81, 
	82, 151, 152, 153, 154, 151, 152, 153, 
	154, 83, 84, 83, 84, 743, 80, 80, 
	81, 82, 214, 215, 216, 214, 215, 216, 
	83, 84, 83, 84, 743, 80, 80, 81, 
	82, 259, 259, 83, 84, 83, 84, 743, 
	80, 80, 81, 82, 281, 281, 83, 84, 
	83, 84, 743, 80, 80, 81, 82, 620, 
	294, 620, 294, 83, 84, 83, 84, 743, 
	80, 80, 81, 82, 334, 335, 334, 335, 
	83, 84, 83, 84, 743, 80, 80, 81, 
	82, 353, 354, 355, 356, 357, 355, 356, 
	357, 83, 84, 83, 84, 743, 80, 80, 
	81, 82, 401, 402, 401, 402, 83, 84, 
	83, 84, 743, 80, 80, 81, 82, 422, 
	423, 424, 422, 423, 424, 83, 84, 83, 
	84, 743, 80, 80, 81, 82, 485, 485, 
	83, 84, 83, 84, 743, 80, 80, 81, 
	82, 495, 496, 497, 495, 496, 497, 83, 
	84, 83, 84, 743, 80, 80, 81, 82, 
	525, 526, 527, 528, 525, 526, 527, 528, 
	83, 84, 83, 84, 743, 80, 80, 81, 
	82, 567, 568, 569, 567, 568, 569, 83, 
	84, 83, 84, 743, 80, 80, 81, 82, 
	603, 603, 83, 84, 83, 84, 743, 92, 
	779, 91, 778, 79, 80, 80, 81, 82, 
	676, 677, 678, 676, 677, 678, 83, 84, 
	83, 84, 780, 781, 781, 675, 782, 782, 
	675, 783, 783, 675, 784, 784, 675, 785, 
	785, 675, 786, 786, 786, 786, 675, 787, 
	787, 675, 788, 788, 675, 789, 789, 789, 
	789, 675, 791, 791, 792, 793, 83, 84, 
	794, 795, 790, 797, 797, 798, 799, 29, 
	30, 31, 32, 33, 29, 30, 31, 32, 
	33, 83, 84, 800, 801, 28, 796, 802, 
	802, 803, 804, 5, 6, 7, 8, 9, 
	10, 11, 12, 13, 14, 15, 16, 17, 
	18, 19, 5, 6, 7, 8, 9, 10, 
	11, 12, 13, 14, 15, 16, 17, 18, 
	19, 89, 90, 805, 806, 4, 0, 92, 
	808, 91, 807, 145, 810, 810, 811, 812, 
	61, 62, 63, 61, 62, 63, 83, 84, 
	813, 814, 749, 750, 815, 816, 809, 817, 
	817, 818, 819, 69, 118, 119, 120, 121, 
	122, 123, 124, 125, 126, 127, 128, 129, 
	130, 131, 132, 74, 118, 119, 120, 121, 
	122, 123, 124, 125, 126, 127, 128, 129, 
	130, 131, 132, 89, 90, 820, 776, 108, 
	109, 821, 777, 69, 69, 117, 69, 114, 
	791, 791, 792, 793, 151, 152, 153, 154, 
	151, 152, 153, 154, 83, 84, 794, 795, 
	809, 791, 791, 792, 793, 214, 215, 216, 
	214, 215, 216, 83, 84, 794, 795, 809, 
	791, 791, 792, 793, 259, 259, 83, 84, 
	794, 795, 809, 791, 791, 792, 793, 281, 
	281, 83, 84, 794, 795, 809, 791, 791, 
	792, 793, 620, 294, 620, 294, 83, 84, 
	794, 795, 809, 791, 791, 792, 793, 334, 
	335, 334, 335, 83, 84, 794, 795, 809, 
	791, 791, 792, 793, 353, 354, 355, 356, 
	357, 355, 356, 357, 83, 84, 794, 795, 
	809, 791, 791, 792, 793, 401, 402, 401, 
	402, 83, 84, 794, 795, 809, 791, 791, 
	792, 793, 422, 423, 424, 422, 423, 424, 
	83, 84, 794, 795, 809, 791, 791, 792, 
	793, 485, 485, 83, 84, 794, 795, 809, 
	791, 791, 792, 793, 495, 496, 497, 495, 
	496, 497, 83, 84, 794, 795, 809, 791, 
	791, 792, 793, 525, 526, 527, 528, 525, 
	526, 527, 528, 83, 84, 794, 795, 809, 
	791, 791, 792, 793, 567, 568, 569, 567, 
	568, 569, 83, 84, 794, 795, 809, 791, 
	791, 792, 793, 603, 603, 83, 84, 794, 
	795, 809, 822, 822, 94, 824, 825, 93, 
	93, 826, 827, 93, 93, 93, 823, 828, 
	828, 829, 830, 5, 6, 7, 8, 9, 
	10, 11, 12, 13, 14, 15, 16, 17, 
	18, 19, 5, 6, 7, 8, 9, 10, 
	11, 12, 13, 14, 15, 16, 17, 18, 
	19, 83, 84, 831, 832, 4, 114, 80, 
	83, 80, 81, 82, 84, 833, 834, 833, 
	835, 836, 837, 697, 79, 86, 89, 86, 
	87, 88, 90, 838, 764, 838, 839, 840, 
	763, 697, 85, 765, 768, 765, 766, 767, 
	769, 841, 834, 841, 842, 843, 844, 91, 
	778, 79, 770, 92, 770, 771, 772, 845, 
	764, 845, 846, 847, 91, 778, 79, 848, 
	848, 36, 849, 849, 36, 850, 850, 851, 
	852, 853, 854, 855, 855, 856, 857, 57, 
	858, 858, 36, 859, 859, 36, 860, 860, 
	36, 861, 861, 862, 863, 864, 865, 866, 
	866, 867, 868, 57, 869, 869, 36, 870, 
	870, 871, 872, 873, 874, 875, 875, 876, 
	877, 57, 674, 879, 673, 878, 79, 880, 
	880, 881, 882, 883, 769, 883, 769, 673, 
	673, 673, 79, 884, 884, 885, 886, 887, 
	91, 887, 91, 673, 673, 673, 85, 880, 
	883, 880, 881, 882, 769, 888, 834, 888, 
	889, 890, 844, 673, 878, 79, 884, 887, 
	884, 885, 886, 91, 891, 764, 891, 892, 
	893, 778, 673, 878, 79, 765, 768, 765, 
	766, 767, 769, 894, 768, 894, 895, 896, 
	167, 91, 111, 79, 770, 92, 770, 771, 
	772, 897, 92, 897, 898, 899, 91, 111, 
	79, 901, 900, 71, 902, 902, 903, 904, 
	69, 118, 119, 120, 121, 122, 123, 124, 
	125, 126, 127, 128, 129, 130, 131, 132, 
	74, 118, 119, 120, 121, 122, 123, 124, 
	125, 126, 127, 128, 129, 130, 131, 132, 
	83, 84, 831, 905, 101, 102, 831, 906, 
	69, 69, 117, 69, 114, 80, 83, 80, 
	81, 82, 84, 907, 834, 907, 908, 909, 
	844, 900, 79, 86, 89, 86, 87, 88, 
	90, 910, 764, 910, 911, 912, 778, 900, 
	79, 687, 687, 688, 689, 151, 152, 153, 
	154, 151, 152, 153, 154, 690, 691, 913, 
	687, 687, 688, 689, 214, 215, 216, 214, 
	215, 216, 690, 691, 913, 687, 687, 688, 
	689, 259, 259, 690, 691, 913, 687, 687, 
	688, 689, 281, 281, 690, 691, 913, 687, 
	687, 688, 689, 620, 294, 620, 294, 690, 
	691, 913, 687, 687, 688, 689, 334, 335, 
	334, 335, 690, 691, 913, 687, 687, 688, 
	689, 353, 354, 355, 356, 357, 355, 356, 
	357, 690, 691, 913, 687, 687, 688, 689, 
	401, 402, 401, 402, 690, 691, 913, 687, 
	687, 688, 689, 422, 423, 424, 422, 423, 
	424, 690, 691, 913, 687, 687, 688, 689, 
	485, 485, 690, 691, 913, 687, 687, 688, 
	689, 495, 496, 497, 495, 496, 497, 690, 
	691, 913, 687, 687, 688, 689, 525, 526, 
	527, 528, 525, 526, 527, 528, 690, 691, 
	913, 687, 687, 688, 689, 567, 568, 569, 
	567, 568, 569, 690, 691, 913, 687, 687, 
	688, 689, 603, 603, 690, 691, 913, 674, 
	915, 673, 914, 85, 674, 917, 673, 916, 
	145, 687, 687, 688, 689, 293, 294, 293, 
	294, 690, 691, 913, 92, 919, 91, 918, 
	145, 921, 920, 923, 922, 925, 926, 927, 
	928, 925, 925, 925, 925, 924, 929, 930, 
	931, 929, 932, 930, 929, 929, 930, 930, 
	930, 924, 933, 934, 934, 933, 935, 934, 
	933, 933, 934, 934, 934, 924, 936, 930, 
	938, 937, 939, 937, 940, 941, 942, 940, 
	943, 941, 940, 940, 941, 941, 941, 937, 
	933, 933, 933, 933, 924, 944, 944, 944, 
	944, 924, 947, 948, 946, 946, 945, 949, 
	946, 949, 948, 949, 946, 950, 946, 945, 
	946, 952, 946, 951, 953, 951, 954, 951, 
	955, 956, 955, 958, 955, 956, 957, 956, 
	951, 959, 960, 961, 959, 959, 945, 949, 
	949, 949, 949, 962, 959, 963, 959, 951, 
	964, 951, 965, 951, 966, 967, 968, 966, 
	966, 951, 970, 970, 971, 972, 973, 974, 
	969, 970, 970, 971, 972, 973, 974, 976, 
	975, 978, 978, 979, 980, 982, 983, 984, 
	985, 986, 982, 983, 984, 985, 986, 987, 
	988, 987, 988, 981, 977, 990, 990, 991, 
	992, 993, 994, 993, 994, 989, 996, 995, 
	978, 978, 979, 980, 987, 988, 987, 988, 
	997, 977, 1000, 1001, 1002, 1003, 1004, 1000, 
	1001, 1002, 1003, 1004, 999, 998, 1005, 1005, 
	1006, 1007, 1009, 1010, 1009, 1010, 1008, 977, 
	1012, 1011, 969, 1014, 1014, 1015, 1016, 1017, 
	1018, 1013, 1014, 1014, 1015, 1016, 1019, 1020, 
	1021, 1019, 1017, 1018, 1019, 1019, 1019, 1013, 
	1022, 1023, 1024, 1022, 1022, 1022, 1022, 1013, 
	1026, 1026, 1027, 1028, 1029, 1029, 1030, 1029, 
	1031, 1032, 1031, 1032, 1029, 1029, 1029, 1025, 
	1033, 1033, 1034, 1035, 1036, 1037, 1036, 1037, 
	1025, 1039, 1038, 1040, 1022, 1042, 1041, 1043, 
	1041, 1044, 1045, 1046, 1044, 1044, 1044, 1044, 
	1041, 1026, 1026, 1027, 1028, 1031, 1032, 1031, 
	1032, 1025, 1048, 1047, 1013, 1049, 1049, 1050, 
	1051, 1052, 1053, 698, 1049, 1049, 1050, 1051, 
	1052, 1053, 1054, 1054, 1054, 1055, 1057, 1057, 
	1058, 1059, 1060, 1061, 1060, 1062, 1056, 1064, 
	1064, 1065, 1066, 1067, 1068, 1069, 1067, 1070, 
	1071, 1070, 1072, 1067, 1067, 1067, 1063, 1074, 
	1075, 1076, 1074, 1074, 1074, 1074, 1073, 1077, 
	1077, 1078, 1079, 1080, 1080, 1081, 1080, 1082, 
	1083, 1082, 1083, 1080, 1080, 1080, 1063, 1084, 
	1084, 1085, 1086, 1070, 1071, 1070, 1071, 85, 
	1088, 1087, 1089, 1074, 1091, 1090, 1092, 1090, 
	1093, 1094, 1095, 1093, 1093, 1093, 1093, 1090, 
	1077, 1077, 1078, 1079, 1082, 1083, 1082, 1083, 
	1063, 1088, 1097, 1087, 1096, 85, 1098, 1098, 
	1099, 1100, 1067, 1068, 1069, 1067, 1101, 1102, 
	1067, 1067, 1067, 1073, 1104, 1103, 698, 1106, 
	1105, 698, 1108, 1108, 1108, 1108, 1107, 1109, 
	1109, 1109, 1109, 1107, 1110, 1111, 1110, 1110, 
	1110, 1107, 1112, 1113, 1112, 1112, 1112, 1107, 
	1113, 1113, 1114, 1115, 1108, 1116, 1117, 1118, 
	1118, 1119, 1120, 1108, 1108, 1108, 1107, 1122, 
	1121, 1107, 1113, 1107, 1124, 1124, 1125, 1126, 
	1127, 1128, 1129, 1129, 1130, 1131, 1123, 1132, 
	1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 
	1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 
	1148, 1149, 1135, 1136, 1137, 1138, 1139, 1140, 
	1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 
	1149, 1150, 1151, 1152, 1152, 1153, 1154, 1123, 
	1155, 1155, 1156, 1157, 1158, 1159, 1160, 1158, 
	1159, 1160, 1161, 1162, 1163, 1163, 1164, 1165, 
	1123, 1166, 1166, 1123, 1167, 1167, 1123, 1168, 
	1168, 1169, 1170, 1171, 1172, 1173, 1173, 1174, 
	1175, 1123, 1177, 1176, 1123, 1178, 1179, 1180, 
	1181, 1178, 1179, 1180, 1181, 1123, 1182, 1182, 
	1123, 1183, 1183, 1184, 1185, 1186, 1187, 1188, 
	1188, 1189, 1190, 1123, 1191, 1192, 1191, 1192, 
	1123, 1193, 1193, 1123, 1194, 1194, 1123, 1195, 
	1195, 1123, 1196, 1196, 1123, 1197, 1197, 1198, 
	1199, 1200, 1201, 1202, 1202, 1203, 1204, 1123, 
	1205, 1205, 1206, 1207, 1208, 1209, 1210, 1210, 
	1211, 1212, 1123, 1213, 1213, 1123, 1214, 1214, 
	1123, 1215, 1215, 1216, 1217, 1218, 1219, 1220, 
	1220, 1221, 1222, 1123, 1223, 1223, 1123, 1224, 
	1224, 1123, 1225, 1225, 1123, 1226, 1226, 1227, 
	1228, 1229, 1230, 1231, 1231, 1232, 1233, 1123, 
	1234, 1235, 1236, 1234, 1235, 1236, 1123, 1237, 
	1237, 1123, 1238, 1238, 1123, 1239, 1239, 1123, 
	1240, 1240, 1241, 1242, 1243, 1244, 1245, 1245, 
	1246, 1247, 1123, 1248, 1249, 1248, 1249, 1123, 
	1250, 1250, 1123, 1251, 1251, 1123, 1252, 1252, 
	1253, 1254, 1255, 1256, 1257, 1257, 1258, 1259, 
	1123, 1260, 1260, 1123, 1261, 1261, 1123, 1262, 
	1262, 1123, 1263, 1263, 1264, 1265, 1266, 1267, 
	1268, 1268, 1269, 1270, 1123, 1271, 1271, 1272, 
	1273, 1274, 1275, 1276, 1276, 1277, 1278, 1123, 
	1279, 1279, 1123, 1280, 1280, 1123, 1281, 1282, 
	1123, 1283, 1123, 1284, 1284, 1285, 1286, 1287, 
	1288, 1289, 1289, 1290, 1291, 1123, 1292, 1123, 
	1293, 1293, 1294, 1295, 1296, 1297, 1298, 1298, 
	1299, 1300, 1123, 1301, 1301, 1123, 1302, 1302, 
	1123, 1303, 1303, 1123, 1304, 1304, 1123, 1305, 
	1305, 1306, 1307, 1308, 1309, 1310, 1310, 1311, 
	1312, 1123, 1313, 1313, 1123, 1314, 1314, 1123, 
	1315, 1315, 1123, 1316, 1316, 1123, 1317, 1317, 
	1123, 1318, 1318, 1123, 1319, 1319, 1123, 1320, 
	1320, 1321, 1322, 1323, 1324, 1325, 1325, 1326, 
	1327, 1123, 1328, 1329, 1328, 1329, 1123, 1330, 
	1330, 1123, 1331, 1331, 1332, 1333, 1334, 1335, 
	1336, 1336, 1337, 1338, 1123, 1339, 1339, 1340, 
	1341, 1342, 1343, 1344, 1344, 1345, 1346, 1123, 
	1347, 1348, 1349, 1350, 1351, 1349, 1350, 1351, 
	1123, 1352, 1123, 1353, 1353, 1354, 1355, 1356, 
	1357, 1358, 1358, 1359, 1360, 1123, 1361, 1123, 
	1362, 1362, 1363, 1364, 1365, 1366, 1367, 1367, 
	1368, 1369, 1123, 1370, 1370, 1371, 1372, 1373, 
	1374, 1375, 1375, 1376, 1377, 1123, 1378, 1378, 
	1123, 1379, 1379, 1380, 1381, 1382, 1383, 1384, 
	1384, 1385, 1386, 1123, 1387, 1387, 1388, 1389, 
	1390, 1391, 1392, 1392, 1393, 1394, 1123, 1395, 
	1396, 1395, 1396, 1123, 1397, 1397, 1123, 1398, 
	1398, 1123, 1399, 1399, 1123, 1400, 1400, 1401, 
	1402, 1403, 1404, 1405, 1405, 1406, 1407, 1123, 
	1408, 1408, 1409, 1410, 1411, 1412, 1413, 1413, 
	1414, 1415, 1123, 1416, 1417, 1418, 1416, 1417, 
	1418, 1123, 1419, 1419, 1123, 1420, 1420, 1123, 
	1421, 1421, 1123, 1422, 1422, 1423, 1424, 1425, 
	1426, 1427, 1427, 1428, 1429, 1123, 1430, 1430, 
	1123, 1431, 1431, 1432, 1433, 1434, 1435, 1436, 
	1436, 1437, 1438, 1123, 1439, 1439, 1440, 1441, 
	1442, 1442, 1443, 1444, 1445, 1445, 1446, 1447, 
	1123, 1448, 1448, 1123, 1449, 1449, 1450, 1451, 
	1452, 1453, 1454, 1455, 1455, 1456, 1457, 1123, 
	1458, 1458, 1459, 1460, 1461, 1461, 1462, 1463, 
	1464, 1464, 1465, 1466, 1123, 1467, 1467, 1123, 
	1468, 1468, 1123, 1469, 1469, 1123, 1470, 1470, 
	1123, 1471, 1471, 1472, 1473, 1474, 1475, 1476, 
	1476, 1477, 1478, 1123, 1479, 1479, 1123, 1480, 
	1480, 1123, 1481, 1481, 1482, 1483, 1484, 1485, 
	1486, 1486, 1487, 1488, 1123, 1489, 1490, 1491, 
	1489, 1490, 1491, 1123, 1492, 1492, 1493, 1494, 
	1495, 1496, 1497, 1497, 1498, 1499, 1123, 1500, 
	1500, 1123, 1501, 1501, 1123, 1502, 1502, 1123, 
	1503, 1503, 1504, 1505, 1506, 1507, 1508, 1508, 
	1509, 1510, 1123, 1511, 1511, 1512, 1513, 1514, 
	1515, 1516, 1516, 1517, 1518, 1123, 1519, 1520, 
	1521, 1522, 1519, 1520, 1521, 1522, 1123, 1523, 
	1523, 1123, 1524, 1524, 1525, 1526, 1527, 1528, 
	1529, 1529, 1530, 1531, 1123, 1532, 1532, 1123, 
	1533, 1533, 1534, 1535, 1536, 1537, 1538, 1538, 
	1539, 1540, 1123, 1541, 1541, 1123, 1542, 1542, 
	1543, 1544, 1545, 1546, 1547, 1547, 1548, 1549, 
	1123, 1550, 1550, 1123, 1551, 1551, 1123, 1552, 
	1552, 1123, 1553, 1553, 1554, 1555, 1556, 1557, 
	1558, 1558, 1559, 1560, 1123, 1561, 1562, 1563, 
	1561, 1562, 1563, 1123, 1564, 1564, 1123, 1565, 
	1565, 1123, 1566, 1566, 1567, 1568, 1569, 1570, 
	1571, 1571, 1572, 1573, 1123, 1574, 1574, 1123, 
	1575, 1575, 1576, 1577, 1578, 1579, 1580, 1580, 
	1581, 1582, 1123, 1583, 1583, 1123, 1584, 1584, 
	1123, 1585, 1123, 1586, 1586, 1587, 1588, 1590, 
	1591, 1592, 1592, 1593, 1594, 1589, 1123, 1595, 
	1595, 1123, 1596, 1596, 1123, 1597, 1597, 1598, 
	1599, 1600, 1601, 1602, 1602, 1603, 1604, 1123, 
	1605, 1605, 1123, 1606, 1606, 1123, 1607, 1607, 
	1123, 1608, 1608, 1609, 1610, 1611, 1612, 1613, 
	1613, 1614, 1615, 1123, 1616, 1616, 1123, 1617, 
	1617, 1618, 1619, 1620, 1621, 1622, 1622, 1623, 
	1624, 1123, 1626, 1626, 1627, 1628, 1629, 1630, 
	1625, 1626, 1626, 1627, 1628, 1629, 1630, 1632, 
	1631, 1633, 1633, 1634, 1635, 1637, 1638, 1636, 
	1631, 1640, 1640, 1641, 1642, 1644, 1645, 1643, 
	1643, 1643, 1639, 1646, 1646, 1646, 1639, 1647, 
	1647, 1648, 1649, 1650, 1651, 1652, 1652, 1653, 
	1654, 1643, 1643, 1643, 1639, 1656, 1655, 1639, 
	1658, 1657, 1625, 1660, 1659, 1625, 1661, 1661, 
	1662, 1663, 1664, 1665, 1625, 1661, 1661, 1662, 
	1663, 1666, 1664, 1665, 1667, 1631, 1668, 1668, 
	1669, 1670, 1672, 1672, 1673, 1674, 1671, 1631, 
	1675, 1675, 1676, 1677, 1679, 1680, 1678, 1678, 
	1678, 1639, 1681, 1681, 1681, 1639, 1682, 1682, 
	1683, 1684, 1685, 1686, 1687, 1687, 1688, 1689, 
	1678, 1678, 1678, 1639, 1691, 1690, 1639, 1693, 
	1692, 1625, 1694, 1694, 1695, 1696, 1697, 1698, 
	1671, 1631, 1700, 1699, 1625, 1703, 1704, 1705, 
	1706, 1707, 1703, 1704, 1705, 1706, 1707, 1702, 
	1701, 1708, 1708, 1708, 1708, 1709, 1701, 1710, 
	1711, 1710, 1711, 1701, 1712, 1712, 1712, 1712, 
	1701, 1713, 1713, 1701, 1714, 1715, 1714, 1714, 
	1714, 1701, 1716, 1716, 1701, 1717, 1717, 1701, 
	1718, 1718, 1701, 1719, 1719, 1701, 1720, 1701, 
	1721, 1701, 1722, 1722, 1701, 1723, 1723, 1701, 
	1724, 1724, 1701, 1725, 1701, 1726, 1726, 1726, 
	1726, 1701, 1727, 1728, 1727, 1728, 1701, 1729, 
	1730, 1729, 1730, 1701, 1731, 1701, 1732, 1732, 
	1701, 1733, 1733, 1701, 1734, 1734, 1701, 1735, 
	1735, 1701, 1736, 1736, 1736, 1736, 1701, 1737, 
	1737, 1701, 1738, 1738, 1701, 1739, 1739, 1701, 
	1740, 1741, 1701, 1742, 1701, 1743, 1701, 1744, 
	1744, 1701, 1745, 1745, 1701, 1746, 1746, 1701, 
	1747, 1701, 1748, 1701, 1749, 1701, 1750, 1750, 
	1750, 1750, 1701, 1751, 1701, 1752, 1701, 1753, 
	1753, 1701, 1754, 1754, 1701, 1755, 1755, 1701, 
	1756, 1701, 1757, 1701, 1758, 1701, 1759, 1759, 
	1759, 1759, 1701, 1760, 1761, 1701, 1762, 1701, 
	1763, 1701, 1764, 1701, 1765, 1701, 1766, 1766, 
	1766, 1766, 1701, 1767, 1701, 1768, 1701, 1769, 
	1769, 1769, 1769, 1701, 1770, 1770, 1701, 1771, 
	1771, 1701, 1772, 1772, 1701, 1773, 1773, 1701, 
	1774, 1774, 1701, 1775, 1775, 1701, 1776, 1776, 
	1701, 1777, 1777, 1777, 1777, 1701, 1778, 1778, 
	1701, 1779, 1779, 1701, 1780, 1780, 1701, 1781, 
	1781, 1701, 1782, 1782, 1701, 1783, 1783, 1701, 
	1784, 1785, 1784, 1785, 1701, 1786, 1786, 1701, 
	1787, 1787, 1701, 1788, 1788, 1788, 1788, 1701, 
	1789, 1789, 1701, 1790, 1790, 1701, 1791, 1791, 
	1791, 1791, 1701, 1792, 1792, 1701, 1793, 1793, 
	1701, 1794, 1795, 1794, 1795, 1701, 1796, 1796, 
	1701, 1797, 1701, 1798, 1798, 1798, 1798, 1701, 
	1799, 1799, 1701, 1800, 1800, 1701, 1801, 1802, 
	1803, 1701, 1804, 1805, 1804, 1804, 1804, 1701, 
	1806, 1806, 1701, 1807, 1807, 1701, 1808, 1808, 
	1701, 1809, 1809, 1701, 1810, 1701, 1811, 1701, 
	1812, 1812, 1701, 1813, 1813, 1701, 1814, 1814, 
	1701, 1815, 1701, 1816, 1816, 1816, 1816, 1701, 
	1817, 1701, 1818, 1701, 1819, 1819, 1819, 1819, 
	1701, 1820, 1701, 1821, 1701, 1822, 1822, 1822, 
	1822, 1701, 1825, 1826, 1827, 1828, 1829, 1830, 
	1825, 1826, 1827, 1828, 1829, 1830, 1824, 1823, 
	1831, 1831, 1831, 1831, 1832, 1823, 1833, 1833, 
	1823, 1834, 1834, 1823, 1835, 1835, 1823, 1836, 
	1836, 1823, 1837, 1837, 1823, 1838, 1838, 1838, 
	1838, 1823, 1839, 1840, 1841, 1839, 1840, 1841, 
	1823, 1842, 1842, 1823, 1843, 1843, 1823, 1844, 
	1844, 1823, 1845, 1845, 1823, 1846, 1846, 1823, 
	1847, 1847, 1847, 1847, 1823, 1848, 1849, 1848, 
	1849, 1823, 1850, 1850, 1823, 1851, 1851, 1851, 
	1851, 1823, 1852, 1852, 1823, 1853, 1853, 1823, 
	1854, 1854, 1854, 1854, 1823, 1855, 1855, 1823, 
	1856, 1856, 1823, 1857, 1857, 1823, 1858, 1858, 
	1858, 1858, 1823, 1859, 1859, 1823, 1860, 1860, 
	1823, 1861, 1861, 1861, 1861, 1823, 1862, 1863, 
	1862, 1863, 1823, 1864, 1864, 1823, 1865, 1865, 
	1865, 1865, 1823, 1866, 1866, 1823, 1867, 1867, 
	1823, 1868, 1868, 1868, 1868, 1823, 1869, 1869, 
	1823, 1870, 1870, 1823, 1871, 1871, 1823, 1872, 
	1872, 1872, 1872, 1823, 1873, 1873, 1823, 1874, 
	1874, 1823, 1875, 1875, 1875, 1875, 1823, 1877, 
	1877, 1876, 1878, 1879, 1878, 1878, 1878, 1879, 
	1876, 1880, 1880, 1880, 1880, 1880, 1880, 71, 
	1881, 1881, 1881, 1881, 71, 1882, 1882, 1882, 
	1882, 1882, 1882, 71, 1883, 1883, 1884, 1885, 
	1886, 1887, 71, 1888, 1888, 1889, 1890, 1891, 
	1891, 1891, 1892, 1893, 1891, 1891, 1891, 71, 
	1894, 1894, 1895, 1896, 1897, 1898, 71, 1900, 
	1900, 1901, 1902, 1904, 1905, 1903, 1899, 1906, 
	1906, 1907, 1908, 1910, 1911, 1909, 1899, 1912, 
	1912, 1913, 1914, 1916, 1917, 1915, 1899, 1919, 
	1919, 1920, 1921, 1923, 1924, 1925, 1926, 1927, 
	1923, 1924, 1925, 1926, 1927, 1928, 1929, 1922, 
	1918, 1930, 1930, 1931, 1932, 1934, 1935, 1933, 
	1899, 1936, 1936, 1937, 1938, 1940, 1941, 1942, 
	1943, 1944, 1940, 1941, 1942, 1943, 1944, 1945, 
	1946, 1939, 1918, 1947, 1947, 1948, 1949, 1951, 
	1952, 1950, 1899, 1953, 1953, 1954, 1955, 1957, 
	1958, 1959, 1960, 1961, 1957, 1958, 1959, 1960, 
	1961, 1962, 1963, 1956, 1918, 1964, 1964, 1965, 
	1966, 1968, 1969, 1967, 1899, 1970, 1970, 1972, 
	1973, 1974, 1975, 1976, 1972, 1973, 1974, 1975, 
	1976, 1970, 1970, 1971, 1918, 1970, 1970, 1970, 
	1970, 1977, 1918, 1979, 1980, 1981, 1982, 1983, 
	1979, 1980, 1981, 1982, 1983, 1978, 1918, 1984, 
	1984, 1984, 1984, 1985, 1918, 1987, 1986, 71, 
	1953, 1953, 1954, 1955, 1962, 1963, 1988, 1918, 
	1990, 1991, 1992, 1993, 1994, 1990, 1991, 1992, 
	1993, 1994, 1989, 1918, 1995, 1995, 1996, 1997, 
	1999, 2000, 1998, 1918, 2002, 2001, 71, 1936, 
	1936, 1937, 1938, 1945, 1946, 2003, 1918, 2005, 
	2006, 2007, 2008, 2009, 2005, 2006, 2007, 2008, 
	2009, 2004, 1918, 2010, 2010, 2011, 2012, 2014, 
	2015, 2013, 1918, 2017, 2016, 71, 1919, 1919, 
	1920, 1921, 1928, 1929, 2018, 1918, 2020, 2021, 
	2022, 2023, 2024, 2020, 2021, 2022, 2023, 2024, 
	2019, 1918, 2025, 2025, 2026, 2027, 2029, 2030, 
	2028, 1918, 2032, 2031, 71, 2034, 2033, 71, 
	2036, 2035, 71, 71, 71, 71, 71, 2037, 
	2038, 2038, 2039, 2040, 2041, 2042, 71, 2044, 
	2044, 2045, 2046, 2047, 2048, 2043, 2043, 2043, 
	71, 2049, 2049, 2049, 2049, 71, 2051, 2050, 
	71, 2052, 2052, 2052, 2052, 2052, 2052, 71, 
	2053, 2053, 2054, 2055, 2056, 2057, 71, 2058, 
	2058, 2059, 2060, 2061, 2061, 2061, 2062, 2063, 
	2061, 2061, 2061, 71, 2064, 2064, 2064, 2064, 
	71, 2066, 2065, 71, 2067, 1899, 2068, 2068, 
	2069, 2070, 2072, 2073, 2071, 1899, 2074, 2074, 
	2075, 2076, 2077, 2077, 2077, 2078, 2079, 2077, 
	2077, 2077, 71, 2080, 2080, 2080, 2080, 71, 
	2082, 2081, 71, 2084, 2084, 2084, 2084, 2083, 
	2085, 2085, 2086, 2087, 2088, 2089, 2090, 2090, 
	2091, 2092, 2084, 2094, 2094, 2095, 2096, 2097, 
	2098, 2099, 2099, 2100, 2101, 2093, 2093, 2093, 
	2084, 2103, 2102, 2084, 2104, 2104, 2104, 2104, 
	1876, 2105, 2106, 2105, 2105, 2105, 2106, 2106, 
	2106, 1876, 2108, 2107, 2109, 2109, 2110, 2111, 
	2113, 2114, 2112, 2107, 2115, 2115, 2116, 2117, 
	2119, 2120, 2121, 2122, 2118, 2107, 2123, 2123, 
	2124, 2125, 2127, 2128, 2126, 2107, 2129, 2129, 
	2130, 2131, 2119, 2120, 2133, 2134, 2132, 2107, 
	2135, 2135, 2136, 2137, 2138, 2140, 2141, 2139, 
	2107, 2142, 2142, 2143, 2144, 2119, 2120, 2145, 
	2146, 2107, 2147, 2147, 2148, 2149, 2150, 2151, 
	2107, 2147, 2147, 2148, 2149, 2150, 2151, 2152, 
	2107, 2153, 2153, 2154, 2155, 2157, 2158, 2156, 
	2107, 2159, 2159, 2160, 2161, 2163, 2164, 2165, 
	2166, 2162, 2107, 2167, 2167, 2168, 2169, 2171, 
	2172, 2170, 2107, 2173, 2173, 2174, 2175, 2163, 
	2164, 2177, 2178, 2176, 2107, 2179, 2179, 2180, 
	2181, 2182, 2184, 2185, 2183, 2107, 2186, 2186, 
	2187, 2188, 2163, 2164, 2189, 2190, 2107, 2191, 
	2191, 2192, 2193, 2194, 2195, 2107, 2191, 2191, 
	2192, 2193, 2196, 2194, 2195, 2197, 2107, 2198, 
	2107, 2199, 2199, 2200, 2201, 2202, 2204, 2205, 
	2206, 2207, 2207, 2208, 2209, 2203, 2107, 2210, 
	2210, 2211, 2212, 2214, 2215, 2216, 2216, 2217, 
	2218, 2213, 2107, 2219, 2219, 2220, 2221, 2222, 
	2224, 2225, 2226, 2227, 2227, 2228, 2229, 2223, 
	2107, 2230, 2230, 2231, 2232, 2234, 2235, 2216, 
	2216, 2236, 2237, 2233, 2107, 2238, 2238, 2239, 
	2240, 2241, 2243, 2244, 2245, 2246, 2246, 2247, 
	2248, 2242, 2107, 2249, 2249, 2250, 2251, 2253, 
	2254, 2216, 2216, 2255, 2256, 2252, 2107, 2257, 
	2257, 2258, 2259, 2260, 2257, 2262, 2263, 2264, 
	2264, 2265, 2266, 2261, 2107, 2267, 2267, 2268, 
	2269, 2270, 2271, 2216, 2216, 2272, 2273, 2107, 
	2275, 2274, 2107, 2276, 2276, 2277, 2278, 2276, 
	2280, 2281, 2282, 2282, 2283, 2284, 2279, 2107, 
	2257, 2257, 2258, 2259, 2257, 2262, 2263, 2264, 
	2264, 2265, 2266, 2285, 2107, 2287, 2286, 2107, 
	2288, 2288, 2289, 2290, 2292, 2293, 2294, 2295, 
	2295, 2296, 2297, 2291, 2107, 2238, 2238, 2239, 
	2240, 2243, 2244, 2245, 2246, 2246, 2247, 2248, 
	2298, 2107, 2249, 2249, 2250, 2251, 2253, 2254, 
	2216, 2216, 2255, 2256, 2107, 2300, 2299, 2107, 
	2301, 2301, 2302, 2303, 2305, 2306, 2307, 2308, 
	2308, 2309, 2310, 2304, 2107, 2219, 2219, 2220, 
	2221, 2224, 2225, 2226, 2227, 2227, 2228, 2229, 
	2311, 2107, 2230, 2230, 2231, 2232, 2234, 2235, 
	2216, 2216, 2236, 2237, 2107, 2313, 2312, 2107, 
	2314, 2314, 2315, 2316, 2318, 2319, 2320, 2321, 
	2321, 2322, 2323, 2317, 2107, 2199, 2199, 2200, 
	2201, 2204, 2205, 2206, 2207, 2207, 2208, 2209, 
	2324, 2107, 2210, 2210, 2211, 2212, 2214, 2215, 
	2216, 2216, 2217, 2218, 2107, 2326, 2325, 2107, 
	2327, 2327, 2328, 2329, 2330, 2331, 2107, 2333, 
	2332, 2107, 2334, 2334, 2335, 2336, 2338, 2339, 
	2337, 2107, 2179, 2179, 2180, 2181, 2184, 2185, 
	2340, 2107, 2342, 2341, 2107, 2344, 2343, 2107, 
	2346, 2345, 2107, 2347, 2347, 2348, 2349, 2350, 
	2351, 2107, 2353, 2352, 2107, 2354, 2354, 2355, 
	2356, 2358, 2359, 2357, 2107, 2135, 2135, 2136, 
	2137, 2140, 2141, 2360, 2107, 2362, 2361, 2107, 
	2364, 2363, 2107, 2365, 1899, 2366, 2366, 2367, 
	2368, 2370, 2371, 2369, 1899, 2372, 2372, 2373, 
	2374, 2376, 2377, 2375, 1899, 2378, 2378, 2379, 
	2380, 2382, 2383, 2381, 1899, 2384, 2384, 2385, 
	2386, 2388, 2389, 2387, 1899, 2390, 2390, 2391, 
	2392, 2394, 2395, 2393, 1899, 2396, 2396, 2397, 
	2398, 2399, 2399, 2399, 2400, 2401, 2399, 2399, 
	2399, 71, 2402, 2402, 2402, 2402, 71, 2404, 
	2403, 71, 2406, 2405, 71, 2408, 2407, 71, 
	2409, 1899, 2410, 2410, 2411, 2412, 2414, 2415, 
	2413, 1899, 2416, 2416, 2417, 2418, 2420, 2421, 
	2419, 1899, 2422, 2422, 2423, 2424, 2426, 2427, 
	2425, 1899, 2429, 2429, 2430, 2431, 2432, 2433, 
	2428, 2428, 2428, 71, 2434, 2434, 2435, 2436, 
	2437, 2438, 71, 2440, 2440, 2441, 2442, 2443, 
	2444, 2439, 2439, 2439, 71, 2445, 2445, 2446, 
	2447, 2448, 2449, 71, 2451, 2451, 2452, 2453, 
	2454, 2455, 2450, 2450, 2450, 71, 2456, 2456, 
	2457, 2458, 2459, 2460, 71, 2461, 2461, 2462, 
	2463, 2464, 2464, 2464, 2465, 2466, 2464, 2464, 
	2464, 71, 2467, 2467, 2467, 2467, 71, 2469, 
	2468, 71, 2471, 2470, 71, 2473, 2472, 71, 
	2475, 2474, 71, 2477, 2476, 71, 2478, 2478, 
	2478, 71, 2479, 2479, 2480, 2481, 2482, 2483, 
	71, 2479, 2479, 2480, 2481, 2482, 2483, 2484, 
	1899, 2485, 2485, 2486, 2487, 2489, 2490, 2488, 
	1899, 2491, 2491, 2492, 2493, 2495, 2496, 2494, 
	2494, 2494, 71, 2497, 2497, 2498, 2499, 2500, 
	2501, 71, 2497, 2497, 2498, 2499, 2502, 2500, 
	2501, 2502, 2502, 2502, 71, 2503, 2503, 71, 
	2505, 2504, 71, 2507, 2506, 71, 2509, 2508, 
	71, 2511, 2511, 2512, 2513, 2514, 2515, 2516, 
	2517, 2518, 2519, 2519, 2520, 2521, 2510, 2522, 
	2523, 2510, 2524, 2510, 2526, 2526, 2525, 2528, 
	2527, 2525, 2529, 2510, 2530, 2530, 2531, 2532, 
	2534, 2535, 2536, 2536, 2537, 2538, 2533, 2510, 
	2540, 2539, 71, 2541, 2510, 2542, 2542, 2542, 
	2542, 2525, 2544, 2543, 2543, 2543, 2525, 2545, 
	1899, 2546, 2546, 2547, 2548, 2550, 2551, 2549, 
	1899, 2552, 2552, 2553, 2554, 2556, 2557, 2555, 
	2555, 2555, 71, 2558, 2558, 2559, 2560, 2561, 
	2562, 71, 2558, 2558, 2559, 2560, 2561, 2562, 
	2563, 1899, 2564, 2564, 2565, 2566, 2568, 2569, 
	2567, 1899, 2571, 2571, 2572, 2573, 2575, 2576, 
	2574, 2574, 2574, 2570, 2577, 2577, 2577, 2570, 
	2578, 2578, 2579, 2580, 2581, 2582, 2583, 2583, 
	2584, 2585, 2574, 2574, 2574, 2570, 2587, 2586, 
	2570, 2589, 2588, 71, 2591, 2590, 71, 2593, 
	2592, 71, 2594, 1899, 2595, 2595, 2596, 2597, 
	2599, 2600, 2598, 1899, 2601, 2601, 2602, 2603, 
	2605, 2606, 2604, 1899, 2607, 2607, 2608, 2609, 
	2611, 2612, 2610, 1899, 2613, 2613, 2614, 2615, 
	2617, 2618, 2616, 2616, 2616, 2570, 2619, 2619, 
	2619, 2570, 2620, 2620, 2621, 2622, 2623, 2624, 
	2625, 2625, 2626, 2627, 2616, 2616, 2616, 2570, 
	2629, 2628, 2570, 2631, 2630, 71, 2633, 2632, 
	71, 2634, 1899, 2635, 2635, 2636, 2637, 2639, 
	2640, 2638, 1899, 2642, 2642, 2643, 2644, 2645, 
	2646, 2647, 2648, 2649, 2650, 2641, 2651, 2651, 
	2652, 2653, 2654, 2655, 2641, 2651, 2651, 2652, 
	2653, 2654, 2655, 2657, 2656, 2658, 2658, 2659, 
	2660, 2662, 2663, 2661, 2656, 2664, 2664, 2665, 
	2666, 2667, 2668, 2669, 2641, 2671, 2671, 2672, 
	2673, 2674, 2674, 2675, 2676, 2677, 2677, 2678, 
	2679, 2680, 2680, 2680, 2680, 2681, 2682, 2680, 
	2680, 2683, 2684, 2685, 2686, 2680, 2680, 2687, 
	2688, 2689, 2690, 2680, 2680, 2691, 2692, 2670, 
	2671, 2671, 2672, 2673, 2694, 2681, 2682, 2694, 
	2694, 2694, 2693, 2680, 2680, 2693, 2696, 2695, 
	2693, 2674, 2674, 2675, 2676, 2680, 2680, 2680, 
	2680, 2685, 2686, 2680, 2680, 2687, 2688, 2693, 
	2698, 2697, 2693, 2694, 2671, 2671, 2672, 2673, 
	2674, 2674, 2675, 2676, 2677, 2677, 2678, 2679, 
	2680, 2680, 2680, 2680, 2681, 2682, 2680, 2680, 
	2683, 2684, 2685, 2686, 2680, 2680, 2687, 2688, 
	2689, 2690, 2680, 2680, 2691, 2692, 2694, 2694, 
	2694, 2693, 2696, 2698, 2700, 2695, 2697, 2699, 
	2693, 2702, 2701, 2641, 2704, 2703, 2641, 2705, 
	2705, 2706, 2707, 2708, 2709, 2641, 2705, 2705, 
	2706, 2707, 2708, 2709, 2710, 2656, 2711, 2711, 
	2712, 2713, 2715, 2716, 2714, 2656, 2718, 2718, 
	2719, 2720, 2721, 2722, 2723, 2721, 2717, 2725, 
	2726, 2726, 2727, 2728, 2729, 2729, 2730, 2731, 
	2732, 2732, 2733, 2734, 2735, 2735, 2735, 2735, 
	2736, 2737, 2735, 2735, 2738, 2739, 2740, 2741, 
	2735, 2735, 2742, 2743, 2744, 2745, 2735, 2735, 
	2746, 2747, 2725, 2724, 2749, 2748, 2641, 2751, 
	2750, 2641, 2752, 2752, 2753, 2754, 2755, 2756, 
	2641, 2752, 2752, 2753, 2754, 2755, 2756, 2757, 
	2656, 2758, 2758, 2759, 2760, 2762, 2763, 2761, 
	2656, 2764, 2764, 2765, 2766, 2767, 2768, 2769, 
	2767, 2767, 2767, 2717, 2770, 2771, 2771, 2772, 
	2773, 2774, 2774, 2775, 2776, 2777, 2777, 2778, 
	2779, 2780, 2780, 2780, 2780, 2781, 2782, 2780, 
	2780, 2783, 2784, 2785, 2786, 2780, 2780, 2787, 
	2788, 2789, 2790, 2780, 2780, 2791, 2792, 2770, 
	2770, 2770, 2724, 2794, 2793, 2641, 2796, 2795, 
	2641, 2797, 2797, 2798, 2799, 2800, 2801, 2641, 
	2797, 2797, 2798, 2799, 2800, 2801, 2802, 2656, 
	2803, 2803, 2804, 2805, 2807, 2808, 2806, 2656, 
	2809, 2809, 2810, 2811, 2812, 2812, 2812, 2813, 
	2814, 2812, 2812, 2812, 2641, 2815, 2815, 2816, 
	2817, 2818, 2818, 2819, 2820, 2821, 2821, 2822, 
	2823, 2824, 2824, 2824, 2824, 2825, 2826, 2824, 
	2824, 2827, 2828, 2829, 2830, 2824, 2824, 2831, 
	2832, 2833, 2834, 2824, 2824, 2835, 2836, 2670, 
	2838, 2837, 2641, 2840, 2839, 2641, 2842, 2841, 
	71, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 
	2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 
	2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 
	2852, 2853, 2854, 2855, 2856, 2857, 2858, 2843, 
	2859, 2859, 2860, 2861, 2862, 2863, 2864, 2862, 
	2863, 2864, 2865, 2866, 2843, 2867, 2867, 2868, 
	2869, 2871, 2872, 2870, 2870, 2870, 71, 2873, 
	2873, 2874, 2875, 2876, 2877, 71, 2873, 2873, 
	2874, 2875, 2876, 2877, 2878, 1899, 2879, 2879, 
	2880, 2881, 2883, 2884, 2882, 1899, 2885, 2885, 
	2886, 2887, 2889, 2890, 2888, 1899, 2891, 2891, 
	2892, 2893, 2895, 2896, 2894, 1899, 2898, 2898, 
	2899, 2900, 2902, 2903, 2901, 2897, 2904, 2904, 
	2905, 2906, 2908, 2909, 2907, 2897, 2910, 2910, 
	2911, 2912, 2914, 2915, 2913, 2897, 2916, 2916, 
	2917, 2918, 2920, 2921, 2919, 2897, 2922, 2922, 
	2923, 2924, 2926, 2927, 2925, 1899, 2928, 2928, 
	2929, 2930, 2932, 2933, 2931, 1899, 2934, 2934, 
	2935, 2936, 2937, 2937, 2937, 2938, 2939, 2937, 
	2937, 2937, 71, 2940, 2940, 2941, 2942, 2943, 
	2944, 71, 2945, 2945, 2946, 2947, 2948, 2949, 
	2950, 2948, 2948, 2948, 71, 2951, 2951, 71, 
	2953, 2952, 71, 2955, 2954, 71, 2957, 2956, 
	71, 2959, 2958, 71, 2961, 2960, 71, 2963, 
	2962, 71, 2965, 2964, 71, 2967, 2966, 71, 
	2968, 2968, 2843, 2969, 2969, 2843, 2970, 2970, 
	2971, 2972, 2973, 2974, 2843, 2975, 2975, 2843, 
	2976, 2976, 2843, 2977, 2977, 2843, 2978, 2978, 
	2979, 2980, 2981, 2982, 2843, 2983, 2983, 2843, 
	2984, 2984, 2985, 2986, 2987, 2988, 2843, 2989, 
	2990, 2991, 2992, 2989, 2990, 2991, 2992, 2843, 
	2993, 2993, 2843, 2994, 2994, 2995, 2996, 2997, 
	2998, 2843, 2999, 3000, 2999, 3000, 2843, 3001, 
	3001, 2843, 3002, 3002, 2843, 3003, 3003, 2843, 
	3004, 3004, 2843, 3005, 3005, 3006, 3007, 3008, 
	3009, 2843, 3010, 3010, 3011, 3012, 3013, 3014, 
	2843, 3015, 3015, 2843, 3016, 3016, 2843, 3017, 
	3017, 3018, 3019, 3020, 3021, 2843, 3022, 3022, 
	2843, 3023, 3023, 2843, 3024, 3024, 2843, 3025, 
	3025, 3026, 3027, 3028, 3029, 2843, 3030, 3031, 
	3032, 3030, 3031, 3032, 2843, 3033, 3033, 2843, 
	3034, 3034, 2843, 3035, 3035, 2843, 3036, 3036, 
	3037, 3038, 3039, 3040, 2843, 3041, 3042, 3041, 
	3042, 2843, 3043, 3043, 2843, 3044, 3044, 2843, 
	3045, 3045, 3046, 3047, 3048, 3049, 2843, 3050, 
	3050, 2843, 3051, 3051, 2843, 3052, 3052, 2843, 
	3053, 3053, 3054, 3055, 3056, 3057, 2843, 3058, 
	3058, 3059, 3060, 3061, 3062, 2843, 3063, 3063, 
	2843, 3064, 3064, 2843, 3065, 3066, 2843, 3067, 
	2843, 3068, 3068, 3069, 3070, 3071, 3072, 2843, 
	3073, 2843, 3074, 3074, 3075, 3076, 3077, 3078, 
	2843, 3079, 3079, 2843, 3080, 3080, 2843, 3081, 
	3081, 2843, 3082, 3082, 2843, 3083, 3083, 3084, 
	3085, 3086, 3087, 2843, 3088, 3088, 2843, 3089, 
	3089, 2843, 3090, 3090, 2843, 3091, 3091, 2843, 
	3092, 3092, 2843, 3093, 3093, 2843, 3094, 3094, 
	2843, 3095, 3095, 3096, 3097, 3098, 3099, 2843, 
	3100, 3101, 3100, 3101, 2843, 3102, 3102, 2843, 
	3103, 3103, 3104, 3105, 3106, 3107, 2843, 3108, 
	3108, 3109, 3110, 3111, 3112, 2843, 3113, 3114, 
	3115, 3116, 3117, 3115, 3116, 3117, 2843, 3118, 
	2843, 3119, 3119, 3120, 3121, 3122, 3123, 2843, 
	3124, 2843, 3125, 3125, 3126, 3127, 3128, 3129, 
	2843, 3130, 3130, 3131, 3132, 3133, 3134, 2843, 
	3135, 3135, 2843, 3136, 3136, 3137, 3138, 3139, 
	3140, 2843, 3141, 3141, 3142, 3143, 3144, 3145, 
	2843, 3146, 3147, 3146, 3147, 2843, 3148, 3148, 
	2843, 3149, 3149, 2843, 3150, 3150, 2843, 3151, 
	3151, 3152, 3153, 3154, 3155, 2843, 3156, 3156, 
	3157, 3158, 3159, 3160, 2843, 3161, 3162, 3163, 
	3161, 3162, 3163, 2843, 3164, 3164, 2843, 3165, 
	3165, 2843, 3166, 3166, 2843, 3167, 3167, 3168, 
	3169, 3170, 3171, 2843, 3172, 3172, 2843, 3173, 
	3173, 3174, 3175, 3176, 3177, 2843, 3178, 3178, 
	3179, 3180, 3181, 3181, 3182, 3183, 2843, 3184, 
	3184, 2843, 3185, 3185, 3186, 3187, 3188, 3189, 
	3190, 2843, 3191, 3191, 3192, 3193, 3194, 3194, 
	3195, 3196, 2843, 3197, 3197, 2843, 3198, 3198, 
	2843, 3199, 3199, 2843, 3200, 3200, 2843, 3201, 
	3201, 3202, 3203, 3204, 3205, 2843, 3206, 3206, 
	2843, 3207, 3207, 2843, 3208, 3208, 3209, 3210, 
	3211, 3212, 2843, 3213, 3214, 3215, 3213, 3214, 
	3215, 2843, 3216, 3216, 3217, 3218, 3219, 3220, 
	2843, 3221, 3221, 2843, 3222, 3222, 2843, 3223, 
	3223, 2843, 3224, 3224, 3225, 3226, 3227, 3228, 
	2843, 3229, 3229, 3230, 3231, 3232, 3233, 2843, 
	3234, 3235, 3236, 3237, 3234, 3235, 3236, 3237, 
	2843, 3238, 3238, 2843, 3239, 3239, 3240, 3241, 
	3242, 3243, 2843, 3244, 3244, 2843, 3245, 3245, 
	3246, 3247, 3248, 3249, 2843, 3250, 3250, 2843, 
	3251, 3251, 3252, 3253, 3254, 3255, 2843, 3256, 
	3256, 2843, 3257, 3257, 2843, 3258, 3258, 2843, 
	3259, 3259, 3260, 3261, 3262, 3263, 2843, 3264, 
	3265, 3266, 3264, 3265, 3266, 2843, 3267, 3267, 
	2843, 3268, 3268, 2843, 3269, 3269, 3270, 3271, 
	3272, 3273, 2843, 3274, 3274, 2843, 3275, 3275, 
	3276, 3277, 3278, 3279, 2843, 3280, 3280, 2843, 
	3281, 3281, 2843, 3283, 3282, 3284, 3284, 3285, 
	3286, 3288, 3289, 3287, 3282, 3290, 3290, 2843, 
	3291, 3291, 2843, 3292, 3292, 3293, 3294, 3295, 
	3296, 2843, 3297, 3297, 3297, 3297, 3297, 3297, 
	71, 3298, 3298, 3298, 3298, 71, 3299, 3299, 
	3299, 3299, 71, 3300, 1899, 3301, 3301, 3302, 
	3303, 3305, 3306, 3304, 1899, 3307, 3307, 3308, 
	3309, 3311, 3312, 3310, 1899, 3313, 3313, 3314, 
	3315, 3317, 3318, 3316, 1899, 3319, 3319, 3320, 
	3321, 3323, 3324, 3322, 3322, 3322, 71, 3325, 
	3325, 3326, 3327, 3328, 3329, 71, 3325, 3325, 
	3326, 3327, 3330, 3328, 3329, 3330, 3330, 3330, 
	71, 3331, 3331, 71, 3333, 3332, 71, 3335, 
	3334, 71, 3337, 3336, 71, 3338, 3338, 3338, 
	3338, 71, 3339, 3339, 71, 3340, 1899, 3341, 
	3341, 3342, 3343, 3345, 3346, 3344, 1899, 3347, 
	3347, 3348, 3349, 3351, 3352, 3350, 1899, 3353, 
	3353, 3354, 3355, 3357, 3358, 3356, 1899, 3359, 
	3359, 3360, 3361, 3363, 3364, 3362, 1899, 3365, 
	3365, 3366, 3367, 3369, 3370, 3368, 1899, 3371, 
	3371, 3372, 3373, 3374, 3376, 3377, 3375, 3375, 
	3375, 2570, 3378, 3378, 3379, 3380, 3381, 3382, 
	2570, 3384, 3384, 3385, 3386, 3388, 3389, 3387, 
	3387, 3387, 3383, 3390, 3390, 3390, 3383, 3392, 
	3391, 3391, 3391, 3383, 3393, 3393, 3393, 3383, 
	3395, 3394, 3394, 3394, 3383, 3397, 3396, 3396, 
	3396, 3383, 3398, 3398, 3398, 3383, 3400, 3399, 
	3399, 3399, 3383, 3401, 3401, 3401, 3401, 3402, 
	3402, 3402, 3383, 3403, 3403, 3403, 3403, 71, 
	3404, 3383, 3400, 3383, 3397, 3383, 3405, 3383, 
	3395, 3383, 3407, 3406, 71, 3408, 3408, 3408, 
	2570, 3378, 3378, 3379, 3380, 3381, 3382, 3409, 
	3409, 3409, 2570, 3411, 3410, 71, 3413, 3412, 
	71, 3415, 3414, 71, 3416, 1899, 3417, 3417, 
	3418, 3419, 3421, 3422, 3420, 1899, 3423, 3423, 
	3424, 3425, 3427, 3428, 3426, 1899, 3429, 3429, 
	3430, 3431, 3433, 3434, 3432, 1899, 3435, 3435, 
	3436, 3437, 3439, 3440, 3438, 1899, 3441, 3441, 
	3442, 3443, 3445, 3446, 3444, 1899, 3447, 3447, 
	3448, 3449, 3450, 3452, 3453, 3451, 3451, 3451, 
	2570, 3454, 3454, 3454, 3454, 2570, 3455, 3455, 
	3455, 2570, 3454, 3454, 3454, 3454, 3456, 3456, 
	3456, 2570, 3458, 3457, 71, 3460, 3459, 71, 
	3462, 3461, 71, 3463, 1899, 3464, 3464, 3465, 
	3466, 3468, 3469, 3467, 1899, 3470, 3470, 3471, 
	3472, 3474, 3475, 3473, 1899, 3476, 3476, 3477, 
	3478, 3480, 3481, 3479, 1899, 3482, 3482, 3483, 
	3484, 3486, 3487, 3485, 1899, 3488, 3488, 3489, 
	3490, 3492, 3493, 3491, 1899, 3494, 3494, 3495, 
	3496, 3498, 3499, 3497, 3497, 3497, 2570, 3500, 
	3500, 3500, 2570, 3501, 3501, 3502, 3503, 3504, 
	3505, 3506, 3506, 3507, 3508, 3497, 3497, 3497, 
	2570, 3510, 3509, 2570, 3512, 3511, 71, 3514, 
	3513, 71, 3516, 3515, 71, 3517, 1899, 3518, 
	3518, 3519, 3520, 3522, 3523, 3521, 1899, 3524, 
	3524, 3525, 3526, 3527, 3528, 3529, 3527, 1876, 
	3530, 3531, 3530, 3530, 3530, 3531, 1876, 3533, 
	3532, 71, 3534, 1899, 3535, 3535, 3536, 3537, 
	3539, 3540, 3538, 1899, 3541, 3541, 3542, 3543, 
	3545, 3546, 3544, 3544, 3544, 2570, 3547, 3547, 
	3547, 2570, 3548, 3548, 3548, 2570, 3549, 3549, 
	3549, 2570, 3551, 3550, 3552, 3552, 3552, 2570, 
	3553, 3553, 3553, 2570, 3554, 3554, 3554, 2570, 
	3555, 3555, 3555, 2570, 3557, 3551, 3557, 3557, 
	3557, 3556, 3559, 3558, 71, 3560, 3560, 3560, 
	2570, 3561, 3561, 3561, 2570, 3563, 3562, 3564, 
	3564, 3564, 2570, 3565, 3565, 3565, 2570, 3566, 
	3563, 3566, 3566, 3566, 3562, 3567, 3567, 3567, 
	2570, 3568, 3568, 3568, 2570, 3569, 3562, 3570, 
	3570, 3570, 2570, 3571, 3571, 3571, 2570, 3572, 
	3569, 3572, 3572, 3572, 3562, 3573, 1899, 3574, 
	3574, 3575, 3576, 3578, 3579, 3577, 1899, 3580, 
	3580, 3581, 3582, 3584, 3585, 3583, 1899, 3586, 
	3586, 3587, 3588, 3590, 3591, 3589, 1899, 3593, 
	3593, 3594, 3595, 3596, 3597, 3592, 3592, 3592, 
	71, 3598, 3598, 3598, 3598, 71, 3600, 3599, 
	71, 3602, 3601, 71, 3603, 1899, 3604, 3604, 
	3605, 3606, 3608, 3609, 3607, 1899, 3611, 3611, 
	3612, 3613, 3614, 3615, 3610, 3610, 3610, 71, 
	3616, 3616, 3617, 3618, 3619, 3620, 71, 3622, 
	3622, 3623, 3624, 3625, 3626, 3621, 3621, 3621, 
	71, 3627, 3627, 3627, 3627, 71, 3629, 3628, 
	71, 3631, 3630, 71, 3632, 1899, 3633, 3633, 
	3634, 3635, 3637, 3638, 3636, 1899, 3640, 3640, 
	3641, 3642, 3643, 3644, 3639, 3639, 3639, 71, 
	3645, 3645, 3646, 3647, 3648, 3649, 71, 3650, 
	3650, 3651, 3652, 3653, 3653, 3653, 3654, 3655, 
	3653, 3653, 3653, 71, 3656, 3656, 3656, 3656, 
	71, 3658, 3657, 71, 3660, 3659, 71, 3662, 
	3662, 3663, 3664, 3665, 3666, 3666, 3666, 3667, 
	3668, 3669, 3670, 3666, 3666, 3666, 3661, 3671, 
	3671, 3672, 3673, 3674, 3675, 69, 3676, 3675, 
	3667, 3668, 3677, 3678, 3679, 3680, 3681, 3682, 
	69, 69, 3675, 69, 3675, 69, 3675, 69, 
	790, 3684, 3684, 3663, 3685, 3686, 3666, 3687, 
	3688, 3689, 3690, 3691, 3692, 3693, 3694, 3695, 
	3696, 3697, 3698, 3699, 3700, 3701, 3666, 3666, 
	3687, 3688, 3689, 3690, 3691, 3692, 3693, 3694, 
	3695, 3696, 3697, 3698, 3699, 3700, 3701, 3667, 
	3668, 3702, 3703, 3666, 3666, 3666, 3683, 3684, 
	3684, 3663, 3685, 3686, 3666, 3706, 3707, 3708, 
	3709, 3710, 3711, 3712, 3713, 3714, 3715, 3716, 
	3717, 3718, 3719, 3720, 3666, 3666, 3706, 3707, 
	3708, 3709, 3710, 3711, 3712, 3713, 3714, 3715, 
	3716, 3717, 3718, 3719, 3720, 3667, 3668, 3702, 
	3703, 3666, 3705, 3666, 3666, 3704, 3722, 3722, 
	3723, 3724, 3725, 3726, 3726, 3726, 3727, 3728, 
	3729, 3730, 3726, 3726, 3726, 3721, 3662, 3662, 
	3663, 3731, 3732, 3666, 3706, 3707, 3708, 3709, 
	3710, 3711, 3712, 3713, 3714, 3715, 3716, 3717, 
	3718, 3719, 3720, 3666, 3666, 3706, 3707, 3708, 
	3709, 3710, 3711, 3712, 3713, 3714, 3715, 3716, 
	3717, 3718, 3719, 3720, 3667, 3668, 3733, 3670, 
	3666, 3705, 3666, 3666, 3704, 3734, 3734, 3663, 
	3735, 3736, 3666, 3666, 3666, 83, 84, 3737, 
	3738, 3666, 3666, 3666, 790, 3739, 3739, 3672, 
	3740, 3741, 3675, 69, 3676, 3675, 83, 84, 
	3737, 3742, 101, 102, 3737, 3743, 69, 69, 
	3675, 69, 3675, 69, 3675, 69, 790, 3671, 
	3671, 3672, 3673, 3674, 3675, 69, 3746, 3747, 
	3748, 3749, 3750, 3751, 3752, 3753, 3754, 3755, 
	3756, 3757, 3758, 3759, 3760, 3676, 3675, 3746, 
	3747, 3748, 3749, 3750, 3751, 3752, 3753, 3754, 
	3755, 3756, 3757, 3758, 3759, 3760, 3667, 3668, 
	3677, 3678, 3679, 3680, 3681, 3682, 69, 69, 
	3675, 3745, 69, 3675, 69, 3675, 69, 3744, 
	3739, 3739, 3672, 3740, 3741, 3675, 69, 3746, 
	3747, 3748, 3749, 3750, 3751, 3752, 3753, 3754, 
	3755, 3756, 3757, 3758, 3759, 3760, 3676, 3675, 
	3746, 3747, 3748, 3749, 3750, 3751, 3752, 3753, 
	3754, 3755, 3756, 3757, 3758, 3759, 3760, 83, 
	84, 3761, 3742, 101, 102, 3761, 3743, 69, 
	69, 3675, 3745, 69, 3675, 69, 3675, 69, 
	3744, 698, 698, 698, 949, 946, 949, 948, 
	949, 946, 950, 946, 945, 698, 698, 698, 
	1098, 1098, 1099, 1100, 1067, 1068, 1069, 1067, 
	1101, 1102, 1067, 1067, 1067, 1073, 698, 1113, 
	1113, 1114, 1115, 1108, 1116, 1117, 1118, 1118, 
	1119, 1120, 1108, 1108, 1108, 1107, 1122, 1121, 
	1107, 698, 1132, 1132, 1133, 1134, 1135, 1136, 
	1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 
	1145, 1146, 1147, 1148, 1149, 1135, 1136, 1137, 
	1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1152, 
	1153, 1154, 1123, 1177, 1176, 1123, 698, 1647, 
	1647, 1648, 1649, 1650, 1651, 1652, 1652, 1653, 
	1654, 1643, 1643, 1643, 1639, 1656, 1655, 1639, 
	1675, 1675, 1676, 1677, 1679, 1680, 1678, 1678, 
	1678, 1639, 1625, 1682, 1682, 1683, 1684, 1685, 
	1686, 1687, 1687, 1688, 1689, 1678, 1678, 1678, 
	1639, 1691, 1690, 1639, 1693, 1692, 1625, 698, 
	698, 698, 698, 698, 698, 698, 698, 698, 
	2094, 2094, 2095, 2096, 2097, 2098, 2099, 2099, 
	2100, 2101, 2093, 2093, 2093, 2084, 2103, 2102, 
	2084, 698, 698, 2267, 2267, 2268, 2269, 2270, 
	2271, 2216, 2216, 2272, 2273, 2107, 2275, 2274, 
	2107, 2249, 2249, 2250, 2251, 2253, 2254, 2216, 
	2216, 2255, 2256, 2252, 2107, 2287, 2286, 2107, 
	2230, 2230, 2231, 2232, 2234, 2235, 2216, 2216, 
	2236, 2237, 2233, 2107, 2300, 2299, 2107, 2210, 
	2210, 2211, 2212, 2214, 2215, 2216, 2216, 2217, 
	2218, 2213, 2107, 2313, 2312, 2107, 698, 698, 
	698, 698, 2511, 2511, 2512, 2513, 2514, 2515, 
	2516, 2517, 2518, 2519, 2519, 2520, 2521, 2510, 
	2540, 2539, 71, 698, 2578, 2578, 2579, 2580, 
	2581, 2582, 2583, 2583, 2584, 2585, 2574, 2574, 
	2574, 2570, 2587, 2586, 2570, 698, 2620, 2620, 
	2621, 2622, 2623, 2624, 2625, 2625, 2626, 2627, 
	2616, 2616, 2616, 2570, 2629, 2628, 2570, 698, 
	2674, 2674, 2675, 2676, 2680, 2680, 2680, 2680, 
	2685, 2686, 2680, 2680, 2687, 2688, 2693, 2698, 
	2697, 2693, 2671, 2671, 2672, 2673, 2694, 2681, 
	2682, 2694, 2694, 2694, 2693, 2696, 2695, 2693, 
	2694, 2671, 2671, 2672, 2673, 2674, 2674, 2675, 
	2676, 2677, 2677, 2678, 2679, 2680, 2680, 2680, 
	2680, 2681, 2682, 2680, 2680, 2683, 2684, 2685, 
	2686, 2680, 2680, 2687, 2688, 2689, 2690, 2680, 
	2680, 2691, 2692, 2694, 2694, 2694, 2693, 2696, 
	2698, 2700, 2695, 2697, 2699, 2693, 698, 698, 
	698, 698, 698, 698, 698, 3501, 3501, 3502, 
	3503, 3504, 3505, 3506, 3506, 3507, 3508, 3497, 
	3497, 3497, 2570, 3510, 3509, 2570, 698, 698, 
	698, 698, 698, 698, 698, 0
};

static const short _zone_scanner_trans_targs[] = {
	0, 1, 1, 1, 2, 4, 17, 36, 
	50, 57, 144, 73, 77, 86, 92, 108, 
	111, 118, 129, 139, 1138, 152, 1143, 265, 
	0, 3, 3, 3, 2, 167, 167, 167, 
	167, 167, 3, 170, 0, 3, 3, 3, 
	4, 17, 36, 50, 57, 62, 73, 77, 
	86, 92, 108, 111, 118, 129, 139, 3, 
	170, 0, 5, 5, 5, 231, 234, 238, 
	5, 10, 6, 11, 20, 6, 5, 0, 
	5, 5, 9, 5, 10, 11, 20, 0, 
	7, 7, 7, 1138, 8, 0, 7, 7, 
	7, 1138, 8, 8, 1138, 6, 6, 10, 
	5, 12, 12, 12, 13, 1144, 177, 245, 
	12, 12, 12, 13, 1144, 177, 245, 13, 
	1139, 14, 0, 14, 14, 15, 173, 180, 
	181, 182, 183, 184, 185, 186, 187, 188, 
	189, 190, 191, 192, 193, 1146, 240, 1144, 
	241, 1147, 243, 0, 16, 16, 16, 1140, 
	268, 0, 16, 16, 16, 1140, 268, 18, 
	22, 29, 32, 19, 5, 5, 5, 5, 
	10, 6, 11, 20, 21, 21, 21, 13, 
	21, 21, 21, 23, 28, 24, 25, 26, 
	27, 5, 5, 5, 5, 10, 6, 11, 
	20, 5, 5, 5, 5, 10, 6, 11, 
	20, 30, 31, 5, 5, 5, 5, 10, 
	6, 11, 20, 33, 34, 35, 5, 5, 
	5, 5, 10, 6, 11, 20, 37, 41, 
	49, 38, 39, 40, 5, 5, 5, 5, 
	10, 6, 11, 20, 42, 45, 43, 44, 
	5, 5, 5, 5, 10, 6, 11, 20, 
	46, 47, 48, 5, 5, 5, 5, 10, 
	6, 11, 20, 5, 5, 5, 5, 10, 
	6, 11, 20, 51, 52, 53, 55, 54, 
	5, 5, 5, 5, 10, 6, 11, 20, 
	56, 5, 5, 5, 5, 10, 6, 11, 
	20, 58, 59, 60, 61, 5, 5, 5, 
	5, 10, 6, 11, 20, 63, 66, 64, 
	64, 64, 64, 142, 64, 64, 64, 4, 
	17, 36, 50, 57, 65, 73, 77, 86, 
	92, 108, 111, 118, 129, 139, 64, 142, 
	67, 68, 69, 70, 71, 72, 5, 5, 
	5, 5, 10, 6, 11, 20, 74, 76, 
	75, 5, 5, 5, 5, 10, 6, 11, 
	20, 5, 5, 5, 5, 10, 6, 11, 
	20, 78, 80, 82, 83, 85, 79, 5, 
	5, 5, 5, 10, 6, 11, 20, 81, 
	5, 5, 5, 5, 10, 6, 11, 20, 
	5, 5, 5, 5, 10, 6, 11, 20, 
	84, 5, 5, 5, 5, 10, 6, 11, 
	20, 5, 5, 5, 5, 10, 6, 11, 
	20, 87, 91, 88, 89, 90, 5, 5, 
	5, 5, 10, 6, 11, 20, 5, 5, 
	5, 5, 10, 6, 11, 20, 93, 97, 
	99, 94, 95, 96, 5, 5, 5, 5, 
	10, 6, 11, 20, 98, 5, 5, 5, 
	5, 10, 6, 11, 20, 5, 5, 5, 
	100, 5, 10, 6, 11, 20, 101, 5, 
	5, 5, 102, 5, 10, 6, 11, 20, 
	5, 5, 5, 103, 5, 10, 6, 11, 
	20, 104, 105, 106, 107, 5, 5, 5, 
	5, 10, 6, 11, 20, 109, 110, 5, 
	5, 5, 5, 10, 6, 11, 20, 112, 
	113, 117, 5, 5, 5, 5, 10, 6, 
	11, 20, 114, 115, 116, 5, 5, 5, 
	5, 10, 6, 11, 20, 5, 5, 5, 
	5, 10, 6, 11, 20, 119, 121, 123, 
	125, 120, 5, 5, 5, 5, 10, 6, 
	11, 20, 122, 5, 5, 5, 5, 10, 
	6, 11, 20, 124, 5, 5, 5, 5, 
	10, 6, 11, 20, 126, 127, 128, 5, 
	5, 5, 5, 10, 6, 11, 20, 130, 
	133, 135, 131, 132, 5, 5, 5, 5, 
	10, 6, 11, 20, 134, 5, 5, 5, 
	5, 10, 6, 11, 20, 136, 137, 0, 
	138, 0, 5, 5, 5, 138, 5, 10, 
	6, 11, 20, 140, 141, 5, 5, 5, 
	5, 10, 6, 11, 20, 142, 64, 143, 
	143, 143, 1141, 266, 145, 146, 146, 146, 
	146, 151, 146, 146, 146, 147, 4, 17, 
	36, 50, 57, 65, 73, 77, 86, 92, 
	108, 111, 118, 129, 139, 146, 151, 64, 
	64, 64, 147, 148, 148, 148, 148, 148, 
	64, 142, 149, 149, 150, 150, 150, 150, 
	150, 64, 64, 64, 149, 64, 142, 151, 
	146, 152, 1138, 0, 154, 196, 202, 155, 
	156, 157, 158, 159, 160, 1142, 0, 162, 
	162, 162, 162, 163, 162, 162, 162, 162, 
	163, 163, 0, 162, 0, 165, 165, 165, 
	165, 166, 165, 165, 165, 165, 166, 166, 
	165, 168, 168, 169, 169, 169, 169, 169, 
	3, 3, 3, 168, 3, 170, 170, 3, 
	0, 172, 172, 172, 172, 247, 248, 249, 
	172, 172, 172, 172, 247, 248, 249, 0, 
	174, 174, 174, 1139, 13, 1144, 177, 1145, 
	245, 174, 174, 174, 1139, 1145, 175, 175, 
	175, 1143, 176, 176, 1143, 178, 178, 178, 
	1138, 8, 178, 178, 178, 179, 179, 179, 
	194, 229, 194, 1146, 0, 197, 198, 199, 
	200, 201, 1142, 203, 204, 1142, 0, 175, 
	175, 175, 1143, 176, 0, 207, 207, 207, 
	1141, 208, 207, 207, 207, 1141, 208, 208, 
	1141, 0, 210, 210, 210, 1146, 194, 1147, 
	229, 210, 210, 210, 1146, 1147, 226, 0, 
	226, 226, 226, 227, 175, 175, 175, 1143, 
	176, 228, 1143, 228, 228, 176, 228, 228, 
	228, 230, 230, 230, 194, 230, 230, 230, 
	232, 233, 5, 5, 5, 5, 10, 6, 
	11, 20, 235, 236, 237, 5, 5, 5, 
	5, 10, 6, 11, 20, 239, 5, 5, 
	5, 5, 10, 6, 11, 20, 240, 1146, 
	242, 242, 242, 1138, 242, 242, 242, 1138, 
	244, 244, 244, 244, 244, 244, 246, 246, 
	246, 246, 246, 246, 247, 172, 179, 179, 
	179, 194, 229, 250, 250, 250, 250, 250, 
	250, 0, 265, 1143, 266, 1141, 268, 1140, 
	270, 1148, 270, 1148, 0, 272, 278, 279, 
	274, 1149, 272, 273, 274, 1149, 272, 274, 
	275, 0, 276, 277, 1149, 272, 273, 274, 
	1149, 0, 281, 286, 282, 1150, 1151, 0, 
	283, 284, 285, 1150, 281, 1151, 282, 286, 
	287, 288, 0, 289, 290, 291, 286, 287, 
	288, 0, 293, 293, 293, 293, 300, 0, 
	294, 0, 295, 295, 295, 294, 297, 297, 
	297, 297, 297, 1152, 296, 0, 295, 295, 
	295, 1152, 296, 296, 1152, 298, 0, 298, 
	299, 299, 299, 299, 299, 295, 295, 295, 
	298, 1152, 296, 300, 293, 0, 302, 302, 
	302, 302, 312, 303, 311, 307, 303, 304, 
	307, 0, 305, 305, 305, 303, 307, 1153, 
	306, 305, 305, 305, 1153, 306, 306, 1153, 
	308, 0, 309, 310, 303, 304, 307, 312, 
	302, 314, 314, 314, 314, 329, 315, 0, 
	0, 316, 316, 316, 1154, 320, 326, 0, 
	316, 316, 316, 317, 325, 321, 1154, 320, 
	326, 0, 317, 318, 321, 319, 319, 319, 
	317, 321, 1154, 320, 319, 319, 319, 320, 
	1154, 322, 0, 323, 324, 317, 318, 321, 
	326, 1155, 327, 327, 327, 327, 328, 328, 
	327, 329, 314, 0, 331, 332, 333, 336, 
	334, 334, 334, 334, 334, 335, 1156, 1157, 
	1158, 335, 334, 0, 338, 338, 338, 338, 
	343, 1159, 1160, 1161, 338, 338, 338, 339, 
	344, 361, 375, 382, 387, 395, 399, 408, 
	414, 430, 433, 440, 451, 461, 338, 343, 
	1159, 1160, 1161, 338, 338, 338, 340, 464, 
	468, 338, 343, 1159, 1160, 1161, 341, 342, 
	338, 338, 338, 338, 343, 1159, 1160, 1161, 
	343, 338, 345, 347, 354, 357, 346, 338, 
	338, 338, 338, 343, 1159, 1160, 1161, 348, 
	353, 349, 350, 351, 352, 338, 338, 338, 
	338, 343, 1159, 1160, 1161, 338, 338, 338, 
	338, 343, 1159, 1160, 1161, 355, 356, 338, 
	338, 338, 338, 343, 1159, 1160, 1161, 358, 
	359, 360, 338, 338, 338, 338, 343, 1159, 
	1160, 1161, 362, 366, 374, 363, 364, 365, 
	338, 338, 338, 338, 343, 1159, 1160, 1161, 
	367, 370, 368, 369, 338, 338, 338, 338, 
	343, 1159, 1160, 1161, 371, 372, 373, 338, 
	338, 338, 338, 343, 1159, 1160, 1161, 338, 
	338, 338, 338, 343, 1159, 1160, 1161, 376, 
	377, 378, 380, 379, 338, 338, 338, 338, 
	343, 1159, 1160, 1161, 381, 338, 338, 338, 
	338, 343, 1159, 1160, 1161, 383, 384, 385, 
	386, 338, 338, 338, 338, 343, 1159, 1160, 
	1161, 388, 389, 390, 391, 392, 393, 394, 
	338, 338, 338, 338, 343, 1159, 1160, 1161, 
	396, 398, 397, 338, 338, 338, 338, 343, 
	1159, 1160, 1161, 338, 338, 338, 338, 343, 
	1159, 1160, 1161, 400, 402, 404, 405, 407, 
	401, 338, 338, 338, 338, 343, 1159, 1160, 
	1161, 403, 338, 338, 338, 338, 343, 1159, 
	1160, 1161, 338, 338, 338, 338, 343, 1159, 
	1160, 1161, 406, 338, 338, 338, 338, 343, 
	1159, 1160, 1161, 338, 338, 338, 338, 343, 
	1159, 1160, 1161, 409, 413, 410, 411, 412, 
	338, 338, 338, 338, 343, 1159, 1160, 1161, 
	338, 338, 338, 338, 343, 1159, 1160, 1161, 
	415, 419, 421, 416, 417, 418, 338, 338, 
	338, 338, 343, 1159, 1160, 1161, 420, 338, 
	338, 338, 338, 343, 1159, 1160, 1161, 338, 
	338, 338, 422, 338, 343, 1159, 1160, 1161, 
	423, 338, 338, 338, 424, 338, 343, 1159, 
	1160, 1161, 338, 338, 338, 425, 338, 343, 
	1159, 1160, 1161, 426, 427, 428, 429, 338, 
	338, 338, 338, 343, 1159, 1160, 1161, 431, 
	432, 338, 338, 338, 338, 343, 1159, 1160, 
	1161, 434, 435, 439, 338, 338, 338, 338, 
	343, 1159, 1160, 1161, 436, 437, 438, 338, 
	338, 338, 338, 343, 1159, 1160, 1161, 338, 
	338, 338, 338, 343, 1159, 1160, 1161, 441, 
	443, 445, 447, 442, 338, 338, 338, 338, 
	343, 1159, 1160, 1161, 444, 338, 338, 338, 
	338, 343, 1159, 1160, 1161, 446, 338, 338, 
	338, 338, 343, 1159, 1160, 1161, 448, 449, 
	450, 338, 338, 338, 338, 343, 1159, 1160, 
	1161, 452, 455, 457, 453, 454, 338, 338, 
	338, 338, 343, 1159, 1160, 1161, 456, 338, 
	338, 338, 338, 343, 1159, 1160, 1161, 458, 
	459, 460, 338, 338, 338, 460, 338, 343, 
	1159, 1160, 1161, 462, 463, 338, 338, 338, 
	338, 343, 1159, 1160, 1161, 465, 466, 467, 
	338, 338, 338, 338, 343, 1159, 1160, 1161, 
	469, 338, 338, 338, 338, 343, 1159, 1160, 
	1161, 0, 471, 471, 471, 471, 478, 0, 
	472, 473, 473, 473, 472, 473, 477, 0, 
	473, 473, 473, 474, 473, 477, 475, 475, 
	475, 475, 475, 476, 1162, 1163, 1164, 476, 
	475, 477, 473, 478, 471, 480, 480, 480, 
	480, 488, 481, 487, 1165, 1165, 1165, 487, 
	1166, 1165, 1169, 482, 482, 482, 483, 482, 
	486, 484, 484, 484, 484, 484, 485, 1166, 
	1167, 1168, 485, 484, 486, 482, 482, 482, 
	482, 482, 486, 488, 480, 0, 490, 491, 
	506, 545, 553, 566, 1170, 490, 492, 493, 
	1170, 494, 1170, 495, 496, 497, 498, 499, 
	500, 501, 502, 503, 504, 505, 1170, 507, 
	536, 508, 514, 509, 510, 511, 512, 513, 
	1170, 515, 516, 517, 518, 527, 519, 520, 
	521, 522, 523, 524, 525, 526, 1170, 528, 
	529, 530, 531, 532, 533, 534, 535, 1170, 
	537, 542, 538, 539, 540, 541, 1170, 543, 
	544, 1170, 546, 547, 548, 549, 550, 551, 
	552, 1170, 554, 555, 556, 557, 558, 559, 
	560, 563, 561, 562, 1170, 564, 565, 1170, 
	567, 568, 569, 572, 570, 571, 1170, 573, 
	574, 575, 587, 590, 1170, 576, 577, 578, 
	579, 580, 581, 582, 583, 584, 585, 586, 
	1170, 588, 589, 1170, 591, 592, 1170, 0, 
	594, 595, 601, 618, 621, 627, 631, 1171, 
	594, 596, 597, 598, 599, 600, 1171, 602, 
	608, 614, 603, 604, 605, 606, 607, 1171, 
	609, 611, 610, 1171, 612, 613, 1171, 615, 
	616, 617, 1171, 619, 620, 1171, 622, 624, 
	623, 1171, 625, 626, 1171, 628, 629, 630, 
	1171, 632, 633, 1171, 0, 635, 1172, 635, 
	637, 1173, 639, 640, 640, 640, 640, 669, 
	640, 640, 640, 641, 640, 669, 642, 642, 
	642, 642, 668, 0, 642, 642, 642, 643, 
	642, 668, 644, 644, 644, 643, 644, 667, 
	644, 644, 644, 645, 644, 667, 0, 646, 
	646, 646, 645, 664, 664, 664, 664, 664, 
	646, 663, 646, 646, 646, 647, 646, 663, 
	648, 648, 648, 647, 660, 660, 660, 660, 
	660, 648, 659, 648, 648, 648, 649, 648, 
	659, 650, 650, 650, 649, 656, 656, 656, 
	656, 656, 650, 655, 650, 650, 650, 651, 
	650, 655, 1174, 651, 652, 652, 652, 652, 
	652, 653, 653, 654, 654, 654, 654, 654, 
	1174, 653, 655, 650, 657, 657, 658, 658, 
	658, 658, 658, 650, 650, 650, 657, 650, 
	655, 659, 648, 661, 661, 662, 662, 662, 
	662, 662, 648, 648, 648, 661, 648, 659, 
	663, 646, 665, 665, 666, 666, 666, 666, 
	666, 646, 646, 646, 665, 646, 663, 667, 
	644, 668, 642, 669, 640, 671, 672, 672, 
	672, 672, 674, 673, 672, 672, 672, 672, 
	674, 1175, 674, 672, 676, 677, 677, 677, 
	677, 679, 677, 677, 677, 678, 677, 679, 
	1176, 679, 677, 681, 682, 682, 682, 681, 
	682, 684, 682, 682, 682, 683, 682, 684, 
	1177, 684, 682, 686, 0, 687, 687, 687, 
	687, 688, 1178, 1179, 1180, 686, 687, 687, 
	687, 687, 688, 1178, 1179, 1180, 688, 687, 
	690, 1181, 690, 0, 692, 693, 693, 693, 
	692, 693, 745, 693, 693, 693, 694, 698, 
	740, 693, 745, 695, 695, 695, 694, 695, 
	744, 695, 695, 695, 696, 695, 744, 697, 
	697, 697, 742, 696, 697, 741, 697, 697, 
	697, 697, 741, 699, 699, 699, 699, 739, 
	700, 701, 701, 701, 700, 701, 738, 701, 
	701, 701, 702, 706, 733, 701, 738, 703, 
	703, 703, 702, 703, 737, 703, 703, 703, 
	704, 703, 737, 705, 705, 705, 735, 704, 
	705, 734, 705, 705, 705, 705, 734, 707, 
	707, 707, 707, 732, 708, 709, 709, 710, 
	710, 710, 729, 709, 731, 710, 728, 1182, 
	1189, 1190, 710, 710, 710, 711, 710, 728, 
	1182, 1189, 1190, 712, 712, 712, 725, 711, 
	727, 712, 724, 1182, 1187, 1188, 712, 712, 
	712, 713, 712, 724, 1187, 1188, 714, 714, 
	714, 721, 713, 723, 714, 720, 1182, 1185, 
	1186, 714, 714, 714, 715, 714, 720, 1185, 
	1186, 716, 716, 716, 718, 715, 716, 717, 
	1182, 1183, 1184, 716, 716, 716, 716, 717, 
	1183, 1184, 717, 716, 716, 716, 716, 719, 
	716, 717, 1182, 1183, 1184, 719, 720, 714, 
	714, 714, 714, 722, 723, 714, 720, 1182, 
	1185, 1186, 722, 724, 712, 712, 712, 712, 
	726, 727, 712, 724, 1182, 1187, 1188, 726, 
	728, 710, 710, 710, 710, 730, 731, 710, 
	728, 1182, 1189, 1190, 730, 732, 707, 707, 
	707, 707, 707, 732, 734, 705, 705, 705, 
	705, 736, 705, 734, 736, 737, 703, 738, 
	701, 739, 699, 699, 699, 699, 699, 739, 
	741, 697, 697, 697, 697, 743, 697, 741, 
	743, 744, 695, 745, 693, 747, 748, 748, 
	748, 747, 748, 756, 748, 748, 748, 749, 
	748, 756, 750, 750, 750, 749, 750, 755, 
	750, 750, 750, 751, 750, 755, 752, 752, 
	752, 751, 752, 754, 752, 752, 752, 753, 
	752, 754, 1191, 754, 752, 755, 750, 756, 
	748, 758, 759, 759, 759, 758, 759, 773, 
	759, 759, 759, 760, 759, 773, 761, 761, 
	761, 760, 761, 772, 762, 761, 761, 761, 
	761, 772, 763, 763, 763, 763, 771, 764, 
	763, 763, 763, 763, 771, 765, 765, 765, 
	765, 770, 766, 765, 765, 765, 765, 770, 
	767, 767, 767, 767, 769, 767, 767, 767, 
	768, 767, 769, 1192, 769, 767, 770, 765, 
	771, 763, 772, 761, 773, 759, 775, 776, 
	776, 776, 776, 784, 777, 778, 778, 778, 
	777, 778, 783, 778, 778, 778, 779, 778, 
	783, 780, 780, 780, 780, 782, 781, 1193, 
	782, 780, 783, 778, 784, 776, 0, 785, 
	786, 785, 785, 787, 793, 785, 792, 1194, 
	1195, 1196, 787, 793, 788, 0, 789, 789, 
	790, 791, 785, 785, 785, 791, 785, 792, 
	1194, 1195, 1196, 792, 785, 794, 795, 795, 
	790, 797, 798, 798, 798, 797, 798, 808, 
	798, 798, 798, 799, 798, 808, 800, 800, 
	800, 800, 807, 801, 802, 802, 802, 801, 
	802, 806, 0, 802, 802, 802, 803, 802, 
	806, 804, 804, 804, 804, 804, 805, 1197, 
	1198, 1199, 805, 804, 806, 802, 807, 800, 
	808, 798, 810, 811, 811, 811, 810, 811, 
	818, 811, 811, 811, 812, 811, 818, 813, 
	813, 813, 812, 813, 817, 813, 813, 813, 
	814, 813, 817, 815, 815, 815, 815, 815, 
	816, 1200, 1201, 1202, 816, 815, 817, 813, 
	818, 811, 820, 821, 821, 821, 820, 821, 
	857, 0, 821, 821, 821, 822, 836, 843, 
	850, 821, 857, 823, 823, 823, 823, 835, 
	0, 824, 825, 825, 825, 824, 825, 834, 
	825, 825, 825, 826, 825, 834, 0, 827, 
	827, 827, 830, 830, 830, 832, 832, 832, 
	1203, 827, 829, 1206, 1207, 830, 831, 1204, 
	1205, 832, 833, 1208, 1209, 0, 828, 829, 
	827, 831, 830, 833, 832, 834, 825, 835, 
	823, 837, 837, 837, 837, 842, 838, 839, 
	839, 839, 838, 839, 841, 0, 839, 839, 
	839, 840, 839, 841, 0, 840, 827, 827, 
	827, 830, 830, 830, 832, 832, 832, 1203, 
	827, 829, 1206, 1207, 830, 831, 1204, 1205, 
	832, 833, 1208, 1209, 841, 839, 842, 837, 
	844, 844, 844, 844, 849, 845, 846, 846, 
	846, 845, 846, 848, 846, 846, 846, 847, 
	846, 848, 847, 827, 827, 827, 830, 830, 
	830, 832, 832, 832, 1203, 827, 829, 1206, 
	1207, 830, 831, 1204, 1205, 832, 833, 1208, 
	1209, 848, 846, 849, 844, 851, 851, 851, 
	851, 856, 852, 853, 853, 853, 852, 853, 
	855, 853, 853, 853, 854, 853, 855, 827, 
	827, 827, 830, 830, 830, 832, 832, 832, 
	1203, 827, 829, 1206, 1207, 830, 831, 1204, 
	1205, 832, 833, 1208, 1209, 855, 853, 856, 
	851, 857, 821, 0, 859, 893, 910, 924, 
	931, 936, 944, 948, 957, 963, 979, 982, 
	989, 1000, 1010, 860, 860, 860, 884, 887, 
	891, 860, 883, 860, 860, 860, 861, 860, 
	883, 862, 862, 862, 862, 882, 863, 864, 
	864, 864, 863, 864, 881, 864, 864, 864, 
	865, 864, 881, 866, 866, 866, 865, 866, 
	880, 0, 866, 866, 866, 867, 866, 880, 
	868, 868, 868, 867, 868, 879, 868, 868, 
	868, 869, 868, 879, 870, 870, 870, 869, 
	870, 878, 870, 870, 870, 871, 870, 878, 
	872, 872, 872, 871, 872, 877, 872, 872, 
	872, 873, 872, 877, 874, 874, 874, 874, 
	876, 874, 874, 874, 875, 874, 876, 1210, 
	876, 874, 877, 872, 878, 870, 879, 868, 
	880, 866, 881, 864, 882, 862, 883, 860, 
	885, 886, 860, 860, 860, 860, 883, 888, 
	889, 890, 860, 860, 860, 860, 883, 892, 
	860, 860, 860, 860, 883, 894, 896, 903, 
	906, 895, 860, 860, 860, 860, 883, 897, 
	902, 898, 899, 900, 901, 860, 860, 860, 
	860, 883, 860, 860, 860, 860, 883, 904, 
	905, 860, 860, 860, 860, 883, 907, 908, 
	909, 860, 860, 860, 860, 883, 911, 915, 
	923, 912, 913, 914, 860, 860, 860, 860, 
	883, 916, 919, 917, 918, 860, 860, 860, 
	860, 883, 920, 921, 922, 860, 860, 860, 
	860, 883, 860, 860, 860, 860, 883, 925, 
	926, 927, 929, 928, 860, 860, 860, 860, 
	883, 930, 860, 860, 860, 860, 883, 932, 
	933, 934, 935, 860, 860, 860, 860, 883, 
	937, 938, 939, 940, 941, 942, 943, 860, 
	860, 860, 860, 883, 945, 947, 946, 860, 
	860, 860, 860, 883, 860, 860, 860, 860, 
	883, 949, 951, 953, 954, 956, 950, 860, 
	860, 860, 860, 883, 952, 860, 860, 860, 
	860, 883, 860, 860, 860, 860, 883, 955, 
	860, 860, 860, 860, 883, 860, 860, 860, 
	860, 883, 958, 962, 959, 960, 961, 860, 
	860, 860, 860, 883, 860, 860, 860, 860, 
	883, 964, 968, 970, 965, 966, 967, 860, 
	860, 860, 860, 883, 969, 860, 860, 860, 
	860, 883, 860, 860, 860, 971, 860, 883, 
	972, 860, 860, 860, 973, 860, 883, 860, 
	860, 860, 974, 860, 883, 975, 976, 977, 
	978, 860, 860, 860, 860, 883, 980, 981, 
	860, 860, 860, 860, 883, 983, 984, 988, 
	860, 860, 860, 860, 883, 985, 986, 987, 
	860, 860, 860, 860, 883, 860, 860, 860, 
	860, 883, 990, 992, 994, 996, 991, 860, 
	860, 860, 860, 883, 993, 860, 860, 860, 
	860, 883, 995, 860, 860, 860, 860, 883, 
	997, 998, 999, 860, 860, 860, 860, 883, 
	1001, 1004, 1006, 1002, 1003, 860, 860, 860, 
	860, 883, 1005, 860, 860, 860, 860, 883, 
	1007, 1008, 0, 1009, 860, 860, 860, 1009, 
	860, 883, 1011, 1012, 860, 860, 860, 860, 
	883, 1014, 1015, 1211, 1017, 1018, 1018, 1018, 
	1017, 1018, 1026, 1018, 1018, 1018, 1019, 1018, 
	1026, 1020, 1020, 1020, 1019, 1020, 1025, 1020, 
	1020, 1020, 1021, 1020, 1025, 1022, 1022, 1022, 
	1022, 1024, 1023, 1212, 1024, 1022, 1025, 1020, 
	1026, 1018, 1028, 1213, 1030, 1031, 1031, 1031, 
	1030, 1031, 1057, 1031, 1031, 1031, 1032, 1031, 
	1057, 1033, 1033, 1033, 1032, 1033, 1056, 1033, 
	1033, 1033, 1034, 1033, 1056, 1035, 1035, 1035, 
	1034, 1035, 1055, 1035, 1035, 1035, 1036, 1053, 
	1035, 1055, 1037, 1037, 1037, 1037, 1052, 0, 
	1037, 1037, 1037, 1038, 1037, 1052, 1039, 1040, 
	1050, 1041, 1042, 1049, 1043, 1047, 1044, 1045, 
	1045, 1046, 1038, 1214, 1048, 1051, 1052, 1037, 
	1054, 1053, 1055, 1035, 1056, 1033, 1057, 1031, 
	1059, 1060, 1060, 1060, 1059, 1060, 1070, 1060, 
	1060, 1060, 1061, 1060, 1070, 1062, 1062, 1062, 
	1061, 1062, 1069, 1062, 1062, 1062, 1063, 1062, 
	1069, 1064, 1064, 1064, 1063, 1064, 1068, 1064, 
	1064, 1064, 1065, 1066, 1064, 1068, 1215, 1067, 
	1066, 1068, 1064, 1069, 1062, 1070, 1060, 1072, 
	1073, 1073, 1073, 1072, 1073, 1083, 1073, 1073, 
	1073, 1074, 1073, 1083, 1075, 1075, 1075, 1074, 
	1075, 1082, 1075, 1075, 1075, 1076, 1075, 1082, 
	1077, 1077, 1077, 1076, 1077, 1081, 1077, 1077, 
	1077, 1078, 1077, 1081, 1079, 1079, 1079, 1079, 
	1079, 1080, 1216, 1217, 1218, 1080, 1079, 1081, 
	1077, 1082, 1075, 1083, 1073, 1085, 1086, 1086, 
	1086, 1085, 1086, 1088, 1086, 1086, 1086, 1087, 
	1086, 1088, 1219, 1087, 1088, 1086, 1090, 1091, 
	1091, 1091, 1090, 1091, 1101, 1091, 1091, 1091, 
	1092, 1091, 1101, 1093, 1094, 1095, 0, 1096, 
	1097, 1098, 1099, 1100, 0, 1220, 1101, 1091, 
	1103, 1104, 0, 1105, 1106, 1107, 1221, 1109, 
	1110, 1111, 1112, 1113, 1222, 1115, 1116, 1116, 
	1116, 1115, 1116, 1121, 1116, 1116, 1116, 1117, 
	1116, 1121, 1118, 1118, 1118, 1117, 1118, 1120, 
	1119, 1118, 1118, 1118, 1118, 1120, 1223, 1120, 
	1118, 1121, 1116, 1123, 1124, 1124, 1124, 1123, 
	1124, 1129, 1125, 1124, 1124, 1124, 1124, 1129, 
	1126, 1126, 1126, 1126, 1128, 1127, 1126, 1126, 
	1126, 1126, 1128, 1224, 1128, 1126, 1129, 1124, 
	1131, 1132, 1132, 1132, 1131, 1132, 1137, 1133, 
	1132, 1132, 1132, 1132, 1137, 1134, 1134, 1134, 
	1134, 1136, 1134, 1134, 1134, 1135, 1134, 1136, 
	1225, 1136, 1134, 1137, 1132, 0, 1, 153, 
	1, 1, 161, 1138, 152, 1143, 265, 14, 
	195, 14, 14, 205, 225, 1146, 240, 1144, 
	241, 1147, 243, 0, 143, 143, 143, 171, 
	251, 252, 253, 254, 267, 256, 257, 258, 
	259, 260, 261, 262, 263, 264, 1141, 266, 
	0, 164, 171, 251, 252, 253, 254, 255, 
	256, 257, 258, 259, 260, 261, 262, 263, 
	264, 0, 1, 153, 1, 1, 161, 1138, 
	152, 1143, 265, 1, 1, 1143, 175, 175, 
	175, 1143, 176, 179, 179, 179, 194, 229, 
	0, 206, 209, 211, 212, 213, 214, 215, 
	216, 217, 218, 219, 220, 221, 222, 223, 
	224, 1143
};

static const short _zone_scanner_trans_actions[] = {
	2037, 0, 5, 7, 536, 683, 683, 683, 
	683, 683, 683, 683, 683, 683, 683, 683, 
	683, 683, 683, 683, 3, 0, 3, 0, 
	2165, 99, 698, 701, 41, 55, 53, 51, 
	0, 57, 695, 99, 363, 0, 5, 7, 
	93, 93, 93, 93, 93, 93, 93, 93, 
	93, 93, 93, 93, 93, 93, 93, 3, 
	0, 1706, 1709, 2585, 2589, 0, 0, 0, 
	2581, 1709, 2597, 3857, 2597, 357, 0, 355, 
	5, 7, 361, 3, 0, 371, 357, 1691, 
	11, 404, 407, 1929, 11, 13, 0, 5, 
	7, 1838, 0, 9, 1909, 1700, 359, 9, 
	398, 11, 380, 386, 11, 3852, 1697, 1697, 
	0, 5, 7, 0, 2569, 357, 357, 9, 
	1905, 0, 3427, 5, 7, 2025, 2265, 2265, 
	2265, 2265, 2265, 2265, 2265, 2265, 2265, 2265, 
	2265, 2265, 2265, 2265, 2265, 3, 0, 1694, 
	357, 371, 357, 4183, 704, 2269, 2273, 3602, 
	704, 1703, 0, 5, 7, 374, 0, 0, 
	0, 0, 0, 0, 1832, 3245, 3249, 3241, 
	1832, 3253, 4077, 3253, 395, 1897, 1901, 395, 
	9, 389, 392, 0, 0, 0, 0, 0, 
	0, 1805, 3101, 3105, 3097, 1805, 3109, 4032, 
	3109, 1802, 3085, 3089, 3081, 1802, 3093, 4027, 
	3093, 0, 0, 1763, 2877, 2881, 2873, 1763, 
	2885, 3962, 2885, 0, 0, 0, 1715, 2621, 
	2625, 2617, 1715, 2629, 3882, 2629, 0, 0, 
	0, 0, 0, 0, 1790, 3021, 3025, 3017, 
	1790, 3029, 4007, 3029, 0, 0, 0, 0, 
	1766, 2893, 2897, 2889, 1766, 2901, 3967, 2901, 
	0, 0, 0, 1787, 3005, 3009, 3001, 1787, 
	3013, 4002, 3013, 1772, 2925, 2929, 2921, 1772, 
	2933, 3977, 2933, 0, 0, 0, 0, 0, 
	1823, 3197, 3201, 3193, 1823, 3205, 4062, 3205, 
	0, 1826, 3213, 3217, 3209, 1826, 3221, 4067, 
	3221, 0, 0, 0, 0, 1724, 2669, 2673, 
	2665, 1724, 2677, 3897, 2677, 0, 0, 97, 
	689, 692, 686, 97, 0, 5, 7, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 3, 0, 
	0, 0, 0, 0, 0, 0, 1778, 2957, 
	2961, 2953, 1778, 2965, 3987, 2965, 0, 0, 
	0, 1745, 2781, 2785, 2777, 1745, 2789, 3932, 
	2789, 1760, 2861, 2865, 2857, 1760, 2869, 3957, 
	2869, 0, 0, 0, 0, 0, 0, 1814, 
	3149, 3153, 3145, 1814, 3157, 4047, 3157, 0, 
	1817, 3165, 3169, 3161, 1817, 3173, 4052, 3173, 
	1835, 3261, 3265, 3257, 1835, 3269, 4082, 3269, 
	0, 1751, 2813, 2817, 2809, 1751, 2821, 3942, 
	2821, 1820, 3181, 3185, 3177, 1820, 3189, 4057, 
	3189, 0, 0, 0, 0, 0, 1727, 2685, 
	2689, 2681, 1727, 2693, 3902, 2693, 1730, 2701, 
	2705, 2697, 1730, 2709, 3907, 2709, 0, 0, 
	0, 0, 0, 0, 1757, 2845, 2849, 2841, 
	1757, 2853, 3952, 2853, 0, 1811, 3133, 3137, 
	3129, 1811, 3141, 4042, 3141, 1712, 2605, 2609, 
	0, 2601, 1712, 2613, 3877, 2613, 0, 1784, 
	2989, 2993, 0, 2985, 1784, 2997, 3997, 2997, 
	1793, 3037, 3041, 0, 3033, 1793, 3045, 4012, 
	3045, 0, 0, 0, 0, 1796, 3053, 3057, 
	3049, 1796, 3061, 4017, 3061, 0, 0, 1721, 
	2653, 2657, 2649, 1721, 2661, 3892, 2661, 0, 
	0, 0, 1736, 2733, 2737, 2729, 1736, 2741, 
	3917, 2741, 0, 0, 0, 1781, 2973, 2977, 
	2969, 1781, 2981, 3992, 2981, 1742, 2765, 2769, 
	2761, 1742, 2773, 3927, 2773, 0, 0, 0, 
	0, 0, 1718, 2637, 2641, 2633, 1718, 2645, 
	3887, 2645, 0, 1808, 3117, 3121, 3113, 1808, 
	3125, 4037, 3125, 0, 1754, 2829, 2833, 2825, 
	1754, 2837, 3947, 2837, 0, 0, 0, 1775, 
	2941, 2945, 2937, 1775, 2949, 3982, 2949, 0, 
	0, 0, 0, 0, 1799, 3069, 3073, 3065, 
	1799, 3077, 4022, 3077, 0, 1733, 2717, 2721, 
	2713, 1733, 2725, 3912, 2725, 0, 0, 548, 
	536, 2041, 605, 2145, 2149, 41, 2141, 605, 
	2153, 3557, 2153, 0, 0, 1829, 3229, 3233, 
	3225, 1829, 3237, 4072, 3237, 9, 398, 0, 
	5, 7, 3, 0, 0, 97, 689, 692, 
	686, 97, 0, 5, 7, 536, 95, 95, 
	95, 95, 95, 95, 95, 95, 95, 95, 
	95, 95, 95, 95, 95, 3, 0, 99, 
	698, 701, 41, 55, 53, 51, 0, 57, 
	695, 99, 2169, 41, 55, 53, 51, 0, 
	57, 623, 2201, 2205, 3567, 2197, 623, 9, 
	398, 9, 398, 91, 87, 87, 87, 0, 
	0, 0, 0, 0, 0, 85, 37, 35, 
	491, 494, 488, 35, 0, 5, 7, 3, 
	0, 9, 0, 398, 3412, 500, 1969, 1977, 
	1961, 500, 0, 5, 7, 3, 0, 9, 
	398, 2169, 41, 55, 53, 51, 0, 57, 
	623, 2201, 2205, 3567, 2197, 623, 9, 398, 
	2017, 1989, 3377, 3392, 3362, 1989, 4099, 3402, 
	0, 5, 7, 3, 0, 371, 357, 2577, 
	2593, 3862, 3867, 4213, 2593, 4275, 3872, 4268, 
	3872, 0, 5, 7, 374, 1877, 0, 5, 
	7, 374, 0, 9, 1905, 410, 1913, 1921, 
	3312, 410, 9, 377, 383, 0, 5, 7, 
	0, 357, 9, 1905, 2549, 0, 0, 0, 
	0, 0, 79, 0, 0, 75, 2009, 497, 
	1965, 1973, 3352, 497, 4233, 1981, 3367, 3382, 
	4093, 1981, 0, 5, 7, 374, 0, 9, 
	1905, 3417, 3397, 4105, 4111, 4226, 3397, 4282, 
	4117, 0, 5, 7, 374, 1877, 1985, 509, 
	3372, 3387, 3357, 1985, 11, 380, 386, 1853, 
	11, 395, 3287, 1897, 1901, 395, 9, 389, 
	392, 395, 1897, 1901, 395, 9, 389, 392, 
	0, 0, 1748, 2797, 2801, 2793, 1748, 2805, 
	3937, 2805, 0, 0, 0, 1739, 2749, 2753, 
	2745, 1739, 2757, 3922, 2757, 0, 1769, 2909, 
	2913, 2905, 1769, 2917, 3972, 2917, 9, 398, 
	410, 1913, 1921, 3322, 9, 377, 383, 3273, 
	395, 1897, 1901, 9, 389, 392, 395, 1897, 
	1901, 9, 389, 392, 9, 398, 11, 380, 
	386, 11, 1697, 395, 1897, 1901, 9, 389, 
	392, 512, 9, 398, 9, 398, 9, 1905, 
	422, 1933, 15, 425, 29, 1953, 27, 0, 
	458, 1937, 19, 21, 0, 449, 428, 17, 
	431, 440, 23, 23, 3332, 434, 437, 25, 
	455, 644, 63, 0, 0, 1, 641, 2213, 
	647, 67, 67, 650, 653, 2209, 69, 63, 
	0, 0, 65, 647, 67, 67, 653, 69, 
	69, 73, 0, 5, 7, 3, 0, 539, 
	536, 3562, 11, 404, 407, 41, 55, 53, 
	51, 0, 57, 3317, 11, 416, 0, 5, 
	7, 2221, 0, 9, 3297, 2169, 2157, 41, 
	55, 53, 51, 0, 57, 617, 2173, 2177, 
	3567, 4189, 617, 9, 398, 77, 0, 5, 
	7, 3, 0, 3572, 662, 2225, 19, 21, 
	0, 419, 452, 1941, 1945, 428, 17, 4087, 
	452, 0, 5, 7, 2229, 0, 9, 3302, 
	431, 443, 23, 23, 434, 437, 25, 9, 
	398, 0, 5, 7, 3, 0, 665, 81, 
	671, 668, 2233, 2237, 4195, 668, 668, 677, 
	0, 5, 7, 3577, 674, 2241, 2245, 0, 
	0, 83, 19, 21, 0, 1949, 3337, 3342, 
	428, 17, 4219, 1949, 0, 5, 7, 9, 
	3307, 431, 446, 23, 23, 434, 437, 25, 
	9, 3292, 0, 5, 7, 3, 0, 9, 
	398, 9, 398, 123, 115, 117, 119, 0, 
	121, 0, 5, 7, 3, 0, 1, 368, 
	1, 9, 398, 327, 325, 1616, 1619, 1613, 
	325, 2521, 3847, 2521, 0, 5, 7, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 3, 0, 
	1622, 1869, 1622, 239, 1229, 1232, 0, 0, 
	0, 1226, 239, 2349, 3632, 2349, 0, 0, 
	265, 1346, 1349, 1343, 265, 2401, 3697, 2401, 
	9, 398, 0, 0, 0, 0, 0, 321, 
	1598, 1601, 1595, 321, 2513, 3837, 2513, 0, 
	0, 0, 0, 0, 0, 303, 1517, 1520, 
	1514, 303, 2477, 3792, 2477, 301, 1508, 1511, 
	1505, 301, 2473, 3787, 2473, 0, 0, 275, 
	1391, 1394, 1388, 275, 2421, 3722, 2421, 0, 
	0, 0, 243, 1247, 1250, 1244, 243, 2357, 
	3642, 2357, 0, 0, 0, 0, 0, 0, 
	293, 1472, 1475, 1469, 293, 2457, 3767, 2457, 
	0, 0, 0, 0, 277, 1400, 1403, 1397, 
	277, 2425, 3727, 2425, 0, 0, 0, 291, 
	1463, 1466, 1460, 291, 2453, 3762, 2453, 281, 
	1418, 1421, 1415, 281, 2433, 3737, 2433, 0, 
	0, 0, 0, 0, 315, 1571, 1574, 1568, 
	315, 2501, 3822, 2501, 0, 317, 1580, 1583, 
	1577, 317, 2505, 3827, 2505, 0, 0, 0, 
	0, 249, 1274, 1277, 1271, 249, 2369, 3657, 
	2369, 0, 0, 0, 0, 0, 0, 0, 
	285, 1436, 1439, 1433, 285, 2441, 3747, 2441, 
	0, 0, 0, 263, 1337, 1340, 1334, 263, 
	2397, 3692, 2397, 273, 1382, 1385, 1379, 273, 
	2417, 3717, 2417, 0, 0, 0, 0, 0, 
	0, 309, 1544, 1547, 1541, 309, 2489, 3807, 
	2489, 0, 311, 1553, 1556, 1550, 311, 2493, 
	3812, 2493, 323, 1607, 1610, 1604, 323, 2517, 
	3842, 2517, 0, 267, 1355, 1358, 1352, 267, 
	2405, 3702, 2405, 313, 1562, 1565, 1559, 313, 
	2497, 3817, 2497, 0, 0, 0, 0, 0, 
	251, 1283, 1286, 1280, 251, 2373, 3662, 2373, 
	253, 1292, 1295, 1289, 253, 2377, 3667, 2377, 
	0, 0, 0, 0, 0, 0, 271, 1373, 
	1376, 1370, 271, 2413, 3712, 2413, 0, 307, 
	1535, 1538, 1532, 307, 2485, 3802, 2485, 241, 
	1238, 1241, 0, 1235, 241, 2353, 3637, 2353, 
	0, 289, 1454, 1457, 0, 1451, 289, 2449, 
	3757, 2449, 295, 1481, 1484, 0, 1478, 295, 
	2461, 3772, 2461, 0, 0, 0, 0, 297, 
	1490, 1493, 1487, 297, 2465, 3777, 2465, 0, 
	0, 247, 1265, 1268, 1262, 247, 2365, 3652, 
	2365, 0, 0, 0, 257, 1310, 1313, 1307, 
	257, 2385, 3677, 2385, 0, 0, 0, 287, 
	1445, 1448, 1442, 287, 2445, 3752, 2445, 261, 
	1328, 1331, 1325, 261, 2393, 3687, 2393, 0, 
	0, 0, 0, 0, 245, 1256, 1259, 1253, 
	245, 2361, 3647, 2361, 0, 305, 1526, 1529, 
	1523, 305, 2481, 3797, 2481, 0, 269, 1364, 
	1367, 1361, 269, 2409, 3707, 2409, 0, 0, 
	0, 283, 1427, 1430, 1424, 283, 2437, 3742, 
	2437, 0, 0, 0, 0, 0, 299, 1499, 
	1502, 1496, 299, 2469, 3782, 2469, 0, 255, 
	1301, 1304, 1298, 255, 2381, 3672, 2381, 0, 
	0, 536, 237, 1220, 1223, 41, 1217, 237, 
	2345, 3627, 2345, 0, 0, 319, 1589, 1592, 
	1586, 319, 2509, 3832, 2509, 0, 0, 0, 
	259, 1319, 1322, 1316, 259, 2389, 3682, 2389, 
	0, 279, 1409, 1412, 1406, 279, 2429, 3732, 
	2429, 341, 0, 5, 7, 3, 0, 542, 
	536, 49, 611, 614, 41, 608, 49, 2333, 
	0, 5, 7, 111, 3, 0, 113, 0, 
	5, 7, 3, 0, 737, 1865, 737, 9, 
	398, 9, 398, 9, 398, 0, 5, 7, 
	3, 0, 536, 536, 365, 1845, 1849, 41, 
	1, 1841, 365, 0, 5, 7, 111, 3, 
	0, 113, 0, 5, 7, 3, 0, 737, 
	1865, 737, 9, 398, 9, 398, 49, 611, 
	614, 608, 49, 9, 398, 347, 536, 0, 
	0, 0, 0, 0, 569, 41, 0, 0, 
	746, 0, 749, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 755, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	767, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 770, 0, 
	0, 0, 0, 0, 0, 0, 0, 773, 
	0, 0, 0, 0, 0, 0, 776, 0, 
	0, 779, 0, 0, 0, 0, 0, 0, 
	0, 782, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 785, 0, 0, 788, 
	0, 0, 0, 0, 0, 0, 743, 0, 
	0, 0, 0, 0, 752, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	758, 0, 0, 761, 0, 0, 764, 349, 
	536, 0, 0, 0, 0, 0, 0, 581, 
	41, 0, 0, 0, 0, 0, 809, 0, 
	0, 0, 0, 0, 0, 0, 0, 812, 
	0, 0, 0, 806, 0, 0, 800, 0, 
	0, 0, 803, 0, 0, 818, 0, 0, 
	0, 797, 0, 0, 791, 0, 0, 0, 
	794, 0, 0, 815, 710, 707, 2285, 101, 
	515, 518, 515, 39, 524, 527, 521, 39, 
	0, 5, 7, 515, 3, 0, 39, 524, 
	527, 521, 39, 545, 0, 5, 7, 536, 
	3, 0, 47, 599, 602, 41, 596, 47, 
	0, 5, 7, 536, 3, 0, 2161, 47, 
	599, 602, 41, 55, 53, 51, 0, 57, 
	596, 47, 0, 5, 7, 536, 3, 0, 
	47, 599, 602, 41, 55, 53, 51, 0, 
	57, 596, 47, 0, 5, 7, 536, 3, 
	0, 47, 599, 602, 41, 55, 53, 51, 
	0, 57, 596, 47, 0, 5, 7, 536, 
	3, 0, 593, 41, 55, 53, 51, 0, 
	57, 2169, 41, 55, 53, 51, 0, 57, 
	2181, 3567, 9, 398, 2169, 41, 55, 53, 
	51, 0, 57, 620, 2189, 2193, 3567, 2185, 
	620, 9, 398, 2169, 41, 55, 53, 51, 
	0, 57, 620, 2189, 2193, 3567, 2185, 620, 
	9, 398, 2169, 41, 55, 53, 51, 0, 
	57, 620, 2189, 2193, 3567, 2185, 620, 9, 
	398, 9, 398, 9, 398, 461, 33, 476, 
	479, 473, 33, 461, 0, 5, 7, 3, 
	0, 470, 9, 398, 515, 39, 524, 527, 
	521, 39, 0, 5, 7, 515, 3, 0, 
	518, 9, 398, 536, 45, 587, 590, 41, 
	584, 45, 0, 5, 7, 515, 3, 0, 
	518, 9, 398, 2217, 659, 33, 476, 479, 
	473, 33, 1957, 3347, 1957, 461, 0, 5, 
	7, 3, 0, 656, 1861, 656, 9, 398, 
	707, 2301, 101, 1682, 2525, 329, 1628, 1631, 
	41, 1625, 329, 0, 5, 7, 536, 0, 
	0, 3, 0, 333, 1646, 1649, 41, 1643, 
	333, 0, 5, 7, 3552, 3, 0, 551, 
	2073, 2077, 0, 41, 2069, 551, 0, 5, 
	7, 3, 0, 0, 5, 7, 3, 0, 
	536, 331, 1637, 1640, 41, 1634, 331, 0, 
	5, 7, 536, 0, 0, 3, 0, 335, 
	1655, 1658, 41, 1652, 335, 0, 5, 7, 
	3552, 3, 0, 554, 2085, 2089, 0, 41, 
	2081, 554, 0, 5, 7, 3, 0, 0, 
	5, 7, 3, 0, 0, 3547, 4207, 557, 
	2097, 2101, 0, 41, 557, 2093, 557, 3527, 
	4159, 3527, 0, 5, 7, 3547, 3, 0, 
	1679, 1873, 1679, 560, 2109, 2113, 0, 41, 
	560, 2105, 560, 3532, 4165, 3532, 0, 5, 
	7, 3547, 3, 0, 1873, 1679, 563, 2121, 
	2125, 0, 41, 563, 2117, 563, 3537, 4171, 
	3537, 0, 5, 7, 3547, 3, 0, 1873, 
	1679, 566, 2133, 2137, 0, 41, 2129, 566, 
	3542, 4177, 3542, 0, 5, 7, 3, 0, 
	1873, 1679, 9, 398, 2065, 3517, 3522, 3432, 
	3512, 2065, 4153, 4261, 4153, 533, 9, 398, 
	2061, 3502, 3507, 3432, 2061, 3497, 2061, 4147, 
	4254, 4147, 533, 9, 398, 2057, 3487, 3492, 
	3432, 2057, 3482, 2057, 4141, 4247, 4141, 533, 
	9, 398, 2053, 3472, 3477, 3432, 2053, 3467, 
	2053, 4135, 4240, 4135, 533, 9, 398, 339, 
	1673, 1676, 1670, 339, 9, 398, 2049, 3457, 
	3462, 3432, 3452, 2049, 533, 9, 398, 9, 
	398, 9, 398, 337, 1664, 1667, 1661, 337, 
	9, 398, 2045, 3442, 3447, 3432, 3437, 2045, 
	533, 9, 398, 9, 398, 536, 45, 587, 
	590, 41, 584, 45, 0, 5, 7, 536, 
	3, 0, 45, 587, 590, 41, 584, 45, 
	0, 5, 7, 536, 3, 0, 45, 587, 
	590, 41, 584, 45, 0, 5, 7, 515, 
	3, 0, 518, 9, 398, 9, 398, 9, 
	398, 536, 45, 587, 590, 41, 584, 45, 
	0, 5, 7, 536, 3, 0, 45, 587, 
	590, 41, 584, 45, 461, 0, 5, 7, 
	3, 0, 33, 476, 479, 473, 33, 461, 
	0, 5, 7, 3, 0, 33, 476, 479, 
	473, 33, 461, 0, 5, 7, 3, 0, 
	33, 476, 479, 473, 33, 0, 5, 7, 
	515, 3, 0, 518, 9, 398, 9, 398, 
	9, 398, 9, 398, 9, 398, 353, 0, 
	5, 7, 3, 0, 536, 45, 587, 590, 
	41, 584, 45, 0, 5, 7, 351, 3, 
	0, 0, 5, 7, 3, 0, 125, 1, 
	9, 398, 9, 398, 9, 398, 731, 0, 
	719, 5, 7, 722, 725, 3, 0, 1, 
	368, 1, 107, 109, 0, 2277, 707, 101, 
	103, 536, 728, 2325, 2329, 41, 2321, 728, 
	2317, 3622, 2317, 9, 398, 0, 707, 101, 
	105, 536, 45, 587, 590, 41, 584, 45, 
	0, 5, 7, 351, 3, 0, 0, 5, 
	7, 3, 0, 536, 43, 575, 578, 41, 
	572, 43, 734, 0, 5, 7, 111, 3, 
	0, 113, 0, 5, 7, 3, 0, 1, 
	368, 1, 9, 398, 9, 398, 9, 398, 
	9, 398, 536, 43, 575, 578, 41, 572, 
	43, 0, 5, 7, 536, 3, 0, 43, 
	575, 578, 41, 572, 43, 0, 5, 7, 
	111, 3, 0, 113, 0, 5, 7, 3, 
	0, 1, 368, 1, 9, 398, 9, 398, 
	9, 398, 536, 43, 575, 578, 41, 572, 
	43, 821, 0, 5, 7, 143, 145, 147, 
	149, 3, 0, 0, 5, 7, 3, 0, 
	2029, 536, 43, 575, 578, 41, 572, 43, 
	0, 5, 7, 0, 3, 0, 2341, 0, 
	5, 7, 0, 5, 7, 0, 5, 7, 
	1, 3, 0, 368, 1, 3, 0, 368, 
	1, 3, 0, 368, 1, 824, 125, 9, 
	398, 9, 398, 9, 398, 9, 398, 9, 
	398, 0, 5, 7, 3, 0, 536, 43, 
	575, 578, 41, 572, 43, 2281, 0, 5, 
	7, 707, 3, 0, 3607, 101, 713, 2293, 
	2297, 713, 2293, 2297, 713, 2293, 2297, 2285, 
	2289, 713, 3612, 2285, 2289, 713, 3612, 2285, 
	2289, 713, 3612, 2285, 9, 398, 9, 398, 
	0, 5, 7, 3, 0, 536, 43, 575, 
	578, 41, 572, 43, 0, 5, 7, 707, 
	3, 0, 101, 716, 2309, 2313, 716, 2309, 
	2313, 716, 2309, 2313, 2301, 2305, 716, 3617, 
	2301, 2305, 716, 3617, 2301, 2305, 716, 3617, 
	2301, 9, 398, 9, 398, 0, 5, 7, 
	3, 0, 536, 43, 575, 578, 41, 572, 
	43, 0, 5, 7, 515, 3, 0, 39, 
	524, 527, 39, 524, 527, 39, 524, 527, 
	518, 521, 39, 2021, 518, 521, 39, 2021, 
	518, 521, 39, 2021, 518, 9, 398, 9, 
	398, 9, 398, 827, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 151, 833, 836, 0, 0, 
	0, 830, 151, 0, 5, 7, 351, 3, 
	0, 0, 5, 7, 3, 0, 536, 43, 
	575, 578, 41, 572, 43, 0, 5, 7, 
	536, 3, 0, 47, 599, 602, 41, 596, 
	47, 638, 0, 5, 7, 626, 3, 0, 
	61, 632, 635, 59, 629, 61, 0, 5, 
	7, 626, 3, 0, 61, 632, 635, 59, 
	629, 61, 0, 5, 7, 536, 3, 0, 
	45, 587, 590, 41, 584, 45, 0, 5, 
	7, 515, 3, 0, 39, 524, 527, 521, 
	39, 0, 5, 7, 125, 3, 0, 1, 
	9, 398, 9, 398, 9, 398, 9, 398, 
	9, 398, 9, 398, 9, 398, 9, 398, 
	0, 0, 177, 950, 953, 947, 177, 0, 
	0, 0, 171, 923, 926, 920, 171, 0, 
	191, 1013, 1016, 1010, 191, 0, 0, 0, 
	0, 0, 233, 1202, 1205, 1199, 233, 0, 
	0, 0, 0, 0, 0, 215, 1121, 1124, 
	1118, 215, 213, 1112, 1115, 1109, 213, 0, 
	0, 187, 995, 998, 992, 187, 0, 0, 
	0, 155, 851, 854, 848, 155, 0, 0, 
	0, 0, 0, 0, 205, 1076, 1079, 1073, 
	205, 0, 0, 0, 0, 189, 1004, 1007, 
	1001, 189, 0, 0, 0, 203, 1067, 1070, 
	1064, 203, 193, 1022, 1025, 1019, 193, 0, 
	0, 0, 0, 0, 227, 1175, 1178, 1172, 
	227, 0, 229, 1184, 1187, 1181, 229, 0, 
	0, 0, 0, 161, 878, 881, 875, 161, 
	0, 0, 0, 0, 0, 0, 0, 197, 
	1040, 1043, 1037, 197, 0, 0, 0, 175, 
	941, 944, 938, 175, 185, 986, 989, 983, 
	185, 0, 0, 0, 0, 0, 0, 221, 
	1148, 1151, 1145, 221, 0, 223, 1157, 1160, 
	1154, 223, 235, 1211, 1214, 1208, 235, 0, 
	179, 959, 962, 956, 179, 225, 1166, 1169, 
	1163, 225, 0, 0, 0, 0, 0, 163, 
	887, 890, 884, 163, 165, 896, 899, 893, 
	165, 0, 0, 0, 0, 0, 0, 183, 
	977, 980, 974, 183, 0, 219, 1139, 1142, 
	1136, 219, 153, 842, 845, 0, 839, 153, 
	0, 201, 1058, 1061, 0, 1055, 201, 207, 
	1085, 1088, 0, 1082, 207, 0, 0, 0, 
	0, 209, 1094, 1097, 1091, 209, 0, 0, 
	159, 869, 872, 866, 159, 0, 0, 0, 
	169, 914, 917, 911, 169, 0, 0, 0, 
	199, 1049, 1052, 1046, 199, 173, 932, 935, 
	929, 173, 0, 0, 0, 0, 0, 157, 
	860, 863, 857, 157, 0, 217, 1130, 1133, 
	1127, 217, 0, 181, 968, 971, 965, 181, 
	0, 0, 0, 195, 1031, 1034, 1028, 195, 
	0, 0, 0, 0, 0, 211, 1103, 1106, 
	1100, 211, 0, 167, 905, 908, 902, 167, 
	0, 0, 2033, 536, 45, 587, 590, 41, 
	584, 45, 0, 0, 231, 1193, 1196, 1190, 
	231, 515, 530, 1, 536, 45, 587, 590, 
	41, 584, 45, 0, 5, 7, 536, 3, 
	0, 43, 575, 578, 41, 572, 43, 0, 
	5, 7, 351, 3, 0, 0, 5, 7, 
	3, 0, 125, 1, 9, 398, 9, 398, 
	9, 398, 125, 1, 536, 43, 575, 578, 
	41, 572, 43, 0, 5, 7, 536, 3, 
	0, 43, 575, 578, 41, 572, 43, 0, 
	5, 7, 536, 3, 0, 45, 587, 590, 
	41, 584, 45, 0, 5, 7, 31, 464, 
	3, 0, 33, 476, 479, 473, 33, 740, 
	0, 5, 7, 467, 3, 0, 129, 131, 
	0, 133, 135, 0, 137, 0, 139, 141, 
	0, 482, 127, 1, 0, 0, 9, 398, 
	113, 111, 9, 398, 9, 398, 9, 398, 
	536, 43, 575, 578, 41, 572, 43, 0, 
	5, 7, 536, 3, 0, 43, 575, 578, 
	41, 572, 43, 0, 5, 7, 536, 3, 
	0, 45, 587, 590, 41, 584, 45, 0, 
	5, 7, 31, 464, 3, 0, 470, 113, 
	111, 9, 398, 9, 398, 9, 398, 536, 
	43, 575, 578, 41, 572, 43, 0, 5, 
	7, 536, 3, 0, 43, 575, 578, 41, 
	572, 43, 0, 5, 7, 536, 3, 0, 
	43, 575, 578, 41, 572, 43, 0, 5, 
	7, 111, 3, 0, 113, 0, 5, 7, 
	3, 0, 1, 368, 1, 9, 398, 9, 
	398, 9, 398, 9, 398, 536, 45, 587, 
	590, 41, 584, 45, 0, 5, 7, 707, 
	3, 0, 2285, 101, 9, 398, 536, 45, 
	587, 590, 41, 584, 45, 0, 5, 7, 
	1688, 3, 0, 113, 111, 113, 2337, 345, 
	111, 113, 111, 113, 2545, 2541, 9, 398, 
	1685, 113, 2537, 343, 111, 113, 2529, 1685, 
	113, 343, 111, 113, 2533, 536, 45, 587, 
	590, 41, 584, 45, 0, 5, 7, 536, 
	3, 0, 45, 587, 590, 41, 584, 45, 
	71, 0, 5, 7, 3, 0, 1, 9, 
	398, 9, 398, 536, 43, 575, 578, 41, 
	572, 43, 461, 0, 5, 7, 3, 0, 
	33, 476, 479, 473, 33, 71, 0, 5, 
	7, 3, 0, 1, 9, 398, 9, 398, 
	536, 45, 587, 590, 41, 584, 45, 461, 
	0, 5, 7, 3, 0, 33, 476, 479, 
	473, 33, 0, 5, 7, 515, 3, 0, 
	518, 9, 398, 9, 398, 506, 503, 0, 
	1997, 2001, 485, 401, 11, 1993, 503, 503, 
	357, 1885, 1893, 2561, 2573, 1857, 503, 2553, 
	1697, 3282, 2565, 2013, 503, 1885, 1893, 2261, 
	2261, 2261, 2261, 2261, 2261, 2261, 2261, 2261, 
	2261, 2261, 2261, 2261, 2261, 2261, 1857, 503, 
	3407, 3422, 3597, 3597, 3597, 3597, 3597, 3597, 
	3597, 3597, 3597, 3597, 3597, 3597, 3597, 3597, 
	3597, 2005, 2257, 89, 3587, 3592, 2253, 2249, 
	680, 3582, 2257, 1885, 1893, 1857, 413, 1917, 
	1925, 3327, 413, 413, 1881, 1889, 413, 2557, 
	4123, 4129, 4201, 4201, 4201, 4201, 4201, 4201, 
	4201, 4201, 4201, 4201, 4201, 4201, 4201, 4201, 
	4201, 3277
};

static const short _zone_scanner_eof_actions[] = {
	0, 2037, 2165, 363, 1706, 355, 1691, 13, 
	13, 355, 355, 1691, 1691, 1691, 3427, 4183, 
	1703, 363, 363, 1706, 1691, 1691, 363, 363, 
	363, 363, 363, 1706, 1706, 363, 363, 1706, 
	363, 363, 363, 1706, 363, 363, 363, 363, 
	1706, 363, 363, 363, 1706, 363, 363, 363, 
	1706, 1706, 363, 363, 363, 363, 1706, 363, 
	1706, 363, 363, 363, 363, 1706, 363, 363, 
	363, 363, 363, 363, 363, 363, 363, 363, 
	1706, 363, 363, 1706, 1706, 363, 363, 1706, 
	363, 1706, 1706, 363, 1706, 1706, 363, 363, 
	363, 363, 1706, 1706, 363, 363, 363, 363, 
	1706, 363, 1706, 1706, 363, 1706, 1706, 363, 
	363, 363, 363, 1706, 363, 363, 1706, 363, 
	1706, 363, 363, 363, 1706, 1706, 363, 363, 
	1706, 363, 1706, 363, 1706, 363, 363, 363, 
	1706, 363, 363, 363, 1706, 363, 1706, 363, 
	363, 548, 2041, 363, 363, 1706, 363, 2037, 
	363, 363, 548, 2165, 2165, 2165, 2165, 363, 
	13, 91, 91, 91, 91, 91, 91, 91, 
	91, 37, 548, 0, 3412, 548, 363, 2165, 
	2165, 2165, 363, 2017, 2041, 2577, 1691, 2037, 
	13, 1691, 13, 3427, 2577, 2577, 2577, 2577, 
	2577, 2577, 2577, 2577, 2577, 2577, 2577, 2577, 
	2577, 2577, 1691, 2549, 91, 91, 91, 91, 
	91, 91, 91, 91, 91, 2009, 4233, 2037, 
	1703, 3417, 3427, 3417, 3417, 3417, 3417, 3417, 
	3417, 3417, 3417, 3417, 3417, 3417, 3417, 3417, 
	3417, 509, 3427, 1691, 13, 1691, 1691, 363, 
	363, 1706, 363, 363, 363, 1706, 363, 1706, 
	1691, 1691, 13, 1691, 1691, 1691, 1691, 355, 
	3427, 1691, 1691, 512, 512, 512, 512, 512, 
	512, 512, 512, 512, 512, 512, 512, 512, 
	512, 13, 1703, 512, 1703, 0, 0, 29, 
	29, 29, 440, 440, 440, 440, 29, 29, 
	644, 644, 2213, 2213, 2213, 2213, 644, 65, 
	2213, 2213, 2213, 2213, 73, 539, 3562, 416, 
	416, 3562, 2157, 3562, 73, 77, 77, 77, 
	419, 419, 419, 443, 443, 443, 443, 419, 
	77, 0, 81, 671, 677, 83, 677, 13, 
	13, 446, 446, 446, 446, 677, 13, 83, 
	0, 0, 123, 123, 123, 123, 123, 123, 
	123, 327, 327, 327, 327, 327, 327, 327, 
	327, 327, 327, 327, 327, 327, 327, 327, 
	327, 327, 327, 327, 327, 327, 327, 327, 
	327, 327, 327, 327, 327, 327, 327, 327, 
	327, 327, 327, 327, 327, 327, 327, 327, 
	327, 327, 327, 327, 327, 327, 327, 327, 
	327, 327, 327, 327, 327, 327, 327, 327, 
	327, 327, 327, 327, 327, 327, 327, 327, 
	327, 327, 327, 327, 327, 327, 327, 327, 
	327, 327, 327, 327, 327, 327, 327, 327, 
	327, 327, 327, 327, 327, 327, 327, 327, 
	327, 327, 327, 327, 327, 327, 327, 327, 
	327, 327, 327, 327, 327, 327, 327, 327, 
	327, 327, 327, 327, 327, 327, 327, 327, 
	327, 327, 327, 327, 327, 327, 327, 327, 
	327, 327, 327, 327, 327, 327, 327, 327, 
	327, 327, 327, 327, 327, 327, 341, 542, 
	542, 2333, 2333, 2333, 2333, 341, 341, 341, 
	542, 542, 2333, 2333, 2333, 2333, 341, 542, 
	341, 347, 347, 347, 347, 347, 347, 347, 
	347, 347, 347, 347, 347, 347, 347, 347, 
	347, 347, 347, 347, 347, 347, 347, 347, 
	347, 347, 347, 347, 347, 347, 347, 347, 
	347, 347, 347, 347, 347, 347, 347, 347, 
	347, 347, 347, 347, 347, 347, 347, 347, 
	347, 347, 347, 347, 347, 347, 347, 347, 
	347, 347, 347, 347, 347, 347, 347, 347, 
	347, 347, 347, 347, 347, 347, 347, 347, 
	347, 347, 347, 347, 347, 347, 347, 347, 
	347, 347, 347, 347, 347, 347, 347, 347, 
	347, 347, 347, 347, 347, 347, 347, 347, 
	347, 347, 347, 347, 347, 347, 347, 347, 
	347, 349, 349, 349, 349, 349, 349, 349, 
	349, 349, 349, 349, 349, 349, 349, 349, 
	349, 349, 349, 349, 349, 349, 349, 349, 
	349, 349, 349, 349, 349, 349, 349, 349, 
	349, 349, 349, 349, 349, 349, 349, 349, 
	349, 349, 710, 710, 355, 355, 355, 355, 
	355, 355, 545, 545, 545, 2161, 545, 2161, 
	545, 2161, 545, 2161, 2161, 2161, 2161, 355, 
	2161, 2161, 2161, 355, 2161, 2161, 2161, 355, 
	2161, 2161, 2161, 355, 355, 355, 355, 355, 
	355, 355, 355, 355, 355, 355, 355, 355, 
	545, 545, 355, 355, 355, 659, 659, 659, 
	659, 710, 710, 1682, 1682, 1682, 1682, 1682, 
	1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682, 
	1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682, 
	1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682, 
	1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682, 
	1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682, 
	1682, 1682, 1682, 1682, 1682, 1682, 1682, 1682, 
	1682, 1682, 545, 545, 545, 545, 545, 545, 
	355, 355, 355, 355, 355, 545, 545, 545, 
	545, 355, 355, 355, 355, 355, 355, 355, 
	355, 355, 355, 355, 355, 355, 355, 355, 
	545, 545, 355, 355, 355, 355, 355, 355, 
	355, 731, 731, 731, 2277, 2277, 731, 731, 
	355, 731, 2277, 2277, 545, 545, 355, 355, 
	545, 545, 734, 734, 734, 734, 355, 355, 
	355, 545, 545, 545, 545, 734, 734, 734, 
	734, 355, 355, 545, 545, 821, 821, 2029, 
	2029, 821, 2341, 824, 824, 824, 824, 824, 
	824, 824, 821, 821, 821, 2029, 2029, 2281, 
	3607, 821, 821, 821, 2029, 2029, 2281, 3607, 
	821, 821, 821, 2029, 2029, 821, 2341, 821, 
	821, 355, 827, 827, 355, 355, 545, 545, 
	545, 545, 638, 638, 638, 638, 545, 545, 
	355, 355, 355, 355, 355, 355, 355, 355, 
	355, 355, 355, 355, 827, 827, 827, 827, 
	827, 827, 827, 827, 827, 827, 827, 827, 
	827, 827, 827, 827, 827, 827, 827, 827, 
	827, 827, 827, 827, 827, 827, 827, 827, 
	827, 827, 827, 827, 827, 827, 827, 827, 
	827, 827, 827, 827, 827, 827, 827, 827, 
	827, 827, 827, 827, 827, 827, 827, 827, 
	827, 827, 827, 827, 827, 827, 827, 827, 
	827, 827, 827, 827, 827, 827, 827, 827, 
	827, 827, 827, 827, 827, 827, 827, 827, 
	827, 827, 827, 827, 827, 827, 827, 827, 
	827, 827, 827, 827, 827, 827, 827, 827, 
	827, 827, 827, 827, 827, 827, 827, 827, 
	827, 827, 827, 827, 827, 827, 827, 827, 
	827, 827, 827, 827, 827, 827, 827, 827, 
	827, 827, 827, 827, 827, 827, 827, 827, 
	2033, 2033, 827, 827, 827, 355, 355, 355, 
	545, 545, 545, 545, 355, 355, 355, 355, 
	355, 355, 355, 355, 355, 545, 545, 545, 
	545, 545, 545, 734, 734, 740, 740, 740, 
	740, 740, 740, 740, 740, 740, 355, 740, 
	740, 740, 740, 740, 355, 734, 734, 355, 
	355, 355, 545, 545, 545, 545, 545, 545, 
	734, 734, 734, 734, 355, 355, 355, 545, 
	545, 545, 545, 545, 545, 734, 734, 734, 
	734, 355, 355, 355, 545, 545, 710, 710, 
	355, 545, 545, 734, 734, 734, 734, 2337, 
	734, 734, 734, 734, 2545, 355, 734, 734, 
	2537, 734, 734, 2537, 734, 734, 2537, 734, 
	734, 2537, 545, 545, 545, 545, 355, 355, 
	355, 355, 545, 545, 355, 355, 355, 355, 
	355, 355, 545, 545, 355, 355, 355, 355, 
	355, 355, 0, 0, 0, 0, 89, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0
};

static const int zone_scanner_start = 1138;
static const int zone_scanner_first_final = 1138;
static const int zone_scanner_error = 0;

static const int zone_scanner_en_err_line = 269;
static const int zone_scanner_en_dname_ = 271;
static const int zone_scanner_en_text_ = 280;
static const int zone_scanner_en_default_ttl_ = 292;
static const int zone_scanner_en_zone_origin_ = 301;
static const int zone_scanner_en_include_file_ = 313;
static const int zone_scanner_en_base64_ = 330;
static const int zone_scanner_en_bitmap_ = 337;
static const int zone_scanner_en_nonempty_hex_r_data = 470;
static const int zone_scanner_en_hex_r_data = 479;
static const int zone_scanner_en_dns_alg_ = 489;
static const int zone_scanner_en_cert_type_ = 593;
static const int zone_scanner_en_r_data_a = 634;
static const int zone_scanner_en_r_data_ns = 636;
static const int zone_scanner_en_r_data_soa = 638;
static const int zone_scanner_en_r_data_hinfo = 670;
static const int zone_scanner_en_r_data_minfo = 675;
static const int zone_scanner_en_r_data_mx = 680;
static const int zone_scanner_en_r_data_txt = 685;
static const int zone_scanner_en_r_data_aaaa = 689;
static const int zone_scanner_en_r_data_loc = 691;
static const int zone_scanner_en_r_data_srv = 746;
static const int zone_scanner_en_r_data_naptr = 757;
static const int zone_scanner_en_r_data_cert = 774;
static const int zone_scanner_en_r_data_apl = 785;
static const int zone_scanner_en_r_data_ds = 796;
static const int zone_scanner_en_r_data_sshfp = 809;
static const int zone_scanner_en_r_data_ipseckey = 819;
static const int zone_scanner_en_r_data_rrsig = 858;
static const int zone_scanner_en_r_data_nsec = 1013;
static const int zone_scanner_en_r_data_dnskey = 1016;
static const int zone_scanner_en_r_data_dhcid = 1027;
static const int zone_scanner_en_r_data_nsec3 = 1029;
static const int zone_scanner_en_r_data_nsec3param = 1058;
static const int zone_scanner_en_r_data_tlsa = 1071;
static const int zone_scanner_en_r_data_l32 = 1084;
static const int zone_scanner_en_r_data_l64 = 1089;
static const int zone_scanner_en_r_data_eui48 = 1102;
static const int zone_scanner_en_r_data_eui64 = 1108;
static const int zone_scanner_en_r_data_uri = 1114;
static const int zone_scanner_en_r_data_caa = 1122;
static const int zone_scanner_en_r_data_lb = 1130;
static const int zone_scanner_en_main = 1138;


#line 85 "scanner.rl"


__attribute__((visibility("default")))
int zs_init(
	zs_scanner_t *s,
	const char *origin,
	const uint16_t rclass,
	const uint32_t ttl)
{
	if (s == NULL) {
		return -1;
	}

	memset(s, 0, sizeof(*s));

	// Nonzero initial scanner state.
	s->cs = 1138;

	// Reset the file descriptor.
	s->file.descriptor = -1;

	// Use the root zone as origin if not specified.
	if (origin == NULL || strlen(origin) == 0) {
		origin = ".";
	}
	size_t origin_len = strlen(origin);

	// Prepare a zone settings header.
	const char *format;
	if (origin[origin_len - 1] != '.') {
		format = "$ORIGIN %s.\n";
	} else {
		format = "$ORIGIN %s\n";
	}

	char settings[1024];
	int ret = snprintf(settings, sizeof(settings), format, origin);
	if (ret <= 0 || ret >= sizeof(settings)) {
		ERR(ZS_ENOMEM);
		return -1;
	}

	// Parse the settings to set up the scanner origin.
	if (zs_set_input_string(s, settings, ret) != 0 ||
	    zs_parse_all(s) != 0) {
		return -1;
	}

	// Set scanner defaults.
	s->path = strdup(".");
	if (s->path == NULL) {
		ERR(ZS_ENOMEM);
		return -1;
	}
	s->default_class = rclass;
	s->default_ttl = ttl;
	s->line_counter = 1;

	s->state = ZS_STATE_NONE;
	s->process.automatic = false;

	return 0;
}

static void input_deinit(
	zs_scanner_t *s,
	bool keep_filename)
{
	// Deinit the file input.
	if (s->file.descriptor != -1) {
		// Unmap the file content.
		if (s->input.start != NULL) {
			munmap((void *)s->input.start,
			       s->input.end - s->input.start);
		}

		// Close the opened file.
		close(s->file.descriptor);
		s->file.descriptor = -1;
	}

	// Keep file name for possible trailing error report.
	if (!keep_filename) {
		free(s->file.name);
		s->file.name = NULL;
	}

	// Unset the input limits.
	s->input.start   = NULL;
	s->input.current = NULL;
	s->input.end     = NULL;
	s->input.eof     = false;
}

__attribute__((visibility("default")))
void zs_deinit(
	zs_scanner_t *s)
{
	if (s == NULL) {
		return;
	}

	input_deinit(s, false);
	free(s->path);
}

static int set_input_string(
	zs_scanner_t *s,
	const char *input,
	size_t size,
	bool final_block)
{
	if (s == NULL) {
		return -1;
	}

	if (input == NULL) {
		ERR(ZS_EINVAL);
		return -1;
	}

	// Deinit possibly opened file.
	input_deinit(s, final_block);

	// Set the scanner input limits.
	s->input.start   = input;
	s->input.current = input;
	s->input.end     = input + size;
	s->input.eof     = final_block;

	return 0;
}

__attribute__((visibility("default")))
int zs_set_input_string(
	zs_scanner_t *s,
	const char *input,
	size_t size)
{
	return set_input_string(s, input, size, false);
}

__attribute__((visibility("default")))
int zs_set_input_file(
	zs_scanner_t *s,
	const char *file_name)
{
	if (s == NULL) {
		return -1;
	}

	if (file_name == NULL) {
		ERR(ZS_EINVAL);
		return -1;
	}

	// Deinit possibly opened file.
	input_deinit(s, false);

	// Try to open the file.
	s->file.descriptor = open(file_name, O_RDONLY);
	if (s->file.descriptor == -1) {
		ERR(ZS_FILE_OPEN);
		return -1;
	}

	// Check for regular file input.
	struct stat file_stat;
	if (fstat(s->file.descriptor, &file_stat) == -1 ||
	    !S_ISREG(file_stat.st_mode)) {
		ERR(ZS_FILE_INVALID);
		input_deinit(s, false);
		return -1;
	}

	// Check for empty file (cannot mmap).
	if (file_stat.st_size > 0) {
		// Map the file to the memory.
		char *start = mmap(0, file_stat.st_size, PROT_READ, MAP_SHARED,
		                   s->file.descriptor, 0);
		if (start == MAP_FAILED) {
			ERR(ZS_FILE_MMAP);
			input_deinit(s, false);
			return -1;
		}

		// Try to set the mapped memory advise to sequential.
		(void)madvise(start, file_stat.st_size, MADV_SEQUENTIAL);

		// Set the scanner input limits.
		s->input.start   = start;
		s->input.current = start;
		s->input.end     = start + file_stat.st_size;
	}

	// Get absolute path of the zone file.
	char *full_name = realpath(file_name, NULL);
	if (full_name != NULL) {
		free(s->path);
		s->path = strdup(dirname(full_name));
		free(full_name);
		if (s->path == NULL) {
			ERR(ZS_ENOMEM);
			input_deinit(s, false);
			return -1;
		}
	} else {
		ERR(ZS_FILE_PATH);
		input_deinit(s, false);
		return -1;
	}

	s->file.name = strdup(file_name);
	if (s->file.name == NULL) {
		ERR(ZS_ENOMEM);
		input_deinit(s, false);
		return -1;
	}

	return 0;
}

__attribute__((visibility("default")))
int zs_set_processing(
	zs_scanner_t *s,
	void (*process_record)(zs_scanner_t *),
	void (*process_error)(zs_scanner_t *),
	void *data)
{
	if (s == NULL) {
		return -1;
	}

	s->process.record = process_record;
	s->process.error = process_error;
	s->process.data = data;

	return 0;
}

typedef enum {
	WRAP_NONE,     // Initial state.
	WRAP_DETECTED, // Input block end is a first '\' in rdata.
	WRAP_PROCESS   // Parsing of auxiliary block = "\".
} wrap_t;

static void parse(
	zs_scanner_t *s,
	wrap_t *wrap)
{
	// Restore scanner input limits (Ragel internals).
	const char *p = s->input.current;
	const char *pe = s->input.end;
	const char *eof = s->input.eof ? pe : NULL;

	// Restore state variables (Ragel internals).
	int cs  = s->cs;
	int top = s->top;
	int stack[RAGEL_STACK_SIZE];
	memcpy(stack, s->stack, sizeof(stack));

	// Auxiliary variables which are used in scanner body.
	struct in_addr  addr4;
	struct in6_addr addr6;
	uint32_t timestamp;
	int16_t  window;
	int      ret;

	// Next 2 variables are for better performance.
	// Restoring r_data pointer to next free space.
	uint8_t *rdata_tail = s->r_data + s->r_data_tail;
	// Initialization of the last r_data byte.
	uint8_t *rdata_stop = s->r_data + MAX_RDATA_LENGTH - 1;

	// Write scanner body (in C).
	
#line 5685 "scanner.c"
	{
	int _klen;
	unsigned int _trans;
	short _widec;
	const short *_acts;
	unsigned int _nacts;
	const short *_keys;

	if ( p == pe )
		goto _test_eof;
	if ( cs == 0 )
		goto _out;
_resume:
	_widec = (*p);
	_klen = _zone_scanner_cond_lengths[cs];
	_keys = _zone_scanner_cond_keys + (_zone_scanner_cond_offsets[cs]*2);
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _mid[0] )
				_upper = _mid - 2;
			else if ( _widec > _mid[1] )
				_lower = _mid + 2;
			else {
				switch ( _zone_scanner_cond_spaces[_zone_scanner_cond_offsets[cs] + ((_mid - _keys)>>1)] ) {
	case 0: {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		break;
	}
	case 1: {
		_widec = (short)(1152 + ((*p) - -128));
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 256;
		break;
	}
	case 2: {
		_widec = (short)(128 + ((*p) - -128));
		if ( 
#line 623 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		break;
	}
	case 3: {
		_widec = (short)(2688 + ((*p) - -128));
		if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
		break;
	}
	case 4: {
		_widec = (short)(4224 + ((*p) - -128));
		if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 256;
		break;
	}
	case 5: {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		break;
	}
	case 6: {
		_widec = (short)(3200 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 512;
		break;
	}
	case 7: {
		_widec = (short)(4736 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
		break;
	}
	case 8: {
		_widec = (short)(5760 + ((*p) - -128));
		if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
		if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
		break;
	}
	case 9: {
		_widec = (short)(12928 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 1024;
		break;
	}
	case 10: {
		_widec = (short)(6784 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 512;
		if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 1024;
		break;
	}
	case 11: {
		_widec = (short)(8832 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 1024;
		if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 2048;
		break;
	}
				}
				break;
			}
		}
	}

	_keys = _zone_scanner_trans_keys + _zone_scanner_key_offsets[cs];
	_trans = _zone_scanner_index_offsets[cs];

	_klen = _zone_scanner_single_lengths[cs];
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( _widec < *_mid )
				_upper = _mid - 1;
			else if ( _widec > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _zone_scanner_range_lengths[cs];
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _mid[0] )
				_upper = _mid - 2;
			else if ( _widec > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}

_match:
	_trans = _zone_scanner_indicies[_trans];
	cs = _zone_scanner_trans_targs[_trans];

	if ( _zone_scanner_trans_actions[_trans] == 0 )
		goto _again;

	_acts = _zone_scanner_actions + _zone_scanner_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 0:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top]; goto _again;}
	}
	break;
	case 1:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	break;
	case 2:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {cs = 269;goto _again;}
		}
		s->multiline = true;
	}
	break;
	case 3:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {cs = 269;goto _again;}
		}
		s->multiline = false;
	}
	break;
	case 4:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	break;
	case 5:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
	break;
	case 6:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	break;
	case 7:
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 8:
#line 80 "scanner_body.rl"
	{
		s->buffer_length = 0;
	}
	break;
	case 9:
#line 83 "scanner_body.rl"
	{
		if ((*p) == '\r') {
			ERR(ZS_DOS_NEWLINE);
		}

		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	break;
	case 10:
#line 92 "scanner_body.rl"
	{
		// Terminate the error context string.
		s->buffer[s->buffer_length++] = 0;

		// Error counter incrementation.
		s->error.counter++;

		// Initialize the fcall stack.
		top = 0;

		// Reset the multiline context.
		s->multiline = false;

		s->state = ZS_STATE_ERROR;

		// Execute the error callback.
		if (s->process.automatic) {
			if (s->process.error != NULL) {
				s->process.error(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; goto _out; }
				}
			}

			// Stop the scanner if fatal error.
			if (s->error.fatal) {
				{p++; goto _out; }
			}
			{cs = 1138;goto _again;}
		} else {
			// Return if external processing.
			p--; cs = 1138; {p++; goto _out; }
		}
	}
	break;
	case 11:
#line 135 "scanner_body.rl"
	{
		s->item_length = 0;
		s->item_length_position = s->dname_tmp_length++;
	}
	break;
	case 12:
#line 139 "scanner_body.rl"
	{
		// Check for maximum dname label length.
		if (s->item_length < MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length++] = (*p);
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 13:
#line 149 "scanner_body.rl"
	{
		// Check for maximum dname length overflow after each label.
		// (at least the next label length must follow).
		if (s->dname_tmp_length < MAX_DNAME_LENGTH) {
			(s->dname)[s->item_length_position] =
				(uint8_t)(s->item_length);
		} else {
			WARN(ZS_DNAME_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 14:
#line 161 "scanner_body.rl"
	{
		if (s->item_length < MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length] = 0;
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 15:
#line 170 "scanner_body.rl"
	{
		(s->dname)[s->dname_tmp_length] *= 10;
		(s->dname)[s->dname_tmp_length] += digit_to_num[(uint8_t)(*p)];
	}
	break;
	case 16:
#line 174 "scanner_body.rl"
	{
		s->dname_tmp_length++;
	}
	break;
	case 17:
#line 177 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 18:
#line 196 "scanner_body.rl"
	{
		// Enough room for the terminal label is guaranteed (_label_exit).
		(s->dname)[s->dname_tmp_length++] = 0;
	}
	break;
	case 19:
#line 200 "scanner_body.rl"
	{
		// Check for (relative + origin) dname length overflow.
		if (s->dname_tmp_length + s->zone_origin_length <= MAX_DNAME_LENGTH) {
			memcpy(s->dname + s->dname_tmp_length,
			       s->zone_origin,
			       s->zone_origin_length);

			s->dname_tmp_length += s->zone_origin_length;
		} else {
			WARN(ZS_DNAME_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 20:
#line 213 "scanner_body.rl"
	{
		// Copy already verified zone origin.
		memcpy(s->dname,
		       s->zone_origin,
		       s->zone_origin_length);

		s->dname_tmp_length = s->zone_origin_length;
	}
	break;
	case 21:
#line 222 "scanner_body.rl"
	{
		s->item_length_position = 0;
		s->dname_tmp_length = 0;
	}
	break;
	case 22:
#line 226 "scanner_body.rl"
	{
		WARN(ZS_BAD_DNAME_CHAR);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 23:
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = cs; cs = 271;goto _again;} }
	break;
	case 24:
#line 242 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			s->item_length_location = rdata_tail++;
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 25:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 26:
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
	break;
	case 27:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
	break;
	case 28:
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 29:
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 30:
#line 288 "scanner_body.rl"
	{
		s->dname = rdata_tail;
	}
	break;
	case 31:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
	break;
	case 32:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 33:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
	break;
	case 34:
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 35:
#line 327 "scanner_body.rl"
	{
		s->decimal_counter = 0;
	}
	break;
	case 36:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
	break;
	case 37:
#line 333 "scanner_body.rl"
	{
		s->decimal_counter++;
	}
	break;
	case 38:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 39:
#line 354 "scanner_body.rl"
	{
		s->decimals = 2;
	}
	break;
	case 40:
#line 357 "scanner_body.rl"
	{
		s->decimals = 3;
	}
	break;
	case 41:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 42:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 43:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 44:
#line 396 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_type = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 45:
#line 405 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_data_length = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 46:
#line 422 "scanner_body.rl"
	{
		WARN(ZS_BAD_TIME_UNIT);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 47:
#line 429 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 60)) {
	                  s->number64 *= 60;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {cs = 269;goto _again;}
	              }
	            }
	break;
	case 48:
#line 436 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 3600)) {
	                  s->number64 *= 3600;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {cs = 269;goto _again;}
	              }
	            }
	break;
	case 49:
#line 443 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 86400)) {
	                  s->number64 *= 86400;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {cs = 269;goto _again;}
	              }
	            }
	break;
	case 50:
#line 450 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 604800)) {
	                  s->number64 *= 604800;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {cs = 269;goto _again;}
	              }
	            }
	break;
	case 51:
#line 460 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
	break;
	case 52:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 53:
#line 481 "scanner_body.rl"
	{
		s->buffer_length = 0;
	}
	break;
	case 54:
#line 484 "scanner_body.rl"
	{
		if (s->buffer_length < MAX_RDATA_LENGTH) {
			s->buffer[s->buffer_length++] = (*p);
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 55:
#line 492 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (s->buffer_length == 14) { // Date; 14 = len("YYYYMMDDHHmmSS").
			ret = date_to_timestamp(s->buffer, &timestamp);

			if (ret == ZS_OK) {
				*((uint32_t *)rdata_tail) = htonl(timestamp);
				rdata_tail += 4;
			} else {
				WARN(ret);
				p--; {cs = 269;goto _again;}
			}
		} else if (s->buffer_length <= 10) { // Timestamp format.
			char *end;

			s->number64 = strtoull((char *)(s->buffer), &end,  10);

			if (end == (char *)(s->buffer) || *end != '\0') {
				WARN(ZS_BAD_TIMESTAMP);
				p--; {cs = 269;goto _again;}
			}

			if (s->number64 <= UINT32_MAX) {
				*((uint32_t *)rdata_tail) = htonl((uint32_t)s->number64);
				rdata_tail += 4;
			} else {
				WARN(ZS_NUMBER32_OVERFLOW);
				p--; {cs = 269;goto _again;}
			}
		} else {
			WARN(ZS_BAD_TIMESTAMP_LENGTH);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 56:
#line 527 "scanner_body.rl"
	{
		WARN(ZS_BAD_TIMESTAMP_CHAR);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 57:
#line 537 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			// Split long string.
			if (s->long_string &&
			    rdata_tail - s->item_length_location == 1 + MAX_ITEM_LENGTH) {
				// _item_length_exit equivalent.
				*(s->item_length_location) = MAX_ITEM_LENGTH;
				// _item_length_init equivalent.
				s->item_length_location = rdata_tail++;

				if (rdata_tail > rdata_stop) {
					WARN(ZS_TEXT_OVERFLOW);
					p--; {cs = 269;goto _again;}
				}
			}

			*(rdata_tail++) = (*p);
		} else {
			WARN(ZS_TEXT_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 58:
#line 559 "scanner_body.rl"
	{
		WARN(ZS_BAD_TEXT_CHAR);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 59:
#line 563 "scanner_body.rl"
	{
		WARN(ZS_BAD_TEXT);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 60:
#line 568 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			// Split long string.
			if (s->long_string &&
			    rdata_tail - s->item_length_location == 1 + MAX_ITEM_LENGTH) {
				// _item_length_exit equivalent.
				*(s->item_length_location) = MAX_ITEM_LENGTH;
				// _item_length_init equivalent.
				s->item_length_location = rdata_tail++;

				if (rdata_tail > rdata_stop) {
					WARN(ZS_TEXT_OVERFLOW);
					p--; {cs = 269;goto _again;}
				}
			}

			*rdata_tail = 0;
			s->item_length++;
		} else {
			WARN(ZS_TEXT_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 61:
#line 591 "scanner_body.rl"
	{
		if ((*rdata_tail < (UINT8_MAX / 10)) ||   // Dominant fast check.
			((*rdata_tail == (UINT8_MAX / 10)) && // Marginal case.
			 ((*p) <= (UINT8_MAX % 10) + '0')
			)
		   ) {
			*rdata_tail *= 10;
			*rdata_tail += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 62:
#line 604 "scanner_body.rl"
	{
		rdata_tail++;
	}
	break;
	case 63:
#line 607 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 64:
#line 629 "scanner_body.rl"
	{ p--; {stack[top++] = cs; cs = 280;goto _again;} }
	break;
	case 65:
#line 634 "scanner_body.rl"
	{
		s->long_string = true;
	}
	break;
	case 66:
#line 637 "scanner_body.rl"
	{
		s->long_string = false;
	}
	break;
	case 67:
#line 648 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->default_ttl = (uint32_t)(s->number64);
		} else {
			ERR(ZS_NUMBER32_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 68:
#line 656 "scanner_body.rl"
	{
		ERR(ZS_BAD_TTL);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 69:
#line 663 "scanner_body.rl"
	{ p--; {stack[top++] = cs; cs = 292;goto _again;} }
	break;
	case 70:
#line 667 "scanner_body.rl"
	{
		s->dname = s->zone_origin;
	}
	break;
	case 71:
#line 670 "scanner_body.rl"
	{
		s->zone_origin_length = s->dname_tmp_length;
	}
	break;
	case 72:
#line 673 "scanner_body.rl"
	{
		ERR(ZS_BAD_ORIGIN);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 73:
#line 680 "scanner_body.rl"
	{ p--; {stack[top++] = cs; cs = 301;goto _again;} }
	break;
	case 74:
#line 684 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	break;
	case 75:
#line 687 "scanner_body.rl"
	{
		size_t len = rdata_tail - s->r_data;
		if (len >= sizeof(s->include_filename)) {
			ERR(ZS_BAD_INCLUDE_FILENAME);
			p--; {cs = 269;goto _again;}
		}

		// Store zero terminated include filename.
		memcpy(s->include_filename, s->r_data, len);
		s->include_filename[len] = '\0';

		// For detection whether origin is not present.
		s->dname = NULL;
	}
	break;
	case 76:
#line 701 "scanner_body.rl"
	{
		ERR(ZS_BAD_INCLUDE_FILENAME);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 77:
#line 706 "scanner_body.rl"
	{
		s->dname = s->r_data;
	}
	break;
	case 78:
#line 709 "scanner_body.rl"
	{
		s->r_data_length = s->dname_tmp_length;
	}
	break;
	case 79:
#line 712 "scanner_body.rl"
	{
		ERR(ZS_BAD_INCLUDE_ORIGIN);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 80:
#line 717 "scanner_body.rl"
	{
		// Extend relative file path.
		if (s->include_filename[0] != '/') {
			ret = snprintf((char *)(s->buffer), sizeof(s->buffer),
			               "%s/%s", s->path, s->include_filename);
			if (ret <= 0 || ret > sizeof(s->buffer)) {
				ERR(ZS_BAD_INCLUDE_FILENAME);
				p--; {cs = 269;goto _again;}
			}
			memcpy(s->include_filename, s->buffer, ret);
		}

		// Origin conversion from wire to text form in \DDD notation.
		if (s->dname == NULL) { // Use current origin.
			wire_dname_to_str(s->zone_origin,
			                  s->zone_origin_length,
			                  (char *)s->buffer);
		} else { // Use specified origin.
			wire_dname_to_str(s->r_data,
			                  s->r_data_length,
			                  (char *)s->buffer);
		}

		// Let the caller to solve the include.
		if (s->process.automatic) {
			// Create new scanner for included zone file.
			zs_scanner_t *ss = malloc(sizeof(zs_scanner_t));
			if (ss == NULL) {
				ERR(ZS_UNPROCESSED_INCLUDE);
				p--; {cs = 269;goto _again;}
			}

			// Parse included zone file.
			if (zs_init(ss, (char *)s->buffer, s->default_class,
			            s->default_ttl) != 0 ||
			    zs_set_input_file(ss, (char *)(s->include_filename)) != 0 ||
			    zs_set_processing(ss, s->process.record, s->process.error,
			                      s->process.data) != 0 ||
			    zs_parse_all(ss) != 0) {
				// File internal errors are handled by error callback.
				if (ss->error.counter > 0) {
					s->error.counter += ss->error.counter;
					ERR(ZS_UNPROCESSED_INCLUDE);
				// General include file error.
				} else {
					ERR(ss->error.code);
				}
				zs_deinit(ss);
				free(ss);
				p--; {cs = 269;goto _again;}
			}
			zs_deinit(ss);
			free(ss);
		} else {
			s->state = ZS_STATE_INCLUDE;
			p--; cs = 1138; {p++; goto _out; }
		}
	}
	break;
	case 81:
#line 783 "scanner_body.rl"
	{ p--; {stack[top++] = cs; cs = 313;goto _again;} }
	break;
	case 82:
#line 789 "scanner_body.rl"
	{
		ERR(ZS_OK);
	}
	break;
	case 83:
#line 793 "scanner_body.rl"
	{
		NOERR;
	}
	break;
	case 84:
#line 796 "scanner_body.rl"
	{
		ERR(ZS_BAD_DIRECTIVE);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 85:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
	break;
	case 86:
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	break;
	case 87:
#line 816 "scanner_body.rl"
	{
		s->r_class = KNOT_CLASS_IN;
	}
	break;
	case 88:
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 89:
#line 835 "scanner_body.rl"
	{
		s->buffer_length = 0;
	}
	break;
	case 90:
#line 838 "scanner_body.rl"
	{
		if (s->buffer_length < MAX_RDATA_LENGTH) {
			s->buffer[s->buffer_length++] = (*p);
		}
		else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 91:
#line 847 "scanner_body.rl"
	{
		WARN(ZS_BAD_ADDRESS_CHAR);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 92:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 93:
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
	break;
	case 94:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 95:
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
	break;
	case 96:
#line 890 "scanner_body.rl"
	{
		memset(&(s->apl), 0, sizeof(s->apl));
	}
	break;
	case 97:
#line 893 "scanner_body.rl"
	{
		s->apl.excl_flag = 128; // dec 128  = bin 10000000.
	}
	break;
	case 98:
#line 896 "scanner_body.rl"
	{
		s->apl.addr_family = 1;
	}
	break;
	case 99:
#line 899 "scanner_body.rl"
	{
		s->apl.addr_family = 2;
	}
	break;
	case 100:
#line 902 "scanner_body.rl"
	{
		if ((s->apl.addr_family == 1 && s->number64 <= 32) ||
		    (s->apl.addr_family == 2 && s->number64 <= 128)) {
			s->apl.prefix_length = (uint8_t)(s->number64);
		} else {
			WARN(ZS_BAD_APL);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 101:
#line 911 "scanner_body.rl"
	{
		// Write address family.
		*((uint16_t *)rdata_tail) = htons(s->apl.addr_family);
		rdata_tail += 2;
		// Write prefix length in bites.
		*(rdata_tail) = s->apl.prefix_length;
		rdata_tail += 1;
		// Copy address to buffer.
		uint8_t len;
		switch (s->apl.addr_family) {
		case 1:
			len = INET4_ADDR_LENGTH;
			memcpy(s->buffer, &(addr4.s_addr), len);
			break;
		case 2:
			len = INET6_ADDR_LENGTH;
			memcpy(s->buffer, &(addr6.s6_addr), len);
			break;
		default:
			WARN(ZS_BAD_APL);
			p--; {cs = 269;goto _again;}
		}
		// Find prefix without trailing zeroes.
		while (len > 0) {
			if ((s->buffer[len - 1] & 255) != 0) {
				break;
			}
			len--;
		}
		// Write negation flag + prefix length in bytes.
		*(rdata_tail) = len + s->apl.excl_flag;
		rdata_tail += 1;
		// Write address prefix non-null data.
		memcpy(rdata_tail, s->buffer, len);
		rdata_tail += len;
	}
	break;
	case 102:
#line 947 "scanner_body.rl"
	{
		WARN(ZS_BAD_APL);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 103:
#line 965 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 104:
#line 973 "scanner_body.rl"
	{
		*rdata_tail += second_hex_to_num[(uint8_t)(*p)];
		rdata_tail++;
	}
	break;
	case 105:
#line 977 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_CHAR);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 106:
#line 991 "scanner_body.rl"
	{
		if ((rdata_tail - s->r_data) != s->r_data_length) {
			WARN(ZS_BAD_RDATA_LENGTH);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 107:
#line 998 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 108:
#line 1008 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_base64_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 109:
#line 1016 "scanner_body.rl"
	{
		*(rdata_tail++) += second_left_base64_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = second_right_base64_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 110:
#line 1026 "scanner_body.rl"
	{
		*(rdata_tail++) += third_left_base64_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = third_right_base64_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 111:
#line 1036 "scanner_body.rl"
	{
		*(rdata_tail++) += fourth_base64_to_num[(uint8_t)(*p)];
	}
	break;
	case 112:
#line 1040 "scanner_body.rl"
	{
		WARN(ZS_BAD_BASE64_CHAR);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 113:
#line 1062 "scanner_body.rl"
	{ p--; {stack[top++] = cs; cs = 330;goto _again;} }
	break;
	case 114:
#line 1066 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 115:
#line 1074 "scanner_body.rl"
	{
		*(rdata_tail++) += second_left_base32hex_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = second_right_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 116:
#line 1084 "scanner_body.rl"
	{
		*rdata_tail += third_base32hex_to_num[(uint8_t)(*p)];
	}
	break;
	case 117:
#line 1087 "scanner_body.rl"
	{
		*(rdata_tail++) += fourth_left_base32hex_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = fourth_right_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 118:
#line 1097 "scanner_body.rl"
	{
		*(rdata_tail++) += fifth_left_base32hex_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = fifth_right_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 119:
#line 1107 "scanner_body.rl"
	{
		*rdata_tail += sixth_base32hex_to_num[(uint8_t)(*p)];
	}
	break;
	case 120:
#line 1110 "scanner_body.rl"
	{
		*(rdata_tail++) += seventh_left_base32hex_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = seventh_right_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 121:
#line 1120 "scanner_body.rl"
	{
		*(rdata_tail++) += eighth_base32hex_to_num[(uint8_t)(*p)];
	}
	break;
	case 122:
#line 1124 "scanner_body.rl"
	{
		WARN(ZS_BAD_BASE32HEX_CHAR);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 123:
#line 1159 "scanner_body.rl"
	{
		*(rdata_tail++) = 0;
	}
	break;
	case 124:
#line 1162 "scanner_body.rl"
	{
		*(rdata_tail++) = 1;
	}
	break;
	case 125:
#line 1165 "scanner_body.rl"
	{
		*(rdata_tail++) = 2;
	}
	break;
	case 126:
#line 1168 "scanner_body.rl"
	{
		*(rdata_tail++) = 3;
	}
	break;
	case 127:
#line 1171 "scanner_body.rl"
	{
		*(rdata_tail++) = 5;
	}
	break;
	case 128:
#line 1174 "scanner_body.rl"
	{
		*(rdata_tail++) = 6;
	}
	break;
	case 129:
#line 1177 "scanner_body.rl"
	{
		*(rdata_tail++) = 7;
	}
	break;
	case 130:
#line 1180 "scanner_body.rl"
	{
		*(rdata_tail++) = 8;
	}
	break;
	case 131:
#line 1183 "scanner_body.rl"
	{
		*(rdata_tail++) = 10;
	}
	break;
	case 132:
#line 1186 "scanner_body.rl"
	{
		*(rdata_tail++) = 12;
	}
	break;
	case 133:
#line 1189 "scanner_body.rl"
	{
		*(rdata_tail++) = 13;
	}
	break;
	case 134:
#line 1192 "scanner_body.rl"
	{
		*(rdata_tail++) = 14;
	}
	break;
	case 135:
#line 1195 "scanner_body.rl"
	{
		*(rdata_tail++) = 15;
	}
	break;
	case 136:
#line 1198 "scanner_body.rl"
	{
		*(rdata_tail++) = 16;
	}
	break;
	case 137:
#line 1201 "scanner_body.rl"
	{
		*(rdata_tail++) = 252;
	}
	break;
	case 138:
#line 1204 "scanner_body.rl"
	{
		*(rdata_tail++) = 253;
	}
	break;
	case 139:
#line 1207 "scanner_body.rl"
	{
		*(rdata_tail++) = 254;
	}
	break;
	case 140:
#line 1211 "scanner_body.rl"
	{
		*((uint16_t *)rdata_tail) = htons(1);
		rdata_tail += 2;
	}
	break;
	case 141:
#line 1215 "scanner_body.rl"
	{
		*((uint16_t *)rdata_tail) = htons(2);
		rdata_tail += 2;
	}
	break;
	case 142:
#line 1219 "scanner_body.rl"
	{
		*((uint16_t *)rdata_tail) = htons(3);
		rdata_tail += 2;
	}
	break;
	case 143:
#line 1223 "scanner_body.rl"
	{
		*((uint16_t *)rdata_tail) = htons(4);
		rdata_tail += 2;
	}
	break;
	case 144:
#line 1227 "scanner_body.rl"
	{
		*((uint16_t *)rdata_tail) = htons(5);
		rdata_tail += 2;
	}
	break;
	case 145:
#line 1231 "scanner_body.rl"
	{
		*((uint16_t *)rdata_tail) = htons(6);
		rdata_tail += 2;
	}
	break;
	case 146:
#line 1235 "scanner_body.rl"
	{
		*((uint16_t *)rdata_tail) = htons(7);
		rdata_tail += 2;
	}
	break;
	case 147:
#line 1239 "scanner_body.rl"
	{
		*((uint16_t *)rdata_tail) = htons(8);
		rdata_tail += 2;
	}
	break;
	case 148:
#line 1243 "scanner_body.rl"
	{
		*((uint16_t *)rdata_tail) = htons(253);
		rdata_tail += 2;
	}
	break;
	case 149:
#line 1247 "scanner_body.rl"
	{
		*((uint16_t *)rdata_tail) = htons(254);
		rdata_tail += 2;
	}
	break;
	case 150:
#line 1254 "scanner_body.rl"
	{
		WARN(ZS_BAD_GATEWAY);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 151:
#line 1258 "scanner_body.rl"
	{
		WARN(ZS_BAD_GATEWAY_KEY);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 152:
#line 1276 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 153:
#line 1282 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_A, &rdata_tail); }
	break;
	case 154:
#line 1283 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NS, &rdata_tail); }
	break;
	case 155:
#line 1284 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CNAME, &rdata_tail); }
	break;
	case 156:
#line 1285 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SOA, &rdata_tail); }
	break;
	case 157:
#line 1286 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_PTR, &rdata_tail); }
	break;
	case 158:
#line 1287 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_HINFO, &rdata_tail); }
	break;
	case 159:
#line 1288 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_MINFO, &rdata_tail); }
	break;
	case 160:
#line 1289 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_MX, &rdata_tail); }
	break;
	case 161:
#line 1290 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_TXT, &rdata_tail); }
	break;
	case 162:
#line 1291 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_RP, &rdata_tail); }
	break;
	case 163:
#line 1292 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_AFSDB, &rdata_tail); }
	break;
	case 164:
#line 1293 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_RT, &rdata_tail); }
	break;
	case 165:
#line 1294 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_KEY, &rdata_tail); }
	break;
	case 166:
#line 1295 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_AAAA, &rdata_tail); }
	break;
	case 167:
#line 1296 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_LOC, &rdata_tail); }
	break;
	case 168:
#line 1297 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SRV, &rdata_tail); }
	break;
	case 169:
#line 1298 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NAPTR, &rdata_tail); }
	break;
	case 170:
#line 1299 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_KX, &rdata_tail); }
	break;
	case 171:
#line 1300 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CERT, &rdata_tail); }
	break;
	case 172:
#line 1301 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DNAME, &rdata_tail); }
	break;
	case 173:
#line 1302 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_APL, &rdata_tail); }
	break;
	case 174:
#line 1303 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DS, &rdata_tail); }
	break;
	case 175:
#line 1304 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SSHFP, &rdata_tail); }
	break;
	case 176:
#line 1305 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_IPSECKEY, &rdata_tail); }
	break;
	case 177:
#line 1306 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_RRSIG, &rdata_tail); }
	break;
	case 178:
#line 1307 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NSEC, &rdata_tail); }
	break;
	case 179:
#line 1308 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DNSKEY, &rdata_tail); }
	break;
	case 180:
#line 1309 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DHCID, &rdata_tail); }
	break;
	case 181:
#line 1310 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NSEC3, &rdata_tail); }
	break;
	case 182:
#line 1311 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NSEC3PARAM, &rdata_tail); }
	break;
	case 183:
#line 1312 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_TLSA, &rdata_tail); }
	break;
	case 184:
#line 1313 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CDS, &rdata_tail); }
	break;
	case 185:
#line 1314 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CDNSKEY, &rdata_tail); }
	break;
	case 186:
#line 1315 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SPF, &rdata_tail); }
	break;
	case 187:
#line 1316 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NID, &rdata_tail); }
	break;
	case 188:
#line 1317 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_L32, &rdata_tail); }
	break;
	case 189:
#line 1318 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_L64, &rdata_tail); }
	break;
	case 190:
#line 1319 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_LP, &rdata_tail); }
	break;
	case 191:
#line 1320 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_EUI48, &rdata_tail); }
	break;
	case 192:
#line 1321 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_EUI64, &rdata_tail); }
	break;
	case 193:
#line 1322 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_URI, &rdata_tail); }
	break;
	case 194:
#line 1323 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CAA, &rdata_tail); }
	break;
	case 195:
#line 1324 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_LB, &rdata_tail); }
	break;
	case 196:
#line 1330 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			window_add_bit(s->number64, s);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 197:
#line 1343 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_A, s); }
	break;
	case 198:
#line 1344 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NS, s); }
	break;
	case 199:
#line 1345 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CNAME, s); }
	break;
	case 200:
#line 1346 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SOA, s); }
	break;
	case 201:
#line 1347 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_PTR, s); }
	break;
	case 202:
#line 1348 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_HINFO, s); }
	break;
	case 203:
#line 1349 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_MINFO, s); }
	break;
	case 204:
#line 1350 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_MX, s); }
	break;
	case 205:
#line 1351 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_TXT, s); }
	break;
	case 206:
#line 1352 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RP, s); }
	break;
	case 207:
#line 1353 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_AFSDB, s); }
	break;
	case 208:
#line 1354 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RT, s); }
	break;
	case 209:
#line 1355 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_KEY, s); }
	break;
	case 210:
#line 1356 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_AAAA, s); }
	break;
	case 211:
#line 1357 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LOC, s); }
	break;
	case 212:
#line 1358 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SRV, s); }
	break;
	case 213:
#line 1359 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NAPTR, s); }
	break;
	case 214:
#line 1360 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_KX, s); }
	break;
	case 215:
#line 1361 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CERT, s); }
	break;
	case 216:
#line 1362 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DNAME, s); }
	break;
	case 217:
#line 1363 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_APL, s); }
	break;
	case 218:
#line 1364 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DS, s); }
	break;
	case 219:
#line 1365 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SSHFP, s); }
	break;
	case 220:
#line 1366 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_IPSECKEY, s); }
	break;
	case 221:
#line 1367 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RRSIG, s); }
	break;
	case 222:
#line 1368 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC, s); }
	break;
	case 223:
#line 1369 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DNSKEY, s); }
	break;
	case 224:
#line 1370 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DHCID, s); }
	break;
	case 225:
#line 1371 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC3, s); }
	break;
	case 226:
#line 1372 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC3PARAM, s); }
	break;
	case 227:
#line 1373 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_TLSA, s); }
	break;
	case 228:
#line 1374 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CDS, s); }
	break;
	case 229:
#line 1375 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CDNSKEY, s); }
	break;
	case 230:
#line 1376 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SPF, s); }
	break;
	case 231:
#line 1377 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NID, s); }
	break;
	case 232:
#line 1378 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_L32, s); }
	break;
	case 233:
#line 1379 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_L64, s); }
	break;
	case 234:
#line 1380 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LP, s); }
	break;
	case 235:
#line 1381 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_EUI48, s); }
	break;
	case 236:
#line 1382 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_EUI64, s); }
	break;
	case 237:
#line 1383 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_URI, s); }
	break;
	case 238:
#line 1384 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CAA, s); }
	break;
	case 239:
#line 1385 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LB, s); }
	break;
	case 240:
#line 1389 "scanner_body.rl"
	{
		memset(s->windows, 0, sizeof(s->windows));
		s->last_window = -1;
	}
	break;
	case 241:
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {cs = 269;goto _again;}
				}
			}
		}
	}
	break;
	case 242:
#line 1416 "scanner_body.rl"
	{
		WARN(ZS_BAD_BITMAP);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 243:
#line 1424 "scanner_body.rl"
	{ p--; {stack[top++] = cs; cs = 337;goto _again;} }
	break;
	case 244:
#line 1428 "scanner_body.rl"
	{
		if (s->number64 <= 90) {
			s->loc.d1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 245:
#line 1436 "scanner_body.rl"
	{
		if (s->number64 <= 180) {
			s->loc.d2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 246:
#line 1444 "scanner_body.rl"
	{
		if (s->number64 <= 59) {
			s->loc.m1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 247:
#line 1452 "scanner_body.rl"
	{
		if (s->number64 <= 59) {
			s->loc.m2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 248:
#line 1460 "scanner_body.rl"
	{
		if (s->number64 <= 59999) {
			s->loc.s1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 249:
#line 1468 "scanner_body.rl"
	{
		if (s->number64 <= 59999) {
			s->loc.s2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 250:
#line 1476 "scanner_body.rl"
	{
		if ((s->loc.alt_sign ==  1 && s->number64 <= 4284967295) ||
		    (s->loc.alt_sign == -1 && s->number64 <=   10000000))
		{
			s->loc.alt = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 251:
#line 1486 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.siz = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 252:
#line 1494 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.hp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 253:
#line 1502 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.vp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 254:
#line 1510 "scanner_body.rl"
	{
		s->loc.lat_sign = -1;
	}
	break;
	case 255:
#line 1513 "scanner_body.rl"
	{
		s->loc.long_sign = -1;
	}
	break;
	case 256:
#line 1516 "scanner_body.rl"
	{
		s->loc.alt_sign = -1;
	}
	break;
	case 257:
#line 1533 "scanner_body.rl"
	{
		memset(&(s->loc), 0, sizeof(s->loc));
		// Defaults.
		s->loc.siz = 100;
		s->loc.vp  = 1000;
		s->loc.hp  = 1000000;
		s->loc.lat_sign  = 1;
		s->loc.long_sign = 1;
		s->loc.alt_sign  = 1;
	}
	break;
	case 258:
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
	break;
	case 259:
#line 1569 "scanner_body.rl"
	{
		WARN(ZS_BAD_LOC_DATA);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 260:
#line 1582 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 261:
#line 1600 "scanner_body.rl"
	{
		s->item_length = 0;
	}
	break;
	case 262:
#line 1603 "scanner_body.rl"
	{
		s->item_length++;
	}
	break;
	case 263:
#line 1606 "scanner_body.rl"
	{
		if (s->item_length != 6) {
			WARN(ZS_BAD_EUI_LENGTH);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 264:
#line 1612 "scanner_body.rl"
	{
		if (s->item_length != 8) {
			WARN(ZS_BAD_EUI_LENGTH);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 265:
#line 1618 "scanner_body.rl"
	{
		WARN(ZS_BAD_CHAR_DASH);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 266:
#line 1633 "scanner_body.rl"
	{
		s->item_length = 0;
	}
	break;
	case 267:
#line 1636 "scanner_body.rl"
	{
		s->item_length++;
	}
	break;
	case 268:
#line 1639 "scanner_body.rl"
	{
		if (s->item_length != 4) {
			WARN(ZS_BAD_L64_LENGTH);
			p--; {cs = 269;goto _again;}
		}
	}
	break;
	case 269:
#line 1645 "scanner_body.rl"
	{
		WARN(ZS_BAD_CHAR_COLON);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 270:
#line 1658 "scanner_body.rl"
	{
		WARN(ZS_BAD_ALGORITHM);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 271:
#line 1662 "scanner_body.rl"
	{
		WARN(ZS_BAD_CERT_TYPE);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 272:
#line 1686 "scanner_body.rl"
	{ p--; {stack[top++] = cs; cs = 489;goto _again;} }
	break;
	case 273:
#line 1701 "scanner_body.rl"
	{ p--; {stack[top++] = cs; cs = 593;goto _again;} }
	break;
	case 274:
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	break;
	case 275:
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 276:
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = cs; cs = 634;goto _again;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = cs; cs = 636;goto _again;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = cs; cs = 638;goto _again;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = cs; cs = 670;goto _again;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = cs; cs = 675;goto _again;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = cs; cs = 680;goto _again;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = cs; cs = 685;goto _again;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = cs; cs = 689;goto _again;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = cs; cs = 691;goto _again;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = cs; cs = 746;goto _again;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = cs; cs = 757;goto _again;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = cs; cs = 774;goto _again;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = cs; cs = 785;goto _again;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = cs; cs = 796;goto _again;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = cs; cs = 809;goto _again;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = cs; cs = 819;goto _again;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = cs; cs = 858;goto _again;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = cs; cs = 1013;goto _again;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = cs; cs = 1016;goto _again;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = cs; cs = 1027;goto _again;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = cs; cs = 1029;goto _again;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = cs; cs = 1058;goto _again;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = cs; cs = 1071;goto _again;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = cs; cs = 1089;goto _again;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = cs; cs = 1084;goto _again;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = cs; cs = 1102;goto _again;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = cs; cs = 1108;goto _again;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = cs; cs = 1114;goto _again;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = cs; cs = 1122;goto _again;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = cs; cs = 1130;goto _again;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{cs = 269;goto _again;}
		}
	}
	break;
	case 277:
#line 1919 "scanner_body.rl"
	{
		switch (s->r_type) {
		// Next types must not have empty rdata.
		case KNOT_RRTYPE_A:
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
		case KNOT_RRTYPE_SOA:
		case KNOT_RRTYPE_HINFO:
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
		case KNOT_RRTYPE_RP:
		case KNOT_RRTYPE_AAAA:
		case KNOT_RRTYPE_LOC:
		case KNOT_RRTYPE_SRV:
		case KNOT_RRTYPE_NAPTR:
		case KNOT_RRTYPE_CERT:
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_SSHFP:
		case KNOT_RRTYPE_IPSECKEY:
		case KNOT_RRTYPE_RRSIG:
		case KNOT_RRTYPE_NSEC:
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_DHCID:
		case KNOT_RRTYPE_NSEC3:
		case KNOT_RRTYPE_NSEC3PARAM:
		case KNOT_RRTYPE_TLSA:
		case KNOT_RRTYPE_CDS:
		case KNOT_RRTYPE_CDNSKEY:
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L32:
		case KNOT_RRTYPE_L64:
		case KNOT_RRTYPE_LP:
		case KNOT_RRTYPE_EUI48:
		case KNOT_RRTYPE_EUI64:
		case KNOT_RRTYPE_URI:
		case KNOT_RRTYPE_CAA:
		case KNOT_RRTYPE_LB:
			{stack[top++] = cs; cs = 470;goto _again;}
		// Next types can have empty rdata.
		case KNOT_RRTYPE_APL:
		default:
			{stack[top++] = cs; cs = 479;goto _again;}
		}
	}
	break;
	case 278:
#line 1973 "scanner_body.rl"
	{
		if (pe - p == 1) {
			*wrap = WRAP_DETECTED;
		}
	}
	break;
	case 279:
#line 1978 "scanner_body.rl"
	{
		if (*wrap == WRAP_NONE) {
			p--;
		}
	}
	break;
	case 280:
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {cs = 269;goto _again;}
	}
	break;
	case 281:
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
	break;
	case 282:
#line 2001 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NS; }
	break;
	case 283:
#line 2002 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CNAME; }
	break;
	case 284:
#line 2003 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SOA; }
	break;
	case 285:
#line 2004 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_PTR; }
	break;
	case 286:
#line 2005 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_HINFO; }
	break;
	case 287:
#line 2006 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_MINFO; }
	break;
	case 288:
#line 2007 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_MX; }
	break;
	case 289:
#line 2008 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_TXT; }
	break;
	case 290:
#line 2009 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RP; }
	break;
	case 291:
#line 2010 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_AFSDB; }
	break;
	case 292:
#line 2011 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RT; }
	break;
	case 293:
#line 2012 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_KEY; }
	break;
	case 294:
#line 2013 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_AAAA; }
	break;
	case 295:
#line 2014 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LOC; }
	break;
	case 296:
#line 2015 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SRV; }
	break;
	case 297:
#line 2016 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NAPTR; }
	break;
	case 298:
#line 2017 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_KX; }
	break;
	case 299:
#line 2018 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CERT; }
	break;
	case 300:
#line 2019 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DNAME; }
	break;
	case 301:
#line 2020 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_APL; }
	break;
	case 302:
#line 2021 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DS; }
	break;
	case 303:
#line 2022 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SSHFP; }
	break;
	case 304:
#line 2023 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_IPSECKEY; }
	break;
	case 305:
#line 2024 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RRSIG; }
	break;
	case 306:
#line 2025 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC; }
	break;
	case 307:
#line 2026 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DNSKEY; }
	break;
	case 308:
#line 2027 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DHCID; }
	break;
	case 309:
#line 2028 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC3; }
	break;
	case 310:
#line 2029 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC3PARAM; }
	break;
	case 311:
#line 2030 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_TLSA; }
	break;
	case 312:
#line 2031 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CDS; }
	break;
	case 313:
#line 2032 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CDNSKEY; }
	break;
	case 314:
#line 2033 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SPF; }
	break;
	case 315:
#line 2034 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NID; }
	break;
	case 316:
#line 2035 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_L32; }
	break;
	case 317:
#line 2036 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_L64; }
	break;
	case 318:
#line 2037 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LP; }
	break;
	case 319:
#line 2038 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_EUI48; }
	break;
	case 320:
#line 2039 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_EUI64; }
	break;
	case 321:
#line 2040 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_URI; }
	break;
	case 322:
#line 2041 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CAA; }
	break;
	case 323:
#line 2042 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LB; }
	break;
	case 324:
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {cs = 269;goto _again;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; goto _out; }
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; goto _out; }
		}
	}
	break;
#line 8345 "scanner.c"
		}
	}

_again:
	if ( cs == 0 )
		goto _out;
	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == eof )
	{
	const short *__acts = _zone_scanner_actions + _zone_scanner_eof_actions[cs];
	unsigned int __nacts = (unsigned int) *__acts++;
	while ( __nacts-- > 0 ) {
		switch ( *__acts++ ) {
	case 7:
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 17:
#line 177 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 22:
#line 226 "scanner_body.rl"
	{
		WARN(ZS_BAD_DNAME_CHAR);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 29:
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 34:
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 46:
#line 422 "scanner_body.rl"
	{
		WARN(ZS_BAD_TIME_UNIT);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 56:
#line 527 "scanner_body.rl"
	{
		WARN(ZS_BAD_TIMESTAMP_CHAR);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 58:
#line 559 "scanner_body.rl"
	{
		WARN(ZS_BAD_TEXT_CHAR);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 59:
#line 563 "scanner_body.rl"
	{
		WARN(ZS_BAD_TEXT);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 63:
#line 607 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 66:
#line 637 "scanner_body.rl"
	{
		s->long_string = false;
	}
	break;
	case 68:
#line 656 "scanner_body.rl"
	{
		ERR(ZS_BAD_TTL);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 72:
#line 673 "scanner_body.rl"
	{
		ERR(ZS_BAD_ORIGIN);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 76:
#line 701 "scanner_body.rl"
	{
		ERR(ZS_BAD_INCLUDE_FILENAME);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 79:
#line 712 "scanner_body.rl"
	{
		ERR(ZS_BAD_INCLUDE_ORIGIN);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 83:
#line 793 "scanner_body.rl"
	{
		NOERR;
	}
	break;
	case 84:
#line 796 "scanner_body.rl"
	{
		ERR(ZS_BAD_DIRECTIVE);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 91:
#line 847 "scanner_body.rl"
	{
		WARN(ZS_BAD_ADDRESS_CHAR);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 102:
#line 947 "scanner_body.rl"
	{
		WARN(ZS_BAD_APL);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 105:
#line 977 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_CHAR);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 107:
#line 998 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 112:
#line 1040 "scanner_body.rl"
	{
		WARN(ZS_BAD_BASE64_CHAR);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 122:
#line 1124 "scanner_body.rl"
	{
		WARN(ZS_BAD_BASE32HEX_CHAR);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 150:
#line 1254 "scanner_body.rl"
	{
		WARN(ZS_BAD_GATEWAY);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 151:
#line 1258 "scanner_body.rl"
	{
		WARN(ZS_BAD_GATEWAY_KEY);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 152:
#line 1276 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 242:
#line 1416 "scanner_body.rl"
	{
		WARN(ZS_BAD_BITMAP);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 259:
#line 1569 "scanner_body.rl"
	{
		WARN(ZS_BAD_LOC_DATA);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 260:
#line 1582 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 265:
#line 1618 "scanner_body.rl"
	{
		WARN(ZS_BAD_CHAR_DASH);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 269:
#line 1645 "scanner_body.rl"
	{
		WARN(ZS_BAD_CHAR_COLON);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 270:
#line 1658 "scanner_body.rl"
	{
		WARN(ZS_BAD_ALGORITHM);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 271:
#line 1662 "scanner_body.rl"
	{
		WARN(ZS_BAD_CERT_TYPE);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 275:
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
	case 280:
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {cs = 269;	if ( p == pe )
		goto _test_eof;
goto _again;}
	}
	break;
#line 8671 "scanner.c"
		}
	}
	}

	_out: {}
	}

#line 361 "scanner.rl"

	// Check if the scanner state machine is in an uncovered state.
	bool extra_error = false;
	if (cs == 0) {
		ERR(ZS_UNCOVERED_STATE);
		extra_error = true;
	// Check for an unclosed multiline record.
	} else if (s->input.eof && s->multiline) {
		ERR(ZS_UNCLOSED_MULTILINE);
		extra_error = true;
	}

	// Treat the extra error.
	if (extra_error) {
		s->error.counter++;
		s->state = ZS_STATE_ERROR;

		// Copy the error context just for the part of the current line.
		s->buffer_length = 0;
		while (p < pe && *p != '\n' && s->buffer_length < 50) {
			s->buffer[s->buffer_length++] = *p++;
		}
		s->buffer[s->buffer_length++] = 0;

		// Execute the error callback.
		if (s->process.automatic && s->process.error != NULL) {
			s->process.error(s);
		}

		return;
	}

	// Storing scanner states.
	s->cs  = cs;
	s->top = top;
	memcpy(s->stack, stack, sizeof(stack));

	// Store the current parser position.
	s->input.current = p;

	// Storing r_data pointer.
	s->r_data_tail = rdata_tail - s->r_data;

	if (*wrap == WRAP_DETECTED) {
		if (set_input_string(s, "\\", 1, true) != 0) {
			return;
		}

		*wrap = WRAP_PROCESS;
		parse(s, wrap);
	} else {
		*wrap = WRAP_NONE;
	}
}

__attribute__((visibility("default")))
int zs_parse_record(
	zs_scanner_t *s)
{
	if (s == NULL) {
		return -1;
	}

	// Check if parsing is possible.
	switch (s->state) {
	case ZS_STATE_NONE:
	case ZS_STATE_DATA:
	case ZS_STATE_INCLUDE:
		break;
	case ZS_STATE_ERROR:
		if (s->error.fatal) {
			return -1;
		}
		break;
	default:
		// Return if stop or end of file.
		return 0;
	}

	// Check for the end of the input.
	if (s->input.current != s->input.end) {
		// Try to parse another item.
		s->state = ZS_STATE_NONE;
		wrap_t wrap = WRAP_NONE;
		parse(s, &wrap);

		// Finish if nothing was parsed.
		if (s->state == ZS_STATE_NONE) {
			// Parse the final block.
			if (set_input_string(s, "\n", 1, true) != 0) {
				return -1;
			}
			parse(s, &wrap);
			if (s->state == ZS_STATE_NONE) {
				s->state = ZS_STATE_EOF;
			}
		}
	} else {
		s->state = ZS_STATE_EOF;
	}

	return 0;
}

__attribute__((visibility("default")))
int zs_parse_all(
	zs_scanner_t *s)
{
	if (s == NULL) {
		return -1;
	}

	s->process.automatic = true;

	// Parse input block.
	wrap_t wrap = WRAP_NONE;
	parse(s, &wrap);

	// Parse trailing newline-char block if it makes sense.
	if (s->state != ZS_STATE_STOP && !s->error.fatal) {
		if (set_input_string(s, "\n", 1, true) != 0) {
			return -1;
		}
		parse(s, &wrap);
	}

	// Check if any errors have occurred.
	if (s->error.counter > 0) {
		return -1;
	}

	return 0;
}
