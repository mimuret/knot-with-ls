
#line 1 "scanner.rl"
/*  Copyright (C) 2017 CZ.NIC, z.s.p.o. <knot-dns@labs.nic.cz>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <arpa/inet.h>
#include <fcntl.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <libgen.h>
#include <math.h>
#include <netinet/in.h>
#include <sys/socket.h>
#include <sys/mman.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <unistd.h>

#include "zscanner/scanner.h"
#include "zscanner/functions.h"
#include "libknot/descriptor.h"

/*! \brief Shorthand for setting warning data. */
#define WARN(err_code) { s->error.code = err_code; }
/*! \brief Shorthand for setting error data. */
#define ERR(err_code) { WARN(err_code); s->error.fatal = true; }
/*! \brief Shorthand for error reset. */
#define NOERR { WARN(ZS_OK); s->error.fatal = false; }

/*!
 * \brief Writes record type number to r_data.
 *
 * \param type		Type number.
 * \param rdata_tail	Position where to write type number to.
 */
static inline void type_num(const uint16_t type, uint8_t **rdata_tail)
{
	*((uint16_t *)*rdata_tail) = htons(type);
	*rdata_tail += 2;
}

/*!
 * \brief Sets bit to bitmap window.
 *
 * \param type		Type number.
 * \param s		Scanner context.
 */
static inline void window_add_bit(const uint16_t type, zs_scanner_t *s) {
	uint8_t win      = type / 256;
	uint8_t bit_pos  = type % 256;
	uint8_t byte_pos = bit_pos / 8;

	((s->windows[win]).bitmap)[byte_pos] |= 128 >> (bit_pos % 8);

	if ((s->windows[win]).length < byte_pos + 1) {
		(s->windows[win]).length = byte_pos + 1;
	}

	if (s->last_window < win) {
		s->last_window = win;
	}
}

// Include scanner file (in Ragel).

#line 83 "scanner.c"
static const int zone_scanner_start = 1138;
static const int zone_scanner_first_final = 1138;
static const int zone_scanner_error = 0;

static const int zone_scanner_en_err_line = 269;
static const int zone_scanner_en_dname_ = 271;
static const int zone_scanner_en_text_ = 280;
static const int zone_scanner_en_default_ttl_ = 292;
static const int zone_scanner_en_zone_origin_ = 301;
static const int zone_scanner_en_include_file_ = 313;
static const int zone_scanner_en_base64_ = 330;
static const int zone_scanner_en_bitmap_ = 337;
static const int zone_scanner_en_nonempty_hex_r_data = 470;
static const int zone_scanner_en_hex_r_data = 479;
static const int zone_scanner_en_dns_alg_ = 489;
static const int zone_scanner_en_cert_type_ = 593;
static const int zone_scanner_en_r_data_a = 634;
static const int zone_scanner_en_r_data_ns = 636;
static const int zone_scanner_en_r_data_soa = 638;
static const int zone_scanner_en_r_data_hinfo = 670;
static const int zone_scanner_en_r_data_minfo = 675;
static const int zone_scanner_en_r_data_mx = 680;
static const int zone_scanner_en_r_data_txt = 685;
static const int zone_scanner_en_r_data_aaaa = 689;
static const int zone_scanner_en_r_data_loc = 691;
static const int zone_scanner_en_r_data_srv = 746;
static const int zone_scanner_en_r_data_naptr = 757;
static const int zone_scanner_en_r_data_cert = 774;
static const int zone_scanner_en_r_data_apl = 785;
static const int zone_scanner_en_r_data_ds = 796;
static const int zone_scanner_en_r_data_sshfp = 809;
static const int zone_scanner_en_r_data_ipseckey = 819;
static const int zone_scanner_en_r_data_rrsig = 858;
static const int zone_scanner_en_r_data_nsec = 1013;
static const int zone_scanner_en_r_data_dnskey = 1016;
static const int zone_scanner_en_r_data_dhcid = 1027;
static const int zone_scanner_en_r_data_nsec3 = 1029;
static const int zone_scanner_en_r_data_nsec3param = 1058;
static const int zone_scanner_en_r_data_tlsa = 1071;
static const int zone_scanner_en_r_data_l32 = 1084;
static const int zone_scanner_en_r_data_l64 = 1089;
static const int zone_scanner_en_r_data_eui48 = 1102;
static const int zone_scanner_en_r_data_eui64 = 1108;
static const int zone_scanner_en_r_data_uri = 1114;
static const int zone_scanner_en_r_data_caa = 1122;
static const int zone_scanner_en_r_data_lb = 1130;
static const int zone_scanner_en_main = 1138;


#line 85 "scanner.rl"


__attribute__((visibility("default")))
int zs_init(
	zs_scanner_t *s,
	const char *origin,
	const uint16_t rclass,
	const uint32_t ttl)
{
	if (s == NULL) {
		return -1;
	}

	memset(s, 0, sizeof(*s));

	// Nonzero initial scanner state.
	s->cs = 1138;

	// Reset the file descriptor.
	s->file.descriptor = -1;

	// Use the root zone as origin if not specified.
	if (origin == NULL || strlen(origin) == 0) {
		origin = ".";
	}
	size_t origin_len = strlen(origin);

	// Prepare a zone settings header.
	const char *format;
	if (origin[origin_len - 1] != '.') {
		format = "$ORIGIN %s.\n";
	} else {
		format = "$ORIGIN %s\n";
	}

	char settings[1024];
	int ret = snprintf(settings, sizeof(settings), format, origin);
	if (ret <= 0 || ret >= sizeof(settings)) {
		ERR(ZS_ENOMEM);
		return -1;
	}

	// Parse the settings to set up the scanner origin.
	if (zs_set_input_string(s, settings, ret) != 0 ||
	    zs_parse_all(s) != 0) {
		return -1;
	}

	// Set scanner defaults.
	s->path = strdup(".");
	if (s->path == NULL) {
		ERR(ZS_ENOMEM);
		return -1;
	}
	s->default_class = rclass;
	s->default_ttl = ttl;
	s->line_counter = 1;

	s->state = ZS_STATE_NONE;
	s->process.automatic = false;

	return 0;
}

static void input_deinit(
	zs_scanner_t *s,
	bool keep_filename)
{
	// Deinit the file input.
	if (s->file.descriptor != -1) {
		// Unmap the file content.
		if (s->input.start != NULL) {
			munmap((void *)s->input.start,
			       s->input.end - s->input.start);
		}

		// Close the opened file.
		close(s->file.descriptor);
		s->file.descriptor = -1;
	}

	// Keep file name for possible trailing error report.
	if (!keep_filename) {
		free(s->file.name);
		s->file.name = NULL;
	}

	// Unset the input limits.
	s->input.start   = NULL;
	s->input.current = NULL;
	s->input.end     = NULL;
	s->input.eof     = false;
}

__attribute__((visibility("default")))
void zs_deinit(
	zs_scanner_t *s)
{
	if (s == NULL) {
		return;
	}

	input_deinit(s, false);
	free(s->path);
}

static int set_input_string(
	zs_scanner_t *s,
	const char *input,
	size_t size,
	bool final_block)
{
	if (s == NULL) {
		return -1;
	}

	if (input == NULL) {
		ERR(ZS_EINVAL);
		return -1;
	}

	// Deinit possibly opened file.
	input_deinit(s, final_block);

	// Set the scanner input limits.
	s->input.start   = input;
	s->input.current = input;
	s->input.end     = input + size;
	s->input.eof     = final_block;

	return 0;
}

__attribute__((visibility("default")))
int zs_set_input_string(
	zs_scanner_t *s,
	const char *input,
	size_t size)
{
	return set_input_string(s, input, size, false);
}

__attribute__((visibility("default")))
int zs_set_input_file(
	zs_scanner_t *s,
	const char *file_name)
{
	if (s == NULL) {
		return -1;
	}

	if (file_name == NULL) {
		ERR(ZS_EINVAL);
		return -1;
	}

	// Deinit possibly opened file.
	input_deinit(s, false);

	// Try to open the file.
	s->file.descriptor = open(file_name, O_RDONLY);
	if (s->file.descriptor == -1) {
		ERR(ZS_FILE_OPEN);
		return -1;
	}

	// Check for regular file input.
	struct stat file_stat;
	if (fstat(s->file.descriptor, &file_stat) == -1 ||
	    !S_ISREG(file_stat.st_mode)) {
		ERR(ZS_FILE_INVALID);
		input_deinit(s, false);
		return -1;
	}

	// Check for empty file (cannot mmap).
	if (file_stat.st_size > 0) {
		// Map the file to the memory.
		char *start = mmap(0, file_stat.st_size, PROT_READ, MAP_SHARED,
		                   s->file.descriptor, 0);
		if (start == MAP_FAILED) {
			ERR(ZS_FILE_MMAP);
			input_deinit(s, false);
			return -1;
		}

		// Try to set the mapped memory advise to sequential.
		(void)madvise(start, file_stat.st_size, MADV_SEQUENTIAL);

		// Set the scanner input limits.
		s->input.start   = start;
		s->input.current = start;
		s->input.end     = start + file_stat.st_size;
	}

	// Get absolute path of the zone file.
	char *full_name = realpath(file_name, NULL);
	if (full_name != NULL) {
		free(s->path);
		s->path = strdup(dirname(full_name));
		free(full_name);
		if (s->path == NULL) {
			ERR(ZS_ENOMEM);
			input_deinit(s, false);
			return -1;
		}
	} else {
		ERR(ZS_FILE_PATH);
		input_deinit(s, false);
		return -1;
	}

	s->file.name = strdup(file_name);
	if (s->file.name == NULL) {
		ERR(ZS_ENOMEM);
		input_deinit(s, false);
		return -1;
	}

	return 0;
}

__attribute__((visibility("default")))
int zs_set_processing(
	zs_scanner_t *s,
	void (*process_record)(zs_scanner_t *),
	void (*process_error)(zs_scanner_t *),
	void *data)
{
	if (s == NULL) {
		return -1;
	}

	s->process.record = process_record;
	s->process.error = process_error;
	s->process.data = data;

	return 0;
}

typedef enum {
	WRAP_NONE,     // Initial state.
	WRAP_DETECTED, // Input block end is a first '\' in rdata.
	WRAP_PROCESS   // Parsing of auxiliary block = "\".
} wrap_t;

static void parse(
	zs_scanner_t *s,
	wrap_t *wrap)
{
	// Restore scanner input limits (Ragel internals).
	const char *p = s->input.current;
	const char *pe = s->input.end;
	const char *eof = s->input.eof ? pe : NULL;

	// Restore state variables (Ragel internals).
	int cs  = s->cs;
	int top = s->top;
	int stack[RAGEL_STACK_SIZE];
	memcpy(stack, s->stack, sizeof(stack));

	// Auxiliary variables which are used in scanner body.
	struct in_addr  addr4;
	struct in6_addr addr6;
	uint32_t timestamp;
	int16_t  window;
	int      ret;

	// Next 2 variables are for better performance.
	// Restoring r_data pointer to next free space.
	uint8_t *rdata_tail = s->r_data + s->r_data_tail;
	// Initialization of the last r_data byte.
	uint8_t *rdata_stop = s->r_data + MAX_RDATA_LENGTH - 1;

	// Write scanner body (in C).
	
#line 410 "scanner.c"
	{
	short _widec;
	if ( p == pe )
		goto _test_eof;
	goto _resume;

_again:
	switch ( cs ) {
		case 1138: goto st1138;
		case 0: goto st0;
		case 1: goto st1;
		case 2: goto st2;
		case 3: goto st3;
		case 4: goto st4;
		case 5: goto st5;
		case 6: goto st6;
		case 7: goto st7;
		case 8: goto st8;
		case 9: goto st9;
		case 10: goto st10;
		case 11: goto st11;
		case 12: goto st12;
		case 13: goto st13;
		case 1139: goto st1139;
		case 14: goto st14;
		case 15: goto st15;
		case 16: goto st16;
		case 17: goto st17;
		case 18: goto st18;
		case 19: goto st19;
		case 20: goto st20;
		case 21: goto st21;
		case 22: goto st22;
		case 23: goto st23;
		case 24: goto st24;
		case 25: goto st25;
		case 26: goto st26;
		case 27: goto st27;
		case 28: goto st28;
		case 29: goto st29;
		case 30: goto st30;
		case 31: goto st31;
		case 32: goto st32;
		case 33: goto st33;
		case 34: goto st34;
		case 35: goto st35;
		case 36: goto st36;
		case 37: goto st37;
		case 38: goto st38;
		case 39: goto st39;
		case 40: goto st40;
		case 41: goto st41;
		case 42: goto st42;
		case 43: goto st43;
		case 44: goto st44;
		case 45: goto st45;
		case 46: goto st46;
		case 47: goto st47;
		case 48: goto st48;
		case 49: goto st49;
		case 50: goto st50;
		case 51: goto st51;
		case 52: goto st52;
		case 53: goto st53;
		case 54: goto st54;
		case 55: goto st55;
		case 56: goto st56;
		case 57: goto st57;
		case 58: goto st58;
		case 59: goto st59;
		case 60: goto st60;
		case 61: goto st61;
		case 62: goto st62;
		case 63: goto st63;
		case 64: goto st64;
		case 65: goto st65;
		case 66: goto st66;
		case 67: goto st67;
		case 68: goto st68;
		case 69: goto st69;
		case 70: goto st70;
		case 71: goto st71;
		case 72: goto st72;
		case 73: goto st73;
		case 74: goto st74;
		case 75: goto st75;
		case 76: goto st76;
		case 77: goto st77;
		case 78: goto st78;
		case 79: goto st79;
		case 80: goto st80;
		case 81: goto st81;
		case 82: goto st82;
		case 83: goto st83;
		case 84: goto st84;
		case 85: goto st85;
		case 86: goto st86;
		case 87: goto st87;
		case 88: goto st88;
		case 89: goto st89;
		case 90: goto st90;
		case 91: goto st91;
		case 92: goto st92;
		case 93: goto st93;
		case 94: goto st94;
		case 95: goto st95;
		case 96: goto st96;
		case 97: goto st97;
		case 98: goto st98;
		case 99: goto st99;
		case 100: goto st100;
		case 101: goto st101;
		case 102: goto st102;
		case 103: goto st103;
		case 104: goto st104;
		case 105: goto st105;
		case 106: goto st106;
		case 107: goto st107;
		case 108: goto st108;
		case 109: goto st109;
		case 110: goto st110;
		case 111: goto st111;
		case 112: goto st112;
		case 113: goto st113;
		case 114: goto st114;
		case 115: goto st115;
		case 116: goto st116;
		case 117: goto st117;
		case 118: goto st118;
		case 119: goto st119;
		case 120: goto st120;
		case 121: goto st121;
		case 122: goto st122;
		case 123: goto st123;
		case 124: goto st124;
		case 125: goto st125;
		case 126: goto st126;
		case 127: goto st127;
		case 128: goto st128;
		case 129: goto st129;
		case 130: goto st130;
		case 131: goto st131;
		case 132: goto st132;
		case 133: goto st133;
		case 134: goto st134;
		case 135: goto st135;
		case 136: goto st136;
		case 137: goto st137;
		case 138: goto st138;
		case 139: goto st139;
		case 140: goto st140;
		case 141: goto st141;
		case 142: goto st142;
		case 1140: goto st1140;
		case 143: goto st143;
		case 144: goto st144;
		case 145: goto st145;
		case 146: goto st146;
		case 147: goto st147;
		case 148: goto st148;
		case 149: goto st149;
		case 150: goto st150;
		case 151: goto st151;
		case 152: goto st152;
		case 1141: goto st1141;
		case 153: goto st153;
		case 154: goto st154;
		case 155: goto st155;
		case 156: goto st156;
		case 157: goto st157;
		case 158: goto st158;
		case 159: goto st159;
		case 160: goto st160;
		case 1142: goto st1142;
		case 161: goto st161;
		case 162: goto st162;
		case 163: goto st163;
		case 1143: goto st1143;
		case 164: goto st164;
		case 165: goto st165;
		case 166: goto st166;
		case 167: goto st167;
		case 168: goto st168;
		case 169: goto st169;
		case 170: goto st170;
		case 171: goto st171;
		case 172: goto st172;
		case 173: goto st173;
		case 174: goto st174;
		case 1144: goto st1144;
		case 175: goto st175;
		case 176: goto st176;
		case 177: goto st177;
		case 178: goto st178;
		case 1145: goto st1145;
		case 179: goto st179;
		case 180: goto st180;
		case 181: goto st181;
		case 182: goto st182;
		case 183: goto st183;
		case 184: goto st184;
		case 185: goto st185;
		case 186: goto st186;
		case 187: goto st187;
		case 188: goto st188;
		case 189: goto st189;
		case 190: goto st190;
		case 191: goto st191;
		case 192: goto st192;
		case 193: goto st193;
		case 194: goto st194;
		case 1146: goto st1146;
		case 195: goto st195;
		case 196: goto st196;
		case 197: goto st197;
		case 198: goto st198;
		case 199: goto st199;
		case 200: goto st200;
		case 201: goto st201;
		case 202: goto st202;
		case 203: goto st203;
		case 204: goto st204;
		case 205: goto st205;
		case 206: goto st206;
		case 207: goto st207;
		case 208: goto st208;
		case 209: goto st209;
		case 210: goto st210;
		case 1147: goto st1147;
		case 211: goto st211;
		case 212: goto st212;
		case 213: goto st213;
		case 214: goto st214;
		case 215: goto st215;
		case 216: goto st216;
		case 217: goto st217;
		case 218: goto st218;
		case 219: goto st219;
		case 220: goto st220;
		case 221: goto st221;
		case 222: goto st222;
		case 223: goto st223;
		case 224: goto st224;
		case 225: goto st225;
		case 226: goto st226;
		case 227: goto st227;
		case 228: goto st228;
		case 229: goto st229;
		case 230: goto st230;
		case 231: goto st231;
		case 232: goto st232;
		case 233: goto st233;
		case 234: goto st234;
		case 235: goto st235;
		case 236: goto st236;
		case 237: goto st237;
		case 238: goto st238;
		case 239: goto st239;
		case 240: goto st240;
		case 241: goto st241;
		case 242: goto st242;
		case 243: goto st243;
		case 244: goto st244;
		case 245: goto st245;
		case 246: goto st246;
		case 247: goto st247;
		case 248: goto st248;
		case 249: goto st249;
		case 250: goto st250;
		case 251: goto st251;
		case 252: goto st252;
		case 253: goto st253;
		case 254: goto st254;
		case 255: goto st255;
		case 256: goto st256;
		case 257: goto st257;
		case 258: goto st258;
		case 259: goto st259;
		case 260: goto st260;
		case 261: goto st261;
		case 262: goto st262;
		case 263: goto st263;
		case 264: goto st264;
		case 265: goto st265;
		case 266: goto st266;
		case 267: goto st267;
		case 268: goto st268;
		case 269: goto st269;
		case 270: goto st270;
		case 1148: goto st1148;
		case 271: goto st271;
		case 272: goto st272;
		case 1149: goto st1149;
		case 273: goto st273;
		case 274: goto st274;
		case 275: goto st275;
		case 276: goto st276;
		case 277: goto st277;
		case 278: goto st278;
		case 279: goto st279;
		case 280: goto st280;
		case 281: goto st281;
		case 1150: goto st1150;
		case 1151: goto st1151;
		case 282: goto st282;
		case 283: goto st283;
		case 284: goto st284;
		case 285: goto st285;
		case 286: goto st286;
		case 287: goto st287;
		case 288: goto st288;
		case 289: goto st289;
		case 290: goto st290;
		case 291: goto st291;
		case 292: goto st292;
		case 293: goto st293;
		case 294: goto st294;
		case 295: goto st295;
		case 1152: goto st1152;
		case 296: goto st296;
		case 297: goto st297;
		case 298: goto st298;
		case 299: goto st299;
		case 300: goto st300;
		case 301: goto st301;
		case 302: goto st302;
		case 303: goto st303;
		case 304: goto st304;
		case 305: goto st305;
		case 1153: goto st1153;
		case 306: goto st306;
		case 307: goto st307;
		case 308: goto st308;
		case 309: goto st309;
		case 310: goto st310;
		case 311: goto st311;
		case 312: goto st312;
		case 313: goto st313;
		case 314: goto st314;
		case 315: goto st315;
		case 316: goto st316;
		case 317: goto st317;
		case 318: goto st318;
		case 319: goto st319;
		case 1154: goto st1154;
		case 320: goto st320;
		case 321: goto st321;
		case 322: goto st322;
		case 323: goto st323;
		case 324: goto st324;
		case 325: goto st325;
		case 326: goto st326;
		case 1155: goto st1155;
		case 327: goto st327;
		case 328: goto st328;
		case 329: goto st329;
		case 330: goto st330;
		case 331: goto st331;
		case 332: goto st332;
		case 333: goto st333;
		case 334: goto st334;
		case 335: goto st335;
		case 1156: goto st1156;
		case 1157: goto st1157;
		case 1158: goto st1158;
		case 336: goto st336;
		case 337: goto st337;
		case 338: goto st338;
		case 339: goto st339;
		case 340: goto st340;
		case 341: goto st341;
		case 342: goto st342;
		case 343: goto st343;
		case 1159: goto st1159;
		case 1160: goto st1160;
		case 344: goto st344;
		case 345: goto st345;
		case 346: goto st346;
		case 1161: goto st1161;
		case 347: goto st347;
		case 348: goto st348;
		case 349: goto st349;
		case 350: goto st350;
		case 351: goto st351;
		case 352: goto st352;
		case 353: goto st353;
		case 354: goto st354;
		case 355: goto st355;
		case 356: goto st356;
		case 357: goto st357;
		case 358: goto st358;
		case 359: goto st359;
		case 360: goto st360;
		case 361: goto st361;
		case 362: goto st362;
		case 363: goto st363;
		case 364: goto st364;
		case 365: goto st365;
		case 366: goto st366;
		case 367: goto st367;
		case 368: goto st368;
		case 369: goto st369;
		case 370: goto st370;
		case 371: goto st371;
		case 372: goto st372;
		case 373: goto st373;
		case 374: goto st374;
		case 375: goto st375;
		case 376: goto st376;
		case 377: goto st377;
		case 378: goto st378;
		case 379: goto st379;
		case 380: goto st380;
		case 381: goto st381;
		case 382: goto st382;
		case 383: goto st383;
		case 384: goto st384;
		case 385: goto st385;
		case 386: goto st386;
		case 387: goto st387;
		case 388: goto st388;
		case 389: goto st389;
		case 390: goto st390;
		case 391: goto st391;
		case 392: goto st392;
		case 393: goto st393;
		case 394: goto st394;
		case 395: goto st395;
		case 396: goto st396;
		case 397: goto st397;
		case 398: goto st398;
		case 399: goto st399;
		case 400: goto st400;
		case 401: goto st401;
		case 402: goto st402;
		case 403: goto st403;
		case 404: goto st404;
		case 405: goto st405;
		case 406: goto st406;
		case 407: goto st407;
		case 408: goto st408;
		case 409: goto st409;
		case 410: goto st410;
		case 411: goto st411;
		case 412: goto st412;
		case 413: goto st413;
		case 414: goto st414;
		case 415: goto st415;
		case 416: goto st416;
		case 417: goto st417;
		case 418: goto st418;
		case 419: goto st419;
		case 420: goto st420;
		case 421: goto st421;
		case 422: goto st422;
		case 423: goto st423;
		case 424: goto st424;
		case 425: goto st425;
		case 426: goto st426;
		case 427: goto st427;
		case 428: goto st428;
		case 429: goto st429;
		case 430: goto st430;
		case 431: goto st431;
		case 432: goto st432;
		case 433: goto st433;
		case 434: goto st434;
		case 435: goto st435;
		case 436: goto st436;
		case 437: goto st437;
		case 438: goto st438;
		case 439: goto st439;
		case 440: goto st440;
		case 441: goto st441;
		case 442: goto st442;
		case 443: goto st443;
		case 444: goto st444;
		case 445: goto st445;
		case 446: goto st446;
		case 447: goto st447;
		case 448: goto st448;
		case 449: goto st449;
		case 450: goto st450;
		case 451: goto st451;
		case 452: goto st452;
		case 453: goto st453;
		case 454: goto st454;
		case 455: goto st455;
		case 456: goto st456;
		case 457: goto st457;
		case 458: goto st458;
		case 459: goto st459;
		case 460: goto st460;
		case 461: goto st461;
		case 462: goto st462;
		case 463: goto st463;
		case 464: goto st464;
		case 465: goto st465;
		case 466: goto st466;
		case 467: goto st467;
		case 468: goto st468;
		case 469: goto st469;
		case 470: goto st470;
		case 471: goto st471;
		case 472: goto st472;
		case 473: goto st473;
		case 474: goto st474;
		case 475: goto st475;
		case 476: goto st476;
		case 1162: goto st1162;
		case 1163: goto st1163;
		case 1164: goto st1164;
		case 477: goto st477;
		case 478: goto st478;
		case 479: goto st479;
		case 480: goto st480;
		case 481: goto st481;
		case 1165: goto st1165;
		case 482: goto st482;
		case 483: goto st483;
		case 484: goto st484;
		case 485: goto st485;
		case 1166: goto st1166;
		case 1167: goto st1167;
		case 1168: goto st1168;
		case 486: goto st486;
		case 487: goto st487;
		case 1169: goto st1169;
		case 488: goto st488;
		case 489: goto st489;
		case 490: goto st490;
		case 1170: goto st1170;
		case 491: goto st491;
		case 492: goto st492;
		case 493: goto st493;
		case 494: goto st494;
		case 495: goto st495;
		case 496: goto st496;
		case 497: goto st497;
		case 498: goto st498;
		case 499: goto st499;
		case 500: goto st500;
		case 501: goto st501;
		case 502: goto st502;
		case 503: goto st503;
		case 504: goto st504;
		case 505: goto st505;
		case 506: goto st506;
		case 507: goto st507;
		case 508: goto st508;
		case 509: goto st509;
		case 510: goto st510;
		case 511: goto st511;
		case 512: goto st512;
		case 513: goto st513;
		case 514: goto st514;
		case 515: goto st515;
		case 516: goto st516;
		case 517: goto st517;
		case 518: goto st518;
		case 519: goto st519;
		case 520: goto st520;
		case 521: goto st521;
		case 522: goto st522;
		case 523: goto st523;
		case 524: goto st524;
		case 525: goto st525;
		case 526: goto st526;
		case 527: goto st527;
		case 528: goto st528;
		case 529: goto st529;
		case 530: goto st530;
		case 531: goto st531;
		case 532: goto st532;
		case 533: goto st533;
		case 534: goto st534;
		case 535: goto st535;
		case 536: goto st536;
		case 537: goto st537;
		case 538: goto st538;
		case 539: goto st539;
		case 540: goto st540;
		case 541: goto st541;
		case 542: goto st542;
		case 543: goto st543;
		case 544: goto st544;
		case 545: goto st545;
		case 546: goto st546;
		case 547: goto st547;
		case 548: goto st548;
		case 549: goto st549;
		case 550: goto st550;
		case 551: goto st551;
		case 552: goto st552;
		case 553: goto st553;
		case 554: goto st554;
		case 555: goto st555;
		case 556: goto st556;
		case 557: goto st557;
		case 558: goto st558;
		case 559: goto st559;
		case 560: goto st560;
		case 561: goto st561;
		case 562: goto st562;
		case 563: goto st563;
		case 564: goto st564;
		case 565: goto st565;
		case 566: goto st566;
		case 567: goto st567;
		case 568: goto st568;
		case 569: goto st569;
		case 570: goto st570;
		case 571: goto st571;
		case 572: goto st572;
		case 573: goto st573;
		case 574: goto st574;
		case 575: goto st575;
		case 576: goto st576;
		case 577: goto st577;
		case 578: goto st578;
		case 579: goto st579;
		case 580: goto st580;
		case 581: goto st581;
		case 582: goto st582;
		case 583: goto st583;
		case 584: goto st584;
		case 585: goto st585;
		case 586: goto st586;
		case 587: goto st587;
		case 588: goto st588;
		case 589: goto st589;
		case 590: goto st590;
		case 591: goto st591;
		case 592: goto st592;
		case 593: goto st593;
		case 594: goto st594;
		case 1171: goto st1171;
		case 595: goto st595;
		case 596: goto st596;
		case 597: goto st597;
		case 598: goto st598;
		case 599: goto st599;
		case 600: goto st600;
		case 601: goto st601;
		case 602: goto st602;
		case 603: goto st603;
		case 604: goto st604;
		case 605: goto st605;
		case 606: goto st606;
		case 607: goto st607;
		case 608: goto st608;
		case 609: goto st609;
		case 610: goto st610;
		case 611: goto st611;
		case 612: goto st612;
		case 613: goto st613;
		case 614: goto st614;
		case 615: goto st615;
		case 616: goto st616;
		case 617: goto st617;
		case 618: goto st618;
		case 619: goto st619;
		case 620: goto st620;
		case 621: goto st621;
		case 622: goto st622;
		case 623: goto st623;
		case 624: goto st624;
		case 625: goto st625;
		case 626: goto st626;
		case 627: goto st627;
		case 628: goto st628;
		case 629: goto st629;
		case 630: goto st630;
		case 631: goto st631;
		case 632: goto st632;
		case 633: goto st633;
		case 634: goto st634;
		case 635: goto st635;
		case 1172: goto st1172;
		case 636: goto st636;
		case 637: goto st637;
		case 1173: goto st1173;
		case 638: goto st638;
		case 639: goto st639;
		case 640: goto st640;
		case 641: goto st641;
		case 642: goto st642;
		case 643: goto st643;
		case 644: goto st644;
		case 645: goto st645;
		case 646: goto st646;
		case 647: goto st647;
		case 648: goto st648;
		case 649: goto st649;
		case 650: goto st650;
		case 651: goto st651;
		case 1174: goto st1174;
		case 652: goto st652;
		case 653: goto st653;
		case 654: goto st654;
		case 655: goto st655;
		case 656: goto st656;
		case 657: goto st657;
		case 658: goto st658;
		case 659: goto st659;
		case 660: goto st660;
		case 661: goto st661;
		case 662: goto st662;
		case 663: goto st663;
		case 664: goto st664;
		case 665: goto st665;
		case 666: goto st666;
		case 667: goto st667;
		case 668: goto st668;
		case 669: goto st669;
		case 670: goto st670;
		case 671: goto st671;
		case 672: goto st672;
		case 673: goto st673;
		case 1175: goto st1175;
		case 674: goto st674;
		case 675: goto st675;
		case 676: goto st676;
		case 677: goto st677;
		case 678: goto st678;
		case 1176: goto st1176;
		case 679: goto st679;
		case 680: goto st680;
		case 681: goto st681;
		case 682: goto st682;
		case 683: goto st683;
		case 1177: goto st1177;
		case 684: goto st684;
		case 685: goto st685;
		case 686: goto st686;
		case 687: goto st687;
		case 688: goto st688;
		case 1178: goto st1178;
		case 1179: goto st1179;
		case 1180: goto st1180;
		case 689: goto st689;
		case 690: goto st690;
		case 1181: goto st1181;
		case 691: goto st691;
		case 692: goto st692;
		case 693: goto st693;
		case 694: goto st694;
		case 695: goto st695;
		case 696: goto st696;
		case 697: goto st697;
		case 698: goto st698;
		case 699: goto st699;
		case 700: goto st700;
		case 701: goto st701;
		case 702: goto st702;
		case 703: goto st703;
		case 704: goto st704;
		case 705: goto st705;
		case 706: goto st706;
		case 707: goto st707;
		case 708: goto st708;
		case 709: goto st709;
		case 710: goto st710;
		case 711: goto st711;
		case 712: goto st712;
		case 713: goto st713;
		case 714: goto st714;
		case 715: goto st715;
		case 716: goto st716;
		case 717: goto st717;
		case 1182: goto st1182;
		case 1183: goto st1183;
		case 1184: goto st1184;
		case 718: goto st718;
		case 719: goto st719;
		case 720: goto st720;
		case 1185: goto st1185;
		case 1186: goto st1186;
		case 721: goto st721;
		case 722: goto st722;
		case 723: goto st723;
		case 724: goto st724;
		case 1187: goto st1187;
		case 1188: goto st1188;
		case 725: goto st725;
		case 726: goto st726;
		case 727: goto st727;
		case 728: goto st728;
		case 1189: goto st1189;
		case 1190: goto st1190;
		case 729: goto st729;
		case 730: goto st730;
		case 731: goto st731;
		case 732: goto st732;
		case 733: goto st733;
		case 734: goto st734;
		case 735: goto st735;
		case 736: goto st736;
		case 737: goto st737;
		case 738: goto st738;
		case 739: goto st739;
		case 740: goto st740;
		case 741: goto st741;
		case 742: goto st742;
		case 743: goto st743;
		case 744: goto st744;
		case 745: goto st745;
		case 746: goto st746;
		case 747: goto st747;
		case 748: goto st748;
		case 749: goto st749;
		case 750: goto st750;
		case 751: goto st751;
		case 752: goto st752;
		case 753: goto st753;
		case 1191: goto st1191;
		case 754: goto st754;
		case 755: goto st755;
		case 756: goto st756;
		case 757: goto st757;
		case 758: goto st758;
		case 759: goto st759;
		case 760: goto st760;
		case 761: goto st761;
		case 762: goto st762;
		case 763: goto st763;
		case 764: goto st764;
		case 765: goto st765;
		case 766: goto st766;
		case 767: goto st767;
		case 768: goto st768;
		case 1192: goto st1192;
		case 769: goto st769;
		case 770: goto st770;
		case 771: goto st771;
		case 772: goto st772;
		case 773: goto st773;
		case 774: goto st774;
		case 775: goto st775;
		case 776: goto st776;
		case 777: goto st777;
		case 778: goto st778;
		case 779: goto st779;
		case 780: goto st780;
		case 781: goto st781;
		case 1193: goto st1193;
		case 782: goto st782;
		case 783: goto st783;
		case 784: goto st784;
		case 785: goto st785;
		case 786: goto st786;
		case 787: goto st787;
		case 788: goto st788;
		case 789: goto st789;
		case 790: goto st790;
		case 791: goto st791;
		case 792: goto st792;
		case 1194: goto st1194;
		case 1195: goto st1195;
		case 793: goto st793;
		case 794: goto st794;
		case 795: goto st795;
		case 1196: goto st1196;
		case 796: goto st796;
		case 797: goto st797;
		case 798: goto st798;
		case 799: goto st799;
		case 800: goto st800;
		case 801: goto st801;
		case 802: goto st802;
		case 803: goto st803;
		case 804: goto st804;
		case 805: goto st805;
		case 1197: goto st1197;
		case 1198: goto st1198;
		case 1199: goto st1199;
		case 806: goto st806;
		case 807: goto st807;
		case 808: goto st808;
		case 809: goto st809;
		case 810: goto st810;
		case 811: goto st811;
		case 812: goto st812;
		case 813: goto st813;
		case 814: goto st814;
		case 815: goto st815;
		case 816: goto st816;
		case 1200: goto st1200;
		case 1201: goto st1201;
		case 1202: goto st1202;
		case 817: goto st817;
		case 818: goto st818;
		case 819: goto st819;
		case 820: goto st820;
		case 821: goto st821;
		case 822: goto st822;
		case 823: goto st823;
		case 824: goto st824;
		case 825: goto st825;
		case 826: goto st826;
		case 827: goto st827;
		case 828: goto st828;
		case 1203: goto st1203;
		case 829: goto st829;
		case 830: goto st830;
		case 831: goto st831;
		case 1204: goto st1204;
		case 1205: goto st1205;
		case 832: goto st832;
		case 1206: goto st1206;
		case 1207: goto st1207;
		case 833: goto st833;
		case 1208: goto st1208;
		case 1209: goto st1209;
		case 834: goto st834;
		case 835: goto st835;
		case 836: goto st836;
		case 837: goto st837;
		case 838: goto st838;
		case 839: goto st839;
		case 840: goto st840;
		case 841: goto st841;
		case 842: goto st842;
		case 843: goto st843;
		case 844: goto st844;
		case 845: goto st845;
		case 846: goto st846;
		case 847: goto st847;
		case 848: goto st848;
		case 849: goto st849;
		case 850: goto st850;
		case 851: goto st851;
		case 852: goto st852;
		case 853: goto st853;
		case 854: goto st854;
		case 855: goto st855;
		case 856: goto st856;
		case 857: goto st857;
		case 858: goto st858;
		case 859: goto st859;
		case 860: goto st860;
		case 861: goto st861;
		case 862: goto st862;
		case 863: goto st863;
		case 864: goto st864;
		case 865: goto st865;
		case 866: goto st866;
		case 867: goto st867;
		case 868: goto st868;
		case 869: goto st869;
		case 870: goto st870;
		case 871: goto st871;
		case 872: goto st872;
		case 873: goto st873;
		case 874: goto st874;
		case 875: goto st875;
		case 1210: goto st1210;
		case 876: goto st876;
		case 877: goto st877;
		case 878: goto st878;
		case 879: goto st879;
		case 880: goto st880;
		case 881: goto st881;
		case 882: goto st882;
		case 883: goto st883;
		case 884: goto st884;
		case 885: goto st885;
		case 886: goto st886;
		case 887: goto st887;
		case 888: goto st888;
		case 889: goto st889;
		case 890: goto st890;
		case 891: goto st891;
		case 892: goto st892;
		case 893: goto st893;
		case 894: goto st894;
		case 895: goto st895;
		case 896: goto st896;
		case 897: goto st897;
		case 898: goto st898;
		case 899: goto st899;
		case 900: goto st900;
		case 901: goto st901;
		case 902: goto st902;
		case 903: goto st903;
		case 904: goto st904;
		case 905: goto st905;
		case 906: goto st906;
		case 907: goto st907;
		case 908: goto st908;
		case 909: goto st909;
		case 910: goto st910;
		case 911: goto st911;
		case 912: goto st912;
		case 913: goto st913;
		case 914: goto st914;
		case 915: goto st915;
		case 916: goto st916;
		case 917: goto st917;
		case 918: goto st918;
		case 919: goto st919;
		case 920: goto st920;
		case 921: goto st921;
		case 922: goto st922;
		case 923: goto st923;
		case 924: goto st924;
		case 925: goto st925;
		case 926: goto st926;
		case 927: goto st927;
		case 928: goto st928;
		case 929: goto st929;
		case 930: goto st930;
		case 931: goto st931;
		case 932: goto st932;
		case 933: goto st933;
		case 934: goto st934;
		case 935: goto st935;
		case 936: goto st936;
		case 937: goto st937;
		case 938: goto st938;
		case 939: goto st939;
		case 940: goto st940;
		case 941: goto st941;
		case 942: goto st942;
		case 943: goto st943;
		case 944: goto st944;
		case 945: goto st945;
		case 946: goto st946;
		case 947: goto st947;
		case 948: goto st948;
		case 949: goto st949;
		case 950: goto st950;
		case 951: goto st951;
		case 952: goto st952;
		case 953: goto st953;
		case 954: goto st954;
		case 955: goto st955;
		case 956: goto st956;
		case 957: goto st957;
		case 958: goto st958;
		case 959: goto st959;
		case 960: goto st960;
		case 961: goto st961;
		case 962: goto st962;
		case 963: goto st963;
		case 964: goto st964;
		case 965: goto st965;
		case 966: goto st966;
		case 967: goto st967;
		case 968: goto st968;
		case 969: goto st969;
		case 970: goto st970;
		case 971: goto st971;
		case 972: goto st972;
		case 973: goto st973;
		case 974: goto st974;
		case 975: goto st975;
		case 976: goto st976;
		case 977: goto st977;
		case 978: goto st978;
		case 979: goto st979;
		case 980: goto st980;
		case 981: goto st981;
		case 982: goto st982;
		case 983: goto st983;
		case 984: goto st984;
		case 985: goto st985;
		case 986: goto st986;
		case 987: goto st987;
		case 988: goto st988;
		case 989: goto st989;
		case 990: goto st990;
		case 991: goto st991;
		case 992: goto st992;
		case 993: goto st993;
		case 994: goto st994;
		case 995: goto st995;
		case 996: goto st996;
		case 997: goto st997;
		case 998: goto st998;
		case 999: goto st999;
		case 1000: goto st1000;
		case 1001: goto st1001;
		case 1002: goto st1002;
		case 1003: goto st1003;
		case 1004: goto st1004;
		case 1005: goto st1005;
		case 1006: goto st1006;
		case 1007: goto st1007;
		case 1008: goto st1008;
		case 1009: goto st1009;
		case 1010: goto st1010;
		case 1011: goto st1011;
		case 1012: goto st1012;
		case 1013: goto st1013;
		case 1014: goto st1014;
		case 1015: goto st1015;
		case 1211: goto st1211;
		case 1016: goto st1016;
		case 1017: goto st1017;
		case 1018: goto st1018;
		case 1019: goto st1019;
		case 1020: goto st1020;
		case 1021: goto st1021;
		case 1022: goto st1022;
		case 1023: goto st1023;
		case 1212: goto st1212;
		case 1024: goto st1024;
		case 1025: goto st1025;
		case 1026: goto st1026;
		case 1027: goto st1027;
		case 1028: goto st1028;
		case 1213: goto st1213;
		case 1029: goto st1029;
		case 1030: goto st1030;
		case 1031: goto st1031;
		case 1032: goto st1032;
		case 1033: goto st1033;
		case 1034: goto st1034;
		case 1035: goto st1035;
		case 1036: goto st1036;
		case 1037: goto st1037;
		case 1038: goto st1038;
		case 1039: goto st1039;
		case 1040: goto st1040;
		case 1041: goto st1041;
		case 1042: goto st1042;
		case 1043: goto st1043;
		case 1044: goto st1044;
		case 1045: goto st1045;
		case 1046: goto st1046;
		case 1214: goto st1214;
		case 1047: goto st1047;
		case 1048: goto st1048;
		case 1049: goto st1049;
		case 1050: goto st1050;
		case 1051: goto st1051;
		case 1052: goto st1052;
		case 1053: goto st1053;
		case 1054: goto st1054;
		case 1055: goto st1055;
		case 1056: goto st1056;
		case 1057: goto st1057;
		case 1058: goto st1058;
		case 1059: goto st1059;
		case 1060: goto st1060;
		case 1061: goto st1061;
		case 1062: goto st1062;
		case 1063: goto st1063;
		case 1064: goto st1064;
		case 1065: goto st1065;
		case 1215: goto st1215;
		case 1066: goto st1066;
		case 1067: goto st1067;
		case 1068: goto st1068;
		case 1069: goto st1069;
		case 1070: goto st1070;
		case 1071: goto st1071;
		case 1072: goto st1072;
		case 1073: goto st1073;
		case 1074: goto st1074;
		case 1075: goto st1075;
		case 1076: goto st1076;
		case 1077: goto st1077;
		case 1078: goto st1078;
		case 1079: goto st1079;
		case 1080: goto st1080;
		case 1216: goto st1216;
		case 1217: goto st1217;
		case 1218: goto st1218;
		case 1081: goto st1081;
		case 1082: goto st1082;
		case 1083: goto st1083;
		case 1084: goto st1084;
		case 1085: goto st1085;
		case 1086: goto st1086;
		case 1087: goto st1087;
		case 1219: goto st1219;
		case 1088: goto st1088;
		case 1089: goto st1089;
		case 1090: goto st1090;
		case 1091: goto st1091;
		case 1092: goto st1092;
		case 1093: goto st1093;
		case 1094: goto st1094;
		case 1095: goto st1095;
		case 1096: goto st1096;
		case 1097: goto st1097;
		case 1098: goto st1098;
		case 1099: goto st1099;
		case 1100: goto st1100;
		case 1220: goto st1220;
		case 1101: goto st1101;
		case 1102: goto st1102;
		case 1103: goto st1103;
		case 1104: goto st1104;
		case 1105: goto st1105;
		case 1106: goto st1106;
		case 1107: goto st1107;
		case 1221: goto st1221;
		case 1108: goto st1108;
		case 1109: goto st1109;
		case 1110: goto st1110;
		case 1111: goto st1111;
		case 1112: goto st1112;
		case 1113: goto st1113;
		case 1222: goto st1222;
		case 1114: goto st1114;
		case 1115: goto st1115;
		case 1116: goto st1116;
		case 1117: goto st1117;
		case 1118: goto st1118;
		case 1119: goto st1119;
		case 1223: goto st1223;
		case 1120: goto st1120;
		case 1121: goto st1121;
		case 1122: goto st1122;
		case 1123: goto st1123;
		case 1124: goto st1124;
		case 1125: goto st1125;
		case 1126: goto st1126;
		case 1127: goto st1127;
		case 1224: goto st1224;
		case 1128: goto st1128;
		case 1129: goto st1129;
		case 1130: goto st1130;
		case 1131: goto st1131;
		case 1132: goto st1132;
		case 1133: goto st1133;
		case 1134: goto st1134;
		case 1135: goto st1135;
		case 1225: goto st1225;
		case 1136: goto st1136;
		case 1137: goto st1137;
	default: break;
	}

	if ( ++p == pe )
		goto _test_eof;
_resume:
	switch ( cs )
	{
tr20:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1138;
tr83:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1138; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1138; goto _out;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1138;
tr89:
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1138; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1138; goto _out;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1138;
tr92:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1138; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1138; goto _out;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1138;
tr674:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1138;
tr768:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1138; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1138; goto _out;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1138;
tr883:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1138; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1138; goto _out;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
	goto st1138;
tr887:
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1138; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1138; goto _out;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
	goto st1138;
tr3667:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1138;
tr3727:
#line 793 "scanner_body.rl"
	{
		NOERR;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1138;
st1138:
	if ( ++p == pe )
		goto _test_eof1138;
case 1138:
#line 1916 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3662;
		case 32: goto tr3662;
		case 36: goto st153;
		case 40: goto tr3664;
		case 41: goto tr3665;
		case 42: goto tr3666;
		case 92: goto tr3666;
		case 95: goto tr3666;
		case 778: goto tr3667;
		case 827: goto tr3668;
		case 1034: goto tr3669;
		case 1083: goto tr3670;
	}
	if ( _widec < 64 ) {
		if ( 45 <= _widec && _widec <= 57 )
			goto tr3666;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr3666;
	} else
		goto tr3666;
	goto tr3661;
tr0:
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {goto st269;}
	}
	goto st0;
tr24:
#line 422 "scanner_body.rl"
	{
		WARN(ZS_BAD_TIME_UNIT);
		p--; {goto st269;}
	}
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {goto st269;}
	}
	goto st0;
tr36:
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {goto st269;}
	}
	goto st0;
tr57:
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr71:
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr79:
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {goto st269;}
	}
	goto st0;
tr85:
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {goto st269;}
	}
	goto st0;
tr114:
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {goto st269;}
	}
	goto st0;
tr139:
#line 422 "scanner_body.rl"
	{
		WARN(ZS_BAD_TIME_UNIT);
		p--; {goto st269;}
	}
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {goto st269;}
	}
	goto st0;
tr145:
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {goto st269;}
	}
	goto st0;
tr591:
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {goto st269;}
	}
	goto st0;
tr593:
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr675:
#line 796 "scanner_body.rl"
	{
		ERR(ZS_BAD_DIRECTIVE);
		p--; {goto st269;}
	}
	goto st0;
tr686:
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {goto st269;}
	}
	goto st0;
tr700:
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {goto st269;}
	}
#line 422 "scanner_body.rl"
	{
		WARN(ZS_BAD_TIME_UNIT);
		p--; {goto st269;}
	}
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {goto st269;}
	}
	goto st0;
tr728:
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr743:
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {goto st269;}
	}
	goto st0;
tr780:
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {goto st269;}
	}
#line 796 "scanner_body.rl"
	{
		ERR(ZS_BAD_DIRECTIVE);
		p--; {goto st269;}
	}
	goto st0;
tr790:
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {goto st269;}
	}
	goto st0;
tr796:
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {goto st269;}
	}
#line 422 "scanner_body.rl"
	{
		WARN(ZS_BAD_TIME_UNIT);
		p--; {goto st269;}
	}
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {goto st269;}
	}
	goto st0;
tr809:
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {goto st269;}
	}
	goto st0;
tr823:
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr913:
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {goto st269;}
	}
	goto st0;
tr924:
#line 226 "scanner_body.rl"
	{
		WARN(ZS_BAD_DNAME_CHAR);
		p--; {goto st269;}
	}
	goto st0;
tr937:
#line 177 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {goto st269;}
	}
#line 226 "scanner_body.rl"
	{
		WARN(ZS_BAD_DNAME_CHAR);
		p--; {goto st269;}
	}
	goto st0;
tr945:
#line 559 "scanner_body.rl"
	{
		WARN(ZS_BAD_TEXT_CHAR);
		p--; {goto st269;}
	}
#line 563 "scanner_body.rl"
	{
		WARN(ZS_BAD_TEXT);
		p--; {goto st269;}
	}
	goto st0;
tr951:
#line 607 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {goto st269;}
	}
#line 559 "scanner_body.rl"
	{
		WARN(ZS_BAD_TEXT_CHAR);
		p--; {goto st269;}
	}
#line 563 "scanner_body.rl"
	{
		WARN(ZS_BAD_TEXT);
		p--; {goto st269;}
	}
	goto st0;
tr962:
#line 563 "scanner_body.rl"
	{
		WARN(ZS_BAD_TEXT);
		p--; {goto st269;}
	}
	goto st0;
tr969:
#line 656 "scanner_body.rl"
	{
		ERR(ZS_BAD_TTL);
		p--; {goto st269;}
	}
	goto st0;
tr975:
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {goto st269;}
	}
#line 656 "scanner_body.rl"
	{
		ERR(ZS_BAD_TTL);
		p--; {goto st269;}
	}
	goto st0;
tr977:
#line 422 "scanner_body.rl"
	{
		WARN(ZS_BAD_TIME_UNIT);
		p--; {goto st269;}
	}
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {goto st269;}
	}
#line 656 "scanner_body.rl"
	{
		ERR(ZS_BAD_TTL);
		p--; {goto st269;}
	}
	goto st0;
tr989:
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {goto st269;}
	}
#line 656 "scanner_body.rl"
	{
		ERR(ZS_BAD_TTL);
		p--; {goto st269;}
	}
	goto st0;
tr998:
#line 422 "scanner_body.rl"
	{
		WARN(ZS_BAD_TIME_UNIT);
		p--; {goto st269;}
	}
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {goto st269;}
	}
#line 656 "scanner_body.rl"
	{
		ERR(ZS_BAD_TTL);
		p--; {goto st269;}
	}
	goto st0;
tr1013:
#line 673 "scanner_body.rl"
	{
		ERR(ZS_BAD_ORIGIN);
		p--; {goto st269;}
	}
	goto st0;
tr1025:
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {goto st269;}
	}
#line 673 "scanner_body.rl"
	{
		ERR(ZS_BAD_ORIGIN);
		p--; {goto st269;}
	}
	goto st0;
tr1041:
#line 177 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {goto st269;}
	}
#line 673 "scanner_body.rl"
	{
		ERR(ZS_BAD_ORIGIN);
		p--; {goto st269;}
	}
	goto st0;
tr1055:
#line 701 "scanner_body.rl"
	{
		ERR(ZS_BAD_INCLUDE_FILENAME);
		p--; {goto st269;}
	}
	goto st0;
tr1056:
#line 701 "scanner_body.rl"
	{
		ERR(ZS_BAD_INCLUDE_FILENAME);
		p--; {goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {goto st269;}
	}
	goto st0;
tr1063:
#line 712 "scanner_body.rl"
	{
		ERR(ZS_BAD_INCLUDE_ORIGIN);
		p--; {goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {goto st269;}
	}
	goto st0;
tr1073:
#line 712 "scanner_body.rl"
	{
		ERR(ZS_BAD_INCLUDE_ORIGIN);
		p--; {goto st269;}
	}
	goto st0;
tr1090:
#line 177 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {goto st269;}
	}
#line 712 "scanner_body.rl"
	{
		ERR(ZS_BAD_INCLUDE_ORIGIN);
		p--; {goto st269;}
	}
	goto st0;
tr1107:
#line 1040 "scanner_body.rl"
	{
		WARN(ZS_BAD_BASE64_CHAR);
		p--; {goto st269;}
	}
	goto st0;
tr1123:
#line 1416 "scanner_body.rl"
	{
		WARN(ZS_BAD_BITMAP);
		p--; {goto st269;}
	}
	goto st0;
tr1625:
#line 1582 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr1631:
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {goto st269;}
	}
#line 1582 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr1639:
#line 977 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_CHAR);
		p--; {goto st269;}
	}
#line 998 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {goto st269;}
	}
#line 1582 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr1701:
#line 1658 "scanner_body.rl"
	{
		WARN(ZS_BAD_ALGORITHM);
		p--; {goto st269;}
	}
	goto st0;
tr1823:
#line 1662 "scanner_body.rl"
	{
		WARN(ZS_BAD_CERT_TYPE);
		p--; {goto st269;}
	}
	goto st0;
tr1876:
#line 847 "scanner_body.rl"
	{
		WARN(ZS_BAD_ADDRESS_CHAR);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr1899:
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr1918:
#line 422 "scanner_body.rl"
	{
		WARN(ZS_BAD_TIME_UNIT);
		p--; {goto st269;}
	}
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr2084:
#line 637 "scanner_body.rl"
	{
		s->long_string = false;
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr2107:
#line 1569 "scanner_body.rl"
	{
		WARN(ZS_BAD_LOC_DATA);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr2510:
#line 947 "scanner_body.rl"
	{
		WARN(ZS_BAD_APL);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr2525:
#line 847 "scanner_body.rl"
	{
		WARN(ZS_BAD_ADDRESS_CHAR);
		p--; {goto st269;}
	}
#line 947 "scanner_body.rl"
	{
		WARN(ZS_BAD_APL);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr2570:
#line 977 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_CHAR);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr2641:
#line 1254 "scanner_body.rl"
	{
		WARN(ZS_BAD_GATEWAY);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr2656:
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {goto st269;}
	}
#line 1254 "scanner_body.rl"
	{
		WARN(ZS_BAD_GATEWAY);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr2670:
#line 1254 "scanner_body.rl"
	{
		WARN(ZS_BAD_GATEWAY);
		p--; {goto st269;}
	}
#line 1258 "scanner_body.rl"
	{
		WARN(ZS_BAD_GATEWAY_KEY);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr2693:
#line 1258 "scanner_body.rl"
	{
		WARN(ZS_BAD_GATEWAY_KEY);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr2717:
#line 847 "scanner_body.rl"
	{
		WARN(ZS_BAD_ADDRESS_CHAR);
		p--; {goto st269;}
	}
#line 1254 "scanner_body.rl"
	{
		WARN(ZS_BAD_GATEWAY);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr2724:
#line 847 "scanner_body.rl"
	{
		WARN(ZS_BAD_ADDRESS_CHAR);
		p--; {goto st269;}
	}
#line 1254 "scanner_body.rl"
	{
		WARN(ZS_BAD_GATEWAY);
		p--; {goto st269;}
	}
#line 1258 "scanner_body.rl"
	{
		WARN(ZS_BAD_GATEWAY_KEY);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr2843:
#line 1276 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr2897:
#line 527 "scanner_body.rl"
	{
		WARN(ZS_BAD_TIMESTAMP_CHAR);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr3282:
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {goto st269;}
	}
#line 1276 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr3383:
#line 1124 "scanner_body.rl"
	{
		WARN(ZS_BAD_BASE32HEX_CHAR);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr3550:
#line 977 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_CHAR);
		p--; {goto st269;}
	}
#line 1645 "scanner_body.rl"
	{
		WARN(ZS_BAD_CHAR_COLON);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr3556:
#line 1645 "scanner_body.rl"
	{
		WARN(ZS_BAD_CHAR_COLON);
		p--; {goto st269;}
	}
#line 977 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_CHAR);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr3562:
#line 1618 "scanner_body.rl"
	{
		WARN(ZS_BAD_CHAR_DASH);
		p--; {goto st269;}
	}
#line 977 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_CHAR);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
	goto st0;
tr3661:
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {goto st269;}
	}
	goto st0;
tr3683:
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {goto st269;}
	}
	goto st0;
tr3704:
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {goto st269;}
	}
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {goto st269;}
	}
	goto st0;
tr3721:
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {goto st269;}
	}
#line 796 "scanner_body.rl"
	{
		ERR(ZS_BAD_DIRECTIVE);
		p--; {goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {goto st269;}
	}
	goto st0;
tr3744:
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {goto st269;}
	}
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {goto st269;}
	}
	goto st0;
#line 2989 "scanner.c"
st0:
cs = 0;
	goto _out;
tr2:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1;
tr3:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1;
tr3662:
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st1;
tr3664:
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st1;
tr3665:
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st1;
tr3731:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st1;
tr3732:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st1;
tr3722:
#line 793 "scanner_body.rl"
	{
		NOERR;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st1;
tr3724:
#line 793 "scanner_body.rl"
	{
		NOERR;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st1;
tr3725:
#line 793 "scanner_body.rl"
	{
		NOERR;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st1;
st1:
	if ( ++p == pe )
		goto _test_eof1;
case 1:
#line 3189 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1;
		case 32: goto st1;
		case 40: goto tr2;
		case 41: goto tr3;
		case 65: goto tr5;
		case 67: goto tr6;
		case 68: goto tr7;
		case 69: goto tr8;
		case 72: goto tr9;
		case 73: goto tr10;
		case 75: goto tr11;
		case 76: goto tr12;
		case 77: goto tr13;
		case 78: goto tr14;
		case 80: goto tr15;
		case 82: goto tr16;
		case 83: goto tr17;
		case 84: goto tr18;
		case 85: goto tr19;
		case 97: goto tr5;
		case 99: goto tr6;
		case 100: goto tr7;
		case 101: goto tr8;
		case 104: goto tr9;
		case 105: goto tr10;
		case 107: goto tr11;
		case 108: goto tr12;
		case 109: goto tr13;
		case 110: goto tr14;
		case 112: goto tr15;
		case 114: goto tr16;
		case 115: goto tr17;
		case 116: goto tr18;
		case 117: goto tr19;
		case 778: goto tr20;
		case 827: goto st152;
		case 1034: goto tr22;
		case 1083: goto st265;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr4;
	goto tr0;
tr4:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st2;
tr28:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st2;
st2:
	if ( ++p == pe )
		goto _test_eof2;
case 2:
#line 3289 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr25;
		case 32: goto tr25;
		case 40: goto tr26;
		case 41: goto tr27;
		case 68: goto tr29;
		case 72: goto tr30;
		case 77: goto tr31;
		case 83: goto st167;
		case 87: goto tr33;
		case 100: goto tr29;
		case 104: goto tr30;
		case 109: goto tr31;
		case 115: goto st167;
		case 119: goto tr33;
		case 1034: goto tr34;
		case 1083: goto tr35;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr28;
	goto tr24;
tr38:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st3;
tr39:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st3;
tr55:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st3;
tr25:
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st3;
tr26:
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st3;
tr27:
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st3;
tr34:
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st3;
tr727:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st3;
tr720:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st3;
tr721:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st3;
tr722:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st3;
tr724:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st3;
st3:
	if ( ++p == pe )
		goto _test_eof3;
case 3:
#line 3529 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st3;
		case 32: goto st3;
		case 40: goto tr38;
		case 41: goto tr39;
		case 65: goto tr40;
		case 67: goto tr41;
		case 68: goto tr42;
		case 69: goto tr43;
		case 72: goto tr44;
		case 73: goto tr45;
		case 75: goto tr46;
		case 76: goto tr47;
		case 77: goto tr48;
		case 78: goto tr49;
		case 80: goto tr50;
		case 82: goto tr51;
		case 83: goto tr52;
		case 84: goto tr53;
		case 85: goto tr54;
		case 97: goto tr40;
		case 99: goto tr41;
		case 100: goto tr42;
		case 101: goto tr43;
		case 104: goto tr44;
		case 105: goto tr45;
		case 107: goto tr46;
		case 108: goto tr47;
		case 109: goto tr48;
		case 110: goto tr49;
		case 112: goto tr50;
		case 114: goto tr51;
		case 115: goto tr52;
		case 116: goto tr53;
		case 117: goto tr54;
		case 1034: goto tr55;
		case 1083: goto st170;
	}
	goto tr36;
tr5:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st4;
tr40:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
	goto st4;
tr630:
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st4;
st4:
	if ( ++p == pe )
		goto _test_eof4;
case 4:
#line 3609 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr58;
		case 32: goto tr58;
		case 40: goto tr59;
		case 41: goto tr60;
		case 65: goto st231;
		case 70: goto st234;
		case 80: goto st238;
		case 97: goto st231;
		case 102: goto st234;
		case 112: goto st238;
		case 2058: goto tr64;
		case 2107: goto tr65;
		case 2314: goto tr66;
		case 2363: goto tr66;
		case 2570: goto tr67;
		case 2619: goto tr68;
	}
	goto tr57;
tr72:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr73:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr75:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr58:
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr59:
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr60:
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr64:
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr96:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr156:
#line 2041 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CAA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr157:
#line 2041 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CAA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr158:
#line 2041 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CAA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr159:
#line 2041 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CAA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr177:
#line 2032 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CDNSKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr178:
#line 2032 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CDNSKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr179:
#line 2032 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CDNSKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr180:
#line 2032 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CDNSKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr185:
#line 2031 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CDS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr186:
#line 2031 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CDS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr187:
#line 2031 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CDS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr188:
#line 2031 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CDS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr195:
#line 2018 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CERT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr196:
#line 2018 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CERT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr197:
#line 2018 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CERT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr198:
#line 2018 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CERT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr206:
#line 2002 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CNAME; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr207:
#line 2002 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CNAME; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr208:
#line 2002 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CNAME; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr209:
#line 2002 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CNAME; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr220:
#line 2027 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DHCID; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr221:
#line 2027 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DHCID; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr222:
#line 2027 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DHCID; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr223:
#line 2027 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DHCID; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr232:
#line 2019 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DNAME; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr233:
#line 2019 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DNAME; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr234:
#line 2019 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DNAME; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr235:
#line 2019 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DNAME; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr243:
#line 2026 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DNSKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr244:
#line 2026 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DNSKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr245:
#line 2026 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DNSKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr246:
#line 2026 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DNSKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr251:
#line 2021 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr252:
#line 2021 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr253:
#line 2021 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr254:
#line 2021 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr264:
#line 2038 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_EUI48; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr265:
#line 2038 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_EUI48; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr266:
#line 2038 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_EUI48; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr267:
#line 2038 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_EUI48; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr273:
#line 2039 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_EUI64; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr274:
#line 2039 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_EUI64; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr275:
#line 2039 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_EUI64; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr276:
#line 2039 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_EUI64; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr285:
#line 2005 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_HINFO; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr286:
#line 2005 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_HINFO; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr287:
#line 2005 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_HINFO; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr288:
#line 2005 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_HINFO; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr326:
#line 2023 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_IPSECKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr327:
#line 2023 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_IPSECKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr328:
#line 2023 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_IPSECKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr329:
#line 2023 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_IPSECKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr337:
#line 2012 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_KEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr338:
#line 2012 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_KEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr339:
#line 2012 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_KEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr340:
#line 2012 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_KEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr345:
#line 2017 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_KX; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr346:
#line 2017 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_KX; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr347:
#line 2017 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_KX; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr348:
#line 2017 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_KX; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr359:
#line 2035 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_L32; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr360:
#line 2035 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_L32; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr361:
#line 2035 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_L32; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr362:
#line 2035 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_L32; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr368:
#line 2036 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_L64; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr369:
#line 2036 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_L64; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr370:
#line 2036 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_L64; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr371:
#line 2036 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_L64; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr376:
#line 2042 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LB; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr377:
#line 2042 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LB; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr378:
#line 2042 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LB; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr379:
#line 2042 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LB; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr385:
#line 2014 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LOC; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr386:
#line 2014 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LOC; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr387:
#line 2014 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LOC; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr388:
#line 2014 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LOC; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr393:
#line 2037 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr394:
#line 2037 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr395:
#line 2037 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr396:
#line 2037 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr406:
#line 2006 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_MINFO; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr407:
#line 2006 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_MINFO; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr408:
#line 2006 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_MINFO; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr409:
#line 2006 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_MINFO; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr414:
#line 2007 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_MX; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr415:
#line 2007 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_MX; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr416:
#line 2007 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_MX; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr417:
#line 2007 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_MX; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr428:
#line 2016 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NAPTR; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr429:
#line 2016 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NAPTR; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr430:
#line 2016 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NAPTR; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr431:
#line 2016 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NAPTR; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr437:
#line 2034 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NID; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr438:
#line 2034 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NID; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr439:
#line 2034 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NID; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr440:
#line 2034 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NID; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr445:
#line 2001 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr446:
#line 2001 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr447:
#line 2001 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr449:
#line 2001 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr455:
#line 2025 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr456:
#line 2025 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr457:
#line 2025 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr459:
#line 2025 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr464:
#line 2028 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC3; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr465:
#line 2028 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC3; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr466:
#line 2028 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC3; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr468:
#line 2028 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC3; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr477:
#line 2029 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC3PARAM; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr478:
#line 2029 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC3PARAM; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr479:
#line 2029 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC3PARAM; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr480:
#line 2029 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC3PARAM; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr487:
#line 2004 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_PTR; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr488:
#line 2004 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_PTR; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr489:
#line 2004 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_PTR; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr490:
#line 2004 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_PTR; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr498:
#line 2009 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr499:
#line 2009 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr500:
#line 2009 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr501:
#line 2009 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr509:
#line 2024 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RRSIG; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr510:
#line 2024 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RRSIG; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr511:
#line 2024 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RRSIG; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr512:
#line 2024 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RRSIG; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr517:
#line 2011 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr518:
#line 2011 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr519:
#line 2011 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr520:
#line 2011 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr530:
#line 2003 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SOA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr531:
#line 2003 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SOA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr532:
#line 2003 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SOA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr533:
#line 2003 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SOA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr539:
#line 2033 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SPF; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr540:
#line 2033 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SPF; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr541:
#line 2033 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SPF; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr542:
#line 2033 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SPF; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr548:
#line 2015 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SRV; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr549:
#line 2015 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SRV; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr550:
#line 2015 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SRV; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr551:
#line 2015 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SRV; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr559:
#line 2022 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SSHFP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr560:
#line 2022 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SSHFP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr561:
#line 2022 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SSHFP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr562:
#line 2022 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SSHFP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr572:
#line 2030 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_TLSA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr573:
#line 2030 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_TLSA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr574:
#line 2030 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_TLSA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr575:
#line 2030 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_TLSA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr581:
#line 2008 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_TXT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr582:
#line 2008 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_TXT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr583:
#line 2008 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_TXT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr584:
#line 2008 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_TXT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr594:
#line 396 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_type = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr595:
#line 396 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_type = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr596:
#line 396 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_type = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr598:
#line 396 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_type = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr605:
#line 2040 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_URI; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr606:
#line 2040 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_URI; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr607:
#line 2040 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_URI; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr608:
#line 2040 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_URI; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr850:
#line 2013 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_AAAA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr851:
#line 2013 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_AAAA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr852:
#line 2013 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_AAAA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr853:
#line 2013 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_AAAA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr861:
#line 2010 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_AFSDB; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr862:
#line 2010 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_AFSDB; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr863:
#line 2010 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_AFSDB; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr864:
#line 2010 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_AFSDB; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
tr870:
#line 2020 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_APL; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st5;
tr871:
#line 2020 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_APL; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st5;
tr872:
#line 2020 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_APL; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st5;
tr873:
#line 2020 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_APL; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st5;
st5:
	if ( ++p == pe )
		goto _test_eof5;
case 5:
#line 6005 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st5;
		case 32: goto st5;
		case 40: goto tr72;
		case 41: goto tr73;
		case 92: goto tr74;
		case 2058: goto tr75;
		case 2107: goto st10;
		case 2314: goto tr69;
		case 2363: goto tr69;
		case 2570: goto tr77;
		case 2619: goto tr78;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr69;
	} else if ( _widec > 58 ) {
		if ( 60 <= _widec )
			goto tr69;
	} else
		goto tr69;
	goto tr71;
tr66:
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr69:
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr93:
#line 1978 "scanner_body.rl"
	{
		if (*wrap == WRAP_NONE) {
			p--;
		}
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr94:
#line 1919 "scanner_body.rl"
	{
		switch (s->r_type) {
		// Next types must not have empty rdata.
		case KNOT_RRTYPE_A:
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
		case KNOT_RRTYPE_SOA:
		case KNOT_RRTYPE_HINFO:
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
		case KNOT_RRTYPE_RP:
		case KNOT_RRTYPE_AAAA:
		case KNOT_RRTYPE_LOC:
		case KNOT_RRTYPE_SRV:
		case KNOT_RRTYPE_NAPTR:
		case KNOT_RRTYPE_CERT:
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_SSHFP:
		case KNOT_RRTYPE_IPSECKEY:
		case KNOT_RRTYPE_RRSIG:
		case KNOT_RRTYPE_NSEC:
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_DHCID:
		case KNOT_RRTYPE_NSEC3:
		case KNOT_RRTYPE_NSEC3PARAM:
		case KNOT_RRTYPE_TLSA:
		case KNOT_RRTYPE_CDS:
		case KNOT_RRTYPE_CDNSKEY:
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L32:
		case KNOT_RRTYPE_L64:
		case KNOT_RRTYPE_LP:
		case KNOT_RRTYPE_EUI48:
		case KNOT_RRTYPE_EUI64:
		case KNOT_RRTYPE_URI:
		case KNOT_RRTYPE_CAA:
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st470;}
		// Next types can have empty rdata.
		case KNOT_RRTYPE_APL:
		default:
			{stack[top++] = 6;goto st479;}
		}
	}
	goto st6;
tr161:
#line 2041 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CAA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr182:
#line 2032 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CDNSKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr190:
#line 2031 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CDS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr200:
#line 2018 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CERT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr211:
#line 2002 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CNAME; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr225:
#line 2027 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DHCID; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr237:
#line 2019 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DNAME; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr248:
#line 2026 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DNSKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr256:
#line 2021 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr269:
#line 2038 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_EUI48; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr278:
#line 2039 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_EUI64; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr290:
#line 2005 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_HINFO; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr331:
#line 2023 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_IPSECKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr342:
#line 2012 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_KEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr350:
#line 2017 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_KX; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr364:
#line 2035 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_L32; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr373:
#line 2036 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_L64; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr381:
#line 2042 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LB; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr390:
#line 2014 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LOC; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr398:
#line 2037 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr411:
#line 2006 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_MINFO; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr419:
#line 2007 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_MX; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr433:
#line 2016 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NAPTR; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr442:
#line 2034 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NID; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr451:
#line 2001 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr461:
#line 2025 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr470:
#line 2028 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC3; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr482:
#line 2029 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC3PARAM; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr492:
#line 2004 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_PTR; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr503:
#line 2009 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr514:
#line 2024 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RRSIG; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr522:
#line 2011 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr535:
#line 2003 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SOA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr544:
#line 2033 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SPF; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr553:
#line 2015 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SRV; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr564:
#line 2022 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SSHFP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr577:
#line 2030 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_TLSA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr586:
#line 2008 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_TXT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr600:
#line 396 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_type = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr610:
#line 2040 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_URI; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr855:
#line 2013 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_AAAA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr866:
#line 2010 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_AFSDB; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
tr875:
#line 2020 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_APL; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 6;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 6;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 6;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 6;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 6;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 6;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 6;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 6;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 6;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 6;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 6;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 6;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 6;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 6;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 6;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 6;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 6;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 6;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 6;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 6;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 6;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 6;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 6;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 6;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 6;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 6;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 6;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 6;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 6;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 6;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st6;
st6:
	if ( ++p == pe )
		goto _test_eof6;
case 6:
#line 10248 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr80;
		case 32: goto tr80;
		case 40: goto tr81;
		case 41: goto tr82;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr83;
		case 1083: goto tr84;
	}
	goto tr79;
tr87:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st7;
tr88:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st7;
tr80:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st7;
tr81:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st7;
tr82:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st7;
st7:
	if ( ++p == pe )
		goto _test_eof7;
case 7:
#line 10335 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st7;
		case 32: goto st7;
		case 40: goto tr87;
		case 41: goto tr88;
		case 778: goto tr89;
		case 827: goto st8;
		case 1034: goto tr89;
		case 1083: goto st8;
	}
	goto tr85;
tr84:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st8;
tr91:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st8;
tr769:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st8;
st8:
	if ( ++p == pe )
		goto _test_eof8;
case 8:
#line 10393 "scanner.c"
	if ( (*p) == 10 )
		goto tr92;
	goto tr91;
tr74:
#line 1973 "scanner_body.rl"
	{
		if (pe - p == 1) {
			*wrap = WRAP_DETECTED;
		}
	}
	goto st9;
st9:
	if ( ++p == pe )
		goto _test_eof9;
case 9:
#line 10409 "scanner.c"
	if ( (*p) == 35 )
		goto tr94;
	goto tr93;
tr65:
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr95:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st10;
tr160:
#line 2041 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CAA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr181:
#line 2032 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CDNSKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr189:
#line 2031 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CDS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr199:
#line 2018 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CERT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr210:
#line 2002 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CNAME; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr224:
#line 2027 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DHCID; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr236:
#line 2019 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DNAME; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr247:
#line 2026 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DNSKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr255:
#line 2021 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr268:
#line 2038 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_EUI48; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr277:
#line 2039 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_EUI64; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr289:
#line 2005 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_HINFO; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr330:
#line 2023 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_IPSECKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr341:
#line 2012 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_KEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr349:
#line 2017 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_KX; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr363:
#line 2035 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_L32; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr372:
#line 2036 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_L64; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr380:
#line 2042 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LB; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr389:
#line 2014 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LOC; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr397:
#line 2037 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr410:
#line 2006 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_MINFO; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr418:
#line 2007 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_MX; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr432:
#line 2016 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NAPTR; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr441:
#line 2034 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NID; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr450:
#line 2001 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr460:
#line 2025 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr469:
#line 2028 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC3; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr481:
#line 2029 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC3PARAM; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr491:
#line 2004 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_PTR; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr502:
#line 2009 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr513:
#line 2024 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RRSIG; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr521:
#line 2011 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr534:
#line 2003 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SOA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr543:
#line 2033 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SPF; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr552:
#line 2015 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SRV; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr563:
#line 2022 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SSHFP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr576:
#line 2030 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_TLSA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr585:
#line 2008 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_TXT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr599:
#line 396 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_type = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr609:
#line 2040 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_URI; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr854:
#line 2013 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_AAAA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr865:
#line 2010 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_AFSDB; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
tr874:
#line 2020 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_APL; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st10;
st10:
	if ( ++p == pe )
		goto _test_eof10;
case 10:
#line 10784 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr96;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr95;
	goto tr71;
tr67:
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr77:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr162:
#line 2041 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CAA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr183:
#line 2032 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CDNSKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr191:
#line 2031 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CDS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr201:
#line 2018 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CERT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr212:
#line 2002 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CNAME; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr226:
#line 2027 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DHCID; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr238:
#line 2019 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DNAME; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr249:
#line 2026 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DNSKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr257:
#line 2021 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr270:
#line 2038 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_EUI48; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr279:
#line 2039 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_EUI64; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr291:
#line 2005 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_HINFO; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr332:
#line 2023 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_IPSECKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr343:
#line 2012 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_KEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr351:
#line 2017 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_KX; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr365:
#line 2035 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_L32; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr374:
#line 2036 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_L64; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr382:
#line 2042 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LB; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr391:
#line 2014 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LOC; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr399:
#line 2037 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr412:
#line 2006 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_MINFO; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr420:
#line 2007 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_MX; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr434:
#line 2016 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NAPTR; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr443:
#line 2034 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NID; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr452:
#line 2001 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr462:
#line 2025 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr471:
#line 2028 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC3; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr483:
#line 2029 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC3PARAM; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr493:
#line 2004 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_PTR; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr504:
#line 2009 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr515:
#line 2024 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RRSIG; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr523:
#line 2011 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr536:
#line 2003 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SOA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr545:
#line 2033 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SPF; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr554:
#line 2015 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SRV; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr565:
#line 2022 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SSHFP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr578:
#line 2030 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_TLSA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr587:
#line 2008 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_TXT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr601:
#line 396 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_type = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr611:
#line 2040 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_URI; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr856:
#line 2013 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_AAAA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr867:
#line 2010 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_AFSDB; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
tr876:
#line 2020 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_APL; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 11;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 11;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 11;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 11;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 11;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 11;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 11;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 11;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 11;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 11;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 11;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 11;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 11;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 11;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 11;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 11;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 11;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 11;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 11;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 11;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 11;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 11;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 11;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 11;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 11;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 11;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 11;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 11;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 11;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 11;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st11;
st11:
	if ( ++p == pe )
		goto _test_eof11;
case 11:
#line 15046 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr97;
		case 32: goto tr97;
		case 40: goto tr98;
		case 41: goto tr99;
		case 92: goto tr74;
		case 1802: goto tr83;
		case 1851: goto tr84;
		case 2058: goto tr83;
		case 2107: goto tr100;
		case 2314: goto tr101;
		case 2363: goto tr102;
		case 2570: goto tr83;
		case 2619: goto tr103;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr69;
	} else if ( _widec > 58 ) {
		if ( 60 <= _widec )
			goto tr69;
	} else
		goto tr69;
	goto tr79;
tr105:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st12;
tr106:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st12;
tr97:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st12;
tr98:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st12;
tr99:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st12;
st12:
	if ( ++p == pe )
		goto _test_eof12;
case 12:
#line 15152 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st12;
		case 32: goto st12;
		case 40: goto tr105;
		case 41: goto tr106;
		case 92: goto tr74;
		case 1802: goto tr89;
		case 1851: goto st8;
		case 2058: goto tr89;
		case 2107: goto st13;
		case 2314: goto tr108;
		case 2363: goto tr109;
		case 2570: goto tr89;
		case 2619: goto tr110;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr69;
	} else if ( _widec > 58 ) {
		if ( 60 <= _widec )
			goto tr69;
	} else
		goto tr69;
	goto tr79;
tr100:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st13;
tr111:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st13;
tr167:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st13;
tr748:
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st13;
st13:
	if ( ++p == pe )
		goto _test_eof13;
case 13:
#line 15242 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 778: goto tr92;
		case 1034: goto tr112;
	}
	if ( _widec > 895 ) {
		if ( 896 <= _widec && _widec <= 1151 )
			goto tr111;
	} else if ( _widec >= 640 )
		goto tr91;
	goto tr79;
tr112:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1139; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1139; goto _out;}
		}
	}
	goto st1139;
tr756:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1139; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1139; goto _out;}
		}
	}
	goto st1139;
tr747:
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1139; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1139; goto _out;}
		}
	}
	goto st1139;
st1139:
	if ( ++p == pe )
		goto _test_eof1139;
case 1139:
#line 15386 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr3671;
		case 32: goto tr3671;
		case 36: goto tr3672;
		case 40: goto tr3673;
		case 41: goto tr3674;
		case 42: goto tr3675;
		case 58: goto tr69;
		case 92: goto tr3676;
		case 95: goto tr3675;
		case 1802: goto tr3667;
		case 1851: goto tr3668;
		case 2058: goto tr3677;
		case 2107: goto tr3678;
		case 2314: goto tr3679;
		case 2363: goto tr3680;
		case 2570: goto tr3681;
		case 2619: goto tr3682;
	}
	if ( _widec < 60 ) {
		if ( _widec < 11 ) {
			if ( _widec <= 8 )
				goto tr69;
		} else if ( _widec > 44 ) {
			if ( 45 <= _widec && _widec <= 57 )
				goto tr3675;
		} else
			goto tr69;
	} else if ( _widec > 63 ) {
		if ( _widec < 91 ) {
			if ( 64 <= _widec && _widec <= 90 )
				goto tr3675;
		} else if ( _widec > 96 ) {
			if ( _widec > 122 ) {
				if ( 123 <= _widec )
					goto tr69;
			} else if ( _widec >= 97 )
				goto tr3675;
		} else
			goto tr69;
	} else
		goto tr69;
	goto tr790;
tr115:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st14;
tr116:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st14;
tr3671:
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st14;
tr3673:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st14;
tr3674:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st14;
st14:
	if ( ++p == pe )
		goto _test_eof14;
case 14:
#line 15532 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st14;
		case 32: goto st14;
		case 40: goto tr115;
		case 41: goto tr116;
		case 58: goto tr69;
		case 65: goto tr118;
		case 67: goto tr119;
		case 68: goto tr120;
		case 69: goto tr121;
		case 72: goto tr122;
		case 73: goto tr123;
		case 75: goto tr124;
		case 76: goto tr125;
		case 77: goto tr126;
		case 78: goto tr127;
		case 80: goto tr128;
		case 82: goto tr129;
		case 83: goto tr130;
		case 84: goto tr131;
		case 85: goto tr132;
		case 92: goto tr74;
		case 97: goto tr118;
		case 99: goto tr119;
		case 100: goto tr120;
		case 101: goto tr121;
		case 104: goto tr122;
		case 105: goto tr123;
		case 107: goto tr124;
		case 108: goto tr125;
		case 109: goto tr126;
		case 110: goto tr127;
		case 112: goto tr128;
		case 114: goto tr129;
		case 115: goto tr130;
		case 116: goto tr131;
		case 117: goto tr132;
		case 1802: goto tr20;
		case 1851: goto st152;
		case 2058: goto tr133;
		case 2107: goto st240;
		case 2314: goto tr135;
		case 2363: goto tr136;
		case 2570: goto tr137;
		case 2619: goto tr138;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr69;
	} else if ( _widec > 47 ) {
		if ( _widec > 57 ) {
			if ( 60 <= _widec )
				goto tr69;
		} else if ( _widec >= 48 )
			goto tr117;
	} else
		goto tr69;
	goto tr114;
tr117:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 15;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 15;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 15;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 15;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 15;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 15;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 15;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 15;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 15;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 15;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 15;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 15;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 15;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 15;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 15;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 15;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 15;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 15;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 15;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 15;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 15;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 15;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 15;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 15;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 15;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 15;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 15;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 15;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 15;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 15;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st15;
st15:
	if ( ++p == pe )
		goto _test_eof15;
case 15:
#line 15718 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr140;
		case 32: goto tr140;
		case 40: goto tr141;
		case 41: goto tr142;
		case 68: goto tr29;
		case 72: goto tr30;
		case 77: goto tr31;
		case 83: goto st167;
		case 87: goto tr33;
		case 100: goto tr29;
		case 104: goto tr30;
		case 109: goto tr31;
		case 115: goto st167;
		case 119: goto tr33;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr143;
		case 1083: goto tr144;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr28;
	goto tr139;
tr147:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st16;
tr148:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st16;
tr140:
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st16;
tr141:
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st16;
tr142:
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st16;
st16:
	if ( ++p == pe )
		goto _test_eof16;
case 16:
#line 15844 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st16;
		case 32: goto st16;
		case 40: goto tr147;
		case 41: goto tr148;
		case 65: goto tr40;
		case 67: goto tr41;
		case 68: goto tr42;
		case 69: goto tr43;
		case 72: goto tr44;
		case 73: goto tr45;
		case 75: goto tr46;
		case 76: goto tr47;
		case 77: goto tr48;
		case 78: goto tr49;
		case 80: goto tr50;
		case 82: goto tr51;
		case 83: goto tr52;
		case 84: goto tr53;
		case 85: goto tr54;
		case 97: goto tr40;
		case 99: goto tr41;
		case 100: goto tr42;
		case 101: goto tr43;
		case 104: goto tr44;
		case 105: goto tr45;
		case 107: goto tr46;
		case 108: goto tr47;
		case 109: goto tr48;
		case 110: goto tr49;
		case 112: goto tr50;
		case 114: goto tr51;
		case 115: goto tr52;
		case 116: goto tr53;
		case 117: goto tr54;
		case 778: goto tr89;
		case 827: goto st8;
		case 1034: goto tr149;
		case 1083: goto st268;
	}
	goto tr145;
tr6:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st17;
tr41:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
	goto st17;
tr631:
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st17;
st17:
	if ( ++p == pe )
		goto _test_eof17;
case 17:
#line 15926 "scanner.c"
	switch( (*p) ) {
		case 65: goto st18;
		case 68: goto st22;
		case 69: goto st29;
		case 78: goto st32;
		case 97: goto st18;
		case 100: goto st22;
		case 101: goto st29;
		case 110: goto st32;
	}
	goto tr36;
st18:
	if ( ++p == pe )
		goto _test_eof18;
case 18:
	switch( (*p) ) {
		case 65: goto st19;
		case 97: goto st19;
	}
	goto tr36;
st19:
	if ( ++p == pe )
		goto _test_eof19;
case 19:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr156;
		case 32: goto tr156;
		case 40: goto tr157;
		case 41: goto tr158;
		case 2058: goto tr159;
		case 2107: goto tr160;
		case 2314: goto tr161;
		case 2363: goto tr161;
		case 2570: goto tr162;
		case 2619: goto tr163;
	}
	goto tr57;
tr68:
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr78:
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr163:
#line 2041 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CAA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr184:
#line 2032 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CDNSKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr192:
#line 2031 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CDS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr202:
#line 2018 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CERT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr213:
#line 2002 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_CNAME; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr227:
#line 2027 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DHCID; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr239:
#line 2019 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DNAME; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr250:
#line 2026 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DNSKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr258:
#line 2021 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_DS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr271:
#line 2038 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_EUI48; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr280:
#line 2039 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_EUI64; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr292:
#line 2005 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_HINFO; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr333:
#line 2023 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_IPSECKEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr344:
#line 2012 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_KEY; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr352:
#line 2017 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_KX; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr366:
#line 2035 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_L32; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr375:
#line 2036 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_L64; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr383:
#line 2042 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LB; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr392:
#line 2014 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LOC; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr400:
#line 2037 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_LP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr413:
#line 2006 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_MINFO; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr421:
#line 2007 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_MX; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr435:
#line 2016 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NAPTR; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr444:
#line 2034 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NID; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr453:
#line 2001 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NS; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr463:
#line 2025 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr472:
#line 2028 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC3; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr484:
#line 2029 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_NSEC3PARAM; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr494:
#line 2004 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_PTR; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr505:
#line 2009 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr516:
#line 2024 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RRSIG; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr524:
#line 2011 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_RT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr537:
#line 2003 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SOA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr546:
#line 2033 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SPF; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr555:
#line 2015 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SRV; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr566:
#line 2022 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_SSHFP; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr579:
#line 2030 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_TLSA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr588:
#line 2008 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_TXT; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr602:
#line 396 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_type = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr612:
#line 2040 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_URI; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr857:
#line 2013 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_AAAA; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr868:
#line 2010 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_AFSDB; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
tr877:
#line 2020 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_APL; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 20;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 20;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 20;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 20;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 20;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 20;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 20;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 20;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 20;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 20;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 20;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 20;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 20;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 20;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 20;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 20;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 20;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 20;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 20;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 20;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 20;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 20;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 20;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 20;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 20;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 20;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 20;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 20;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 20;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 20;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st20;
st20:
	if ( ++p == pe )
		goto _test_eof20;
case 20:
#line 20039 "scanner.c"
	_widec = (*p);
	if ( (*p) < 11 ) {
		if ( (*p) > 9 ) {
			if ( 10 <= (*p) && (*p) <= 10 ) {
				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 58 ) {
		if ( (*p) > 59 ) {
			if ( 60 <= (*p) )
 {				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else if ( (*p) >= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 777: goto tr80;
		case 778: goto tr83;
		case 800: goto tr80;
		case 808: goto tr81;
		case 809: goto tr82;
		case 827: goto tr84;
		case 1033: goto tr164;
		case 1034: goto tr83;
		case 1056: goto tr164;
		case 1064: goto tr165;
		case 1065: goto tr166;
		case 1083: goto tr167;
	}
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr95;
	goto tr79;
tr168:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st21;
tr164:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st21;
tr165:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st21;
tr166:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st21;
tr169:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st21;
tr170:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st21;
st21:
	if ( ++p == pe )
		goto _test_eof21;
case 21:
#line 20191 "scanner.c"
	_widec = (*p);
	if ( (*p) < 11 ) {
		if ( (*p) > 9 ) {
			if ( 10 <= (*p) && (*p) <= 10 ) {
				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 58 ) {
		if ( (*p) > 59 ) {
			if ( 60 <= (*p) )
 {				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else if ( (*p) >= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 777: goto st7;
		case 778: goto tr89;
		case 800: goto st7;
		case 808: goto tr87;
		case 809: goto tr88;
		case 827: goto st8;
		case 1033: goto tr168;
		case 1034: goto tr89;
		case 1056: goto tr168;
		case 1064: goto tr169;
		case 1065: goto tr170;
		case 1083: goto tr111;
	}
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr95;
	goto tr79;
st22:
	if ( ++p == pe )
		goto _test_eof22;
case 22:
	switch( (*p) ) {
		case 78: goto st23;
		case 83: goto st28;
		case 110: goto st23;
		case 115: goto st28;
	}
	goto tr36;
st23:
	if ( ++p == pe )
		goto _test_eof23;
case 23:
	switch( (*p) ) {
		case 83: goto st24;
		case 115: goto st24;
	}
	goto tr36;
st24:
	if ( ++p == pe )
		goto _test_eof24;
case 24:
	switch( (*p) ) {
		case 75: goto st25;
		case 107: goto st25;
	}
	goto tr36;
st25:
	if ( ++p == pe )
		goto _test_eof25;
case 25:
	switch( (*p) ) {
		case 69: goto st26;
		case 101: goto st26;
	}
	goto tr36;
st26:
	if ( ++p == pe )
		goto _test_eof26;
case 26:
	switch( (*p) ) {
		case 89: goto st27;
		case 121: goto st27;
	}
	goto tr36;
st27:
	if ( ++p == pe )
		goto _test_eof27;
case 27:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr177;
		case 32: goto tr177;
		case 40: goto tr178;
		case 41: goto tr179;
		case 2058: goto tr180;
		case 2107: goto tr181;
		case 2314: goto tr182;
		case 2363: goto tr182;
		case 2570: goto tr183;
		case 2619: goto tr184;
	}
	goto tr57;
st28:
	if ( ++p == pe )
		goto _test_eof28;
case 28:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr185;
		case 32: goto tr185;
		case 40: goto tr186;
		case 41: goto tr187;
		case 2058: goto tr188;
		case 2107: goto tr189;
		case 2314: goto tr190;
		case 2363: goto tr190;
		case 2570: goto tr191;
		case 2619: goto tr192;
	}
	goto tr57;
st29:
	if ( ++p == pe )
		goto _test_eof29;
case 29:
	switch( (*p) ) {
		case 82: goto st30;
		case 114: goto st30;
	}
	goto tr36;
st30:
	if ( ++p == pe )
		goto _test_eof30;
case 30:
	switch( (*p) ) {
		case 84: goto st31;
		case 116: goto st31;
	}
	goto tr36;
st31:
	if ( ++p == pe )
		goto _test_eof31;
case 31:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr195;
		case 32: goto tr195;
		case 40: goto tr196;
		case 41: goto tr197;
		case 2058: goto tr198;
		case 2107: goto tr199;
		case 2314: goto tr200;
		case 2363: goto tr200;
		case 2570: goto tr201;
		case 2619: goto tr202;
	}
	goto tr57;
st32:
	if ( ++p == pe )
		goto _test_eof32;
case 32:
	switch( (*p) ) {
		case 65: goto st33;
		case 97: goto st33;
	}
	goto tr36;
st33:
	if ( ++p == pe )
		goto _test_eof33;
case 33:
	switch( (*p) ) {
		case 77: goto st34;
		case 109: goto st34;
	}
	goto tr36;
st34:
	if ( ++p == pe )
		goto _test_eof34;
case 34:
	switch( (*p) ) {
		case 69: goto st35;
		case 101: goto st35;
	}
	goto tr36;
st35:
	if ( ++p == pe )
		goto _test_eof35;
case 35:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr206;
		case 32: goto tr206;
		case 40: goto tr207;
		case 41: goto tr208;
		case 2058: goto tr209;
		case 2107: goto tr210;
		case 2314: goto tr211;
		case 2363: goto tr211;
		case 2570: goto tr212;
		case 2619: goto tr213;
	}
	goto tr57;
tr7:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st36;
tr42:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
	goto st36;
tr632:
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st36;
st36:
	if ( ++p == pe )
		goto _test_eof36;
case 36:
#line 20510 "scanner.c"
	switch( (*p) ) {
		case 72: goto st37;
		case 78: goto st41;
		case 83: goto st49;
		case 104: goto st37;
		case 110: goto st41;
		case 115: goto st49;
	}
	goto tr36;
st37:
	if ( ++p == pe )
		goto _test_eof37;
case 37:
	switch( (*p) ) {
		case 67: goto st38;
		case 99: goto st38;
	}
	goto tr36;
st38:
	if ( ++p == pe )
		goto _test_eof38;
case 38:
	switch( (*p) ) {
		case 73: goto st39;
		case 105: goto st39;
	}
	goto tr36;
st39:
	if ( ++p == pe )
		goto _test_eof39;
case 39:
	switch( (*p) ) {
		case 68: goto st40;
		case 100: goto st40;
	}
	goto tr36;
st40:
	if ( ++p == pe )
		goto _test_eof40;
case 40:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr220;
		case 32: goto tr220;
		case 40: goto tr221;
		case 41: goto tr222;
		case 2058: goto tr223;
		case 2107: goto tr224;
		case 2314: goto tr225;
		case 2363: goto tr225;
		case 2570: goto tr226;
		case 2619: goto tr227;
	}
	goto tr57;
st41:
	if ( ++p == pe )
		goto _test_eof41;
case 41:
	switch( (*p) ) {
		case 65: goto st42;
		case 83: goto st45;
		case 97: goto st42;
		case 115: goto st45;
	}
	goto tr36;
st42:
	if ( ++p == pe )
		goto _test_eof42;
case 42:
	switch( (*p) ) {
		case 77: goto st43;
		case 109: goto st43;
	}
	goto tr36;
st43:
	if ( ++p == pe )
		goto _test_eof43;
case 43:
	switch( (*p) ) {
		case 69: goto st44;
		case 101: goto st44;
	}
	goto tr36;
st44:
	if ( ++p == pe )
		goto _test_eof44;
case 44:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr232;
		case 32: goto tr232;
		case 40: goto tr233;
		case 41: goto tr234;
		case 2058: goto tr235;
		case 2107: goto tr236;
		case 2314: goto tr237;
		case 2363: goto tr237;
		case 2570: goto tr238;
		case 2619: goto tr239;
	}
	goto tr57;
st45:
	if ( ++p == pe )
		goto _test_eof45;
case 45:
	switch( (*p) ) {
		case 75: goto st46;
		case 107: goto st46;
	}
	goto tr36;
st46:
	if ( ++p == pe )
		goto _test_eof46;
case 46:
	switch( (*p) ) {
		case 69: goto st47;
		case 101: goto st47;
	}
	goto tr36;
st47:
	if ( ++p == pe )
		goto _test_eof47;
case 47:
	switch( (*p) ) {
		case 89: goto st48;
		case 121: goto st48;
	}
	goto tr36;
st48:
	if ( ++p == pe )
		goto _test_eof48;
case 48:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr243;
		case 32: goto tr243;
		case 40: goto tr244;
		case 41: goto tr245;
		case 2058: goto tr246;
		case 2107: goto tr247;
		case 2314: goto tr248;
		case 2363: goto tr248;
		case 2570: goto tr249;
		case 2619: goto tr250;
	}
	goto tr57;
st49:
	if ( ++p == pe )
		goto _test_eof49;
case 49:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr251;
		case 32: goto tr251;
		case 40: goto tr252;
		case 41: goto tr253;
		case 2058: goto tr254;
		case 2107: goto tr255;
		case 2314: goto tr256;
		case 2363: goto tr256;
		case 2570: goto tr257;
		case 2619: goto tr258;
	}
	goto tr57;
tr8:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st50;
tr43:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
	goto st50;
tr633:
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st50;
st50:
	if ( ++p == pe )
		goto _test_eof50;
case 50:
#line 20777 "scanner.c"
	switch( (*p) ) {
		case 85: goto st51;
		case 117: goto st51;
	}
	goto tr36;
st51:
	if ( ++p == pe )
		goto _test_eof51;
case 51:
	switch( (*p) ) {
		case 73: goto st52;
		case 105: goto st52;
	}
	goto tr36;
st52:
	if ( ++p == pe )
		goto _test_eof52;
case 52:
	switch( (*p) ) {
		case 52: goto st53;
		case 54: goto st55;
	}
	goto tr36;
st53:
	if ( ++p == pe )
		goto _test_eof53;
case 53:
	if ( (*p) == 56 )
		goto st54;
	goto tr36;
st54:
	if ( ++p == pe )
		goto _test_eof54;
case 54:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr264;
		case 32: goto tr264;
		case 40: goto tr265;
		case 41: goto tr266;
		case 2058: goto tr267;
		case 2107: goto tr268;
		case 2314: goto tr269;
		case 2363: goto tr269;
		case 2570: goto tr270;
		case 2619: goto tr271;
	}
	goto tr57;
st55:
	if ( ++p == pe )
		goto _test_eof55;
case 55:
	if ( (*p) == 52 )
		goto st56;
	goto tr36;
st56:
	if ( ++p == pe )
		goto _test_eof56;
case 56:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr273;
		case 32: goto tr273;
		case 40: goto tr274;
		case 41: goto tr275;
		case 2058: goto tr276;
		case 2107: goto tr277;
		case 2314: goto tr278;
		case 2363: goto tr278;
		case 2570: goto tr279;
		case 2619: goto tr280;
	}
	goto tr57;
tr9:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st57;
tr44:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
	goto st57;
tr634:
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st57;
st57:
	if ( ++p == pe )
		goto _test_eof57;
case 57:
#line 20915 "scanner.c"
	switch( (*p) ) {
		case 73: goto st58;
		case 105: goto st58;
	}
	goto tr36;
st58:
	if ( ++p == pe )
		goto _test_eof58;
case 58:
	switch( (*p) ) {
		case 78: goto st59;
		case 110: goto st59;
	}
	goto tr36;
st59:
	if ( ++p == pe )
		goto _test_eof59;
case 59:
	switch( (*p) ) {
		case 70: goto st60;
		case 102: goto st60;
	}
	goto tr36;
st60:
	if ( ++p == pe )
		goto _test_eof60;
case 60:
	switch( (*p) ) {
		case 79: goto st61;
		case 111: goto st61;
	}
	goto tr36;
st61:
	if ( ++p == pe )
		goto _test_eof61;
case 61:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr285;
		case 32: goto tr285;
		case 40: goto tr286;
		case 41: goto tr287;
		case 2058: goto tr288;
		case 2107: goto tr289;
		case 2314: goto tr290;
		case 2363: goto tr290;
		case 2570: goto tr291;
		case 2619: goto tr292;
	}
	goto tr57;
tr45:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
	goto st62;
st62:
	if ( ++p == pe )
		goto _test_eof62;
case 62:
#line 20995 "scanner.c"
	switch( (*p) ) {
		case 78: goto st63;
		case 80: goto st66;
		case 110: goto st63;
		case 112: goto st66;
	}
	goto tr36;
st63:
	if ( ++p == pe )
		goto _test_eof63;
case 63:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr295;
		case 32: goto tr295;
		case 40: goto tr296;
		case 41: goto tr297;
		case 1034: goto tr298;
		case 1083: goto tr299;
	}
	goto tr36;
tr301:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st64;
tr302:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st64;
tr318:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st64;
tr647:
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st64;
tr648:
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st64;
tr649:
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st64;
tr656:
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st64;
tr614:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st64;
tr295:
#line 816 "scanner_body.rl"
	{
		s->r_class = KNOT_CLASS_IN;
	}
	goto st64;
tr296:
#line 816 "scanner_body.rl"
	{
		s->r_class = KNOT_CLASS_IN;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st64;
tr297:
#line 816 "scanner_body.rl"
	{
		s->r_class = KNOT_CLASS_IN;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st64;
tr298:
#line 816 "scanner_body.rl"
	{
		s->r_class = KNOT_CLASS_IN;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st64;
tr665:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st64;
tr666:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st64;
tr667:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st64;
tr669:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st64;
st64:
	if ( ++p == pe )
		goto _test_eof64;
case 64:
#line 21278 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st64;
		case 32: goto st64;
		case 40: goto tr301;
		case 41: goto tr302;
		case 65: goto st4;
		case 67: goto st17;
		case 68: goto st36;
		case 69: goto st50;
		case 72: goto st57;
		case 73: goto st65;
		case 75: goto st73;
		case 76: goto st77;
		case 77: goto st86;
		case 78: goto st92;
		case 80: goto st108;
		case 82: goto st111;
		case 83: goto st118;
		case 84: goto st129;
		case 85: goto st139;
		case 97: goto st4;
		case 99: goto st17;
		case 100: goto st36;
		case 101: goto st50;
		case 104: goto st57;
		case 105: goto st65;
		case 107: goto st73;
		case 108: goto st77;
		case 109: goto st86;
		case 110: goto st92;
		case 112: goto st108;
		case 114: goto st111;
		case 115: goto st118;
		case 116: goto st129;
		case 117: goto st139;
		case 1034: goto tr318;
		case 1083: goto st142;
	}
	goto tr36;
tr635:
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st65;
st65:
	if ( ++p == pe )
		goto _test_eof65;
case 65:
#line 21342 "scanner.c"
	switch( (*p) ) {
		case 80: goto st66;
		case 112: goto st66;
	}
	goto tr36;
st66:
	if ( ++p == pe )
		goto _test_eof66;
case 66:
	switch( (*p) ) {
		case 83: goto st67;
		case 115: goto st67;
	}
	goto tr36;
st67:
	if ( ++p == pe )
		goto _test_eof67;
case 67:
	switch( (*p) ) {
		case 69: goto st68;
		case 101: goto st68;
	}
	goto tr36;
st68:
	if ( ++p == pe )
		goto _test_eof68;
case 68:
	switch( (*p) ) {
		case 67: goto st69;
		case 99: goto st69;
	}
	goto tr36;
st69:
	if ( ++p == pe )
		goto _test_eof69;
case 69:
	switch( (*p) ) {
		case 75: goto st70;
		case 107: goto st70;
	}
	goto tr36;
st70:
	if ( ++p == pe )
		goto _test_eof70;
case 70:
	switch( (*p) ) {
		case 69: goto st71;
		case 101: goto st71;
	}
	goto tr36;
st71:
	if ( ++p == pe )
		goto _test_eof71;
case 71:
	switch( (*p) ) {
		case 89: goto st72;
		case 121: goto st72;
	}
	goto tr36;
st72:
	if ( ++p == pe )
		goto _test_eof72;
case 72:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr326;
		case 32: goto tr326;
		case 40: goto tr327;
		case 41: goto tr328;
		case 2058: goto tr329;
		case 2107: goto tr330;
		case 2314: goto tr331;
		case 2363: goto tr331;
		case 2570: goto tr332;
		case 2619: goto tr333;
	}
	goto tr57;
tr11:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st73;
tr46:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
	goto st73;
tr636:
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st73;
st73:
	if ( ++p == pe )
		goto _test_eof73;
case 73:
#line 21465 "scanner.c"
	switch( (*p) ) {
		case 69: goto st74;
		case 88: goto st76;
		case 101: goto st74;
		case 120: goto st76;
	}
	goto tr36;
st74:
	if ( ++p == pe )
		goto _test_eof74;
case 74:
	switch( (*p) ) {
		case 89: goto st75;
		case 121: goto st75;
	}
	goto tr36;
st75:
	if ( ++p == pe )
		goto _test_eof75;
case 75:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr337;
		case 32: goto tr337;
		case 40: goto tr338;
		case 41: goto tr339;
		case 2058: goto tr340;
		case 2107: goto tr341;
		case 2314: goto tr342;
		case 2363: goto tr342;
		case 2570: goto tr343;
		case 2619: goto tr344;
	}
	goto tr57;
st76:
	if ( ++p == pe )
		goto _test_eof76;
case 76:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr345;
		case 32: goto tr345;
		case 40: goto tr346;
		case 41: goto tr347;
		case 2058: goto tr348;
		case 2107: goto tr349;
		case 2314: goto tr350;
		case 2363: goto tr350;
		case 2570: goto tr351;
		case 2619: goto tr352;
	}
	goto tr57;
tr12:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st77;
tr47:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
	goto st77;
tr637:
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st77;
st77:
	if ( ++p == pe )
		goto _test_eof77;
case 77:
#line 21582 "scanner.c"
	switch( (*p) ) {
		case 51: goto st78;
		case 54: goto st80;
		case 66: goto st82;
		case 79: goto st83;
		case 80: goto st85;
		case 98: goto st82;
		case 111: goto st83;
		case 112: goto st85;
	}
	goto tr36;
st78:
	if ( ++p == pe )
		goto _test_eof78;
case 78:
	if ( (*p) == 50 )
		goto st79;
	goto tr36;
st79:
	if ( ++p == pe )
		goto _test_eof79;
case 79:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr359;
		case 32: goto tr359;
		case 40: goto tr360;
		case 41: goto tr361;
		case 2058: goto tr362;
		case 2107: goto tr363;
		case 2314: goto tr364;
		case 2363: goto tr364;
		case 2570: goto tr365;
		case 2619: goto tr366;
	}
	goto tr57;
st80:
	if ( ++p == pe )
		goto _test_eof80;
case 80:
	if ( (*p) == 52 )
		goto st81;
	goto tr36;
st81:
	if ( ++p == pe )
		goto _test_eof81;
case 81:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr368;
		case 32: goto tr368;
		case 40: goto tr369;
		case 41: goto tr370;
		case 2058: goto tr371;
		case 2107: goto tr372;
		case 2314: goto tr373;
		case 2363: goto tr373;
		case 2570: goto tr374;
		case 2619: goto tr375;
	}
	goto tr57;
st82:
	if ( ++p == pe )
		goto _test_eof82;
case 82:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr376;
		case 32: goto tr376;
		case 40: goto tr377;
		case 41: goto tr378;
		case 2058: goto tr379;
		case 2107: goto tr380;
		case 2314: goto tr381;
		case 2363: goto tr381;
		case 2570: goto tr382;
		case 2619: goto tr383;
	}
	goto tr57;
st83:
	if ( ++p == pe )
		goto _test_eof83;
case 83:
	switch( (*p) ) {
		case 67: goto st84;
		case 99: goto st84;
	}
	goto tr36;
st84:
	if ( ++p == pe )
		goto _test_eof84;
case 84:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr385;
		case 32: goto tr385;
		case 40: goto tr386;
		case 41: goto tr387;
		case 2058: goto tr388;
		case 2107: goto tr389;
		case 2314: goto tr390;
		case 2363: goto tr390;
		case 2570: goto tr391;
		case 2619: goto tr392;
	}
	goto tr57;
st85:
	if ( ++p == pe )
		goto _test_eof85;
case 85:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr393;
		case 32: goto tr393;
		case 40: goto tr394;
		case 41: goto tr395;
		case 2058: goto tr396;
		case 2107: goto tr397;
		case 2314: goto tr398;
		case 2363: goto tr398;
		case 2570: goto tr399;
		case 2619: goto tr400;
	}
	goto tr57;
tr13:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st86;
tr48:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
	goto st86;
tr638:
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st86;
st86:
	if ( ++p == pe )
		goto _test_eof86;
case 86:
#line 21828 "scanner.c"
	switch( (*p) ) {
		case 73: goto st87;
		case 88: goto st91;
		case 105: goto st87;
		case 120: goto st91;
	}
	goto tr36;
st87:
	if ( ++p == pe )
		goto _test_eof87;
case 87:
	switch( (*p) ) {
		case 78: goto st88;
		case 110: goto st88;
	}
	goto tr36;
st88:
	if ( ++p == pe )
		goto _test_eof88;
case 88:
	switch( (*p) ) {
		case 70: goto st89;
		case 102: goto st89;
	}
	goto tr36;
st89:
	if ( ++p == pe )
		goto _test_eof89;
case 89:
	switch( (*p) ) {
		case 79: goto st90;
		case 111: goto st90;
	}
	goto tr36;
st90:
	if ( ++p == pe )
		goto _test_eof90;
case 90:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr406;
		case 32: goto tr406;
		case 40: goto tr407;
		case 41: goto tr408;
		case 2058: goto tr409;
		case 2107: goto tr410;
		case 2314: goto tr411;
		case 2363: goto tr411;
		case 2570: goto tr412;
		case 2619: goto tr413;
	}
	goto tr57;
st91:
	if ( ++p == pe )
		goto _test_eof91;
case 91:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr414;
		case 32: goto tr414;
		case 40: goto tr415;
		case 41: goto tr416;
		case 2058: goto tr417;
		case 2107: goto tr418;
		case 2314: goto tr419;
		case 2363: goto tr419;
		case 2570: goto tr420;
		case 2619: goto tr421;
	}
	goto tr57;
tr14:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st92;
tr49:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
	goto st92;
tr639:
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st92;
st92:
	if ( ++p == pe )
		goto _test_eof92;
case 92:
#line 21963 "scanner.c"
	switch( (*p) ) {
		case 65: goto st93;
		case 73: goto st97;
		case 83: goto st99;
		case 97: goto st93;
		case 105: goto st97;
		case 115: goto st99;
	}
	goto tr36;
st93:
	if ( ++p == pe )
		goto _test_eof93;
case 93:
	switch( (*p) ) {
		case 80: goto st94;
		case 112: goto st94;
	}
	goto tr36;
st94:
	if ( ++p == pe )
		goto _test_eof94;
case 94:
	switch( (*p) ) {
		case 84: goto st95;
		case 116: goto st95;
	}
	goto tr36;
st95:
	if ( ++p == pe )
		goto _test_eof95;
case 95:
	switch( (*p) ) {
		case 82: goto st96;
		case 114: goto st96;
	}
	goto tr36;
st96:
	if ( ++p == pe )
		goto _test_eof96;
case 96:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr428;
		case 32: goto tr428;
		case 40: goto tr429;
		case 41: goto tr430;
		case 2058: goto tr431;
		case 2107: goto tr432;
		case 2314: goto tr433;
		case 2363: goto tr433;
		case 2570: goto tr434;
		case 2619: goto tr435;
	}
	goto tr57;
st97:
	if ( ++p == pe )
		goto _test_eof97;
case 97:
	switch( (*p) ) {
		case 68: goto st98;
		case 100: goto st98;
	}
	goto tr36;
st98:
	if ( ++p == pe )
		goto _test_eof98;
case 98:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr437;
		case 32: goto tr437;
		case 40: goto tr438;
		case 41: goto tr439;
		case 2058: goto tr440;
		case 2107: goto tr441;
		case 2314: goto tr442;
		case 2363: goto tr442;
		case 2570: goto tr443;
		case 2619: goto tr444;
	}
	goto tr57;
st99:
	if ( ++p == pe )
		goto _test_eof99;
case 99:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr445;
		case 32: goto tr445;
		case 40: goto tr446;
		case 41: goto tr447;
		case 69: goto st100;
		case 101: goto st100;
		case 2058: goto tr449;
		case 2107: goto tr450;
		case 2314: goto tr451;
		case 2363: goto tr451;
		case 2570: goto tr452;
		case 2619: goto tr453;
	}
	goto tr57;
st100:
	if ( ++p == pe )
		goto _test_eof100;
case 100:
	switch( (*p) ) {
		case 67: goto st101;
		case 99: goto st101;
	}
	goto tr36;
st101:
	if ( ++p == pe )
		goto _test_eof101;
case 101:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr455;
		case 32: goto tr455;
		case 40: goto tr456;
		case 41: goto tr457;
		case 51: goto st102;
		case 2058: goto tr459;
		case 2107: goto tr460;
		case 2314: goto tr461;
		case 2363: goto tr461;
		case 2570: goto tr462;
		case 2619: goto tr463;
	}
	goto tr57;
st102:
	if ( ++p == pe )
		goto _test_eof102;
case 102:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr464;
		case 32: goto tr464;
		case 40: goto tr465;
		case 41: goto tr466;
		case 80: goto st103;
		case 112: goto st103;
		case 2058: goto tr468;
		case 2107: goto tr469;
		case 2314: goto tr470;
		case 2363: goto tr470;
		case 2570: goto tr471;
		case 2619: goto tr472;
	}
	goto tr57;
st103:
	if ( ++p == pe )
		goto _test_eof103;
case 103:
	switch( (*p) ) {
		case 65: goto st104;
		case 97: goto st104;
	}
	goto tr36;
st104:
	if ( ++p == pe )
		goto _test_eof104;
case 104:
	switch( (*p) ) {
		case 82: goto st105;
		case 114: goto st105;
	}
	goto tr36;
st105:
	if ( ++p == pe )
		goto _test_eof105;
case 105:
	switch( (*p) ) {
		case 65: goto st106;
		case 97: goto st106;
	}
	goto tr36;
st106:
	if ( ++p == pe )
		goto _test_eof106;
case 106:
	switch( (*p) ) {
		case 77: goto st107;
		case 109: goto st107;
	}
	goto tr36;
st107:
	if ( ++p == pe )
		goto _test_eof107;
case 107:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr477;
		case 32: goto tr477;
		case 40: goto tr478;
		case 41: goto tr479;
		case 2058: goto tr480;
		case 2107: goto tr481;
		case 2314: goto tr482;
		case 2363: goto tr482;
		case 2570: goto tr483;
		case 2619: goto tr484;
	}
	goto tr57;
tr15:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st108;
tr50:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
	goto st108;
tr640:
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st108;
st108:
	if ( ++p == pe )
		goto _test_eof108;
case 108:
#line 22307 "scanner.c"
	switch( (*p) ) {
		case 84: goto st109;
		case 116: goto st109;
	}
	goto tr36;
st109:
	if ( ++p == pe )
		goto _test_eof109;
case 109:
	switch( (*p) ) {
		case 82: goto st110;
		case 114: goto st110;
	}
	goto tr36;
st110:
	if ( ++p == pe )
		goto _test_eof110;
case 110:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr487;
		case 32: goto tr487;
		case 40: goto tr488;
		case 41: goto tr489;
		case 2058: goto tr490;
		case 2107: goto tr491;
		case 2314: goto tr492;
		case 2363: goto tr492;
		case 2570: goto tr493;
		case 2619: goto tr494;
	}
	goto tr57;
tr16:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st111;
tr51:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
	goto st111;
tr641:
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st111;
st111:
	if ( ++p == pe )
		goto _test_eof111;
case 111:
#line 22385 "scanner.c"
	switch( (*p) ) {
		case 80: goto st112;
		case 82: goto st113;
		case 84: goto st117;
		case 112: goto st112;
		case 114: goto st113;
		case 116: goto st117;
	}
	goto tr36;
st112:
	if ( ++p == pe )
		goto _test_eof112;
case 112:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr498;
		case 32: goto tr498;
		case 40: goto tr499;
		case 41: goto tr500;
		case 2058: goto tr501;
		case 2107: goto tr502;
		case 2314: goto tr503;
		case 2363: goto tr503;
		case 2570: goto tr504;
		case 2619: goto tr505;
	}
	goto tr57;
st113:
	if ( ++p == pe )
		goto _test_eof113;
case 113:
	switch( (*p) ) {
		case 83: goto st114;
		case 115: goto st114;
	}
	goto tr36;
st114:
	if ( ++p == pe )
		goto _test_eof114;
case 114:
	switch( (*p) ) {
		case 73: goto st115;
		case 105: goto st115;
	}
	goto tr36;
st115:
	if ( ++p == pe )
		goto _test_eof115;
case 115:
	switch( (*p) ) {
		case 71: goto st116;
		case 103: goto st116;
	}
	goto tr36;
st116:
	if ( ++p == pe )
		goto _test_eof116;
case 116:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr509;
		case 32: goto tr509;
		case 40: goto tr510;
		case 41: goto tr511;
		case 2058: goto tr512;
		case 2107: goto tr513;
		case 2314: goto tr514;
		case 2363: goto tr514;
		case 2570: goto tr515;
		case 2619: goto tr516;
	}
	goto tr57;
st117:
	if ( ++p == pe )
		goto _test_eof117;
case 117:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr517;
		case 32: goto tr517;
		case 40: goto tr518;
		case 41: goto tr519;
		case 2058: goto tr520;
		case 2107: goto tr521;
		case 2314: goto tr522;
		case 2363: goto tr522;
		case 2570: goto tr523;
		case 2619: goto tr524;
	}
	goto tr57;
tr17:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st118;
tr52:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
	goto st118;
tr642:
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st118;
st118:
	if ( ++p == pe )
		goto _test_eof118;
case 118:
#line 22559 "scanner.c"
	switch( (*p) ) {
		case 79: goto st119;
		case 80: goto st121;
		case 82: goto st123;
		case 83: goto st125;
		case 111: goto st119;
		case 112: goto st121;
		case 114: goto st123;
		case 115: goto st125;
	}
	goto tr36;
st119:
	if ( ++p == pe )
		goto _test_eof119;
case 119:
	switch( (*p) ) {
		case 65: goto st120;
		case 97: goto st120;
	}
	goto tr36;
st120:
	if ( ++p == pe )
		goto _test_eof120;
case 120:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr530;
		case 32: goto tr530;
		case 40: goto tr531;
		case 41: goto tr532;
		case 2058: goto tr533;
		case 2107: goto tr534;
		case 2314: goto tr535;
		case 2363: goto tr535;
		case 2570: goto tr536;
		case 2619: goto tr537;
	}
	goto tr57;
st121:
	if ( ++p == pe )
		goto _test_eof121;
case 121:
	switch( (*p) ) {
		case 70: goto st122;
		case 102: goto st122;
	}
	goto tr36;
st122:
	if ( ++p == pe )
		goto _test_eof122;
case 122:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr539;
		case 32: goto tr539;
		case 40: goto tr540;
		case 41: goto tr541;
		case 2058: goto tr542;
		case 2107: goto tr543;
		case 2314: goto tr544;
		case 2363: goto tr544;
		case 2570: goto tr545;
		case 2619: goto tr546;
	}
	goto tr57;
st123:
	if ( ++p == pe )
		goto _test_eof123;
case 123:
	switch( (*p) ) {
		case 86: goto st124;
		case 118: goto st124;
	}
	goto tr36;
st124:
	if ( ++p == pe )
		goto _test_eof124;
case 124:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr548;
		case 32: goto tr548;
		case 40: goto tr549;
		case 41: goto tr550;
		case 2058: goto tr551;
		case 2107: goto tr552;
		case 2314: goto tr553;
		case 2363: goto tr553;
		case 2570: goto tr554;
		case 2619: goto tr555;
	}
	goto tr57;
st125:
	if ( ++p == pe )
		goto _test_eof125;
case 125:
	switch( (*p) ) {
		case 72: goto st126;
		case 104: goto st126;
	}
	goto tr36;
st126:
	if ( ++p == pe )
		goto _test_eof126;
case 126:
	switch( (*p) ) {
		case 70: goto st127;
		case 102: goto st127;
	}
	goto tr36;
st127:
	if ( ++p == pe )
		goto _test_eof127;
case 127:
	switch( (*p) ) {
		case 80: goto st128;
		case 112: goto st128;
	}
	goto tr36;
st128:
	if ( ++p == pe )
		goto _test_eof128;
case 128:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr559;
		case 32: goto tr559;
		case 40: goto tr560;
		case 41: goto tr561;
		case 2058: goto tr562;
		case 2107: goto tr563;
		case 2314: goto tr564;
		case 2363: goto tr564;
		case 2570: goto tr565;
		case 2619: goto tr566;
	}
	goto tr57;
tr18:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st129;
tr53:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
	goto st129;
tr643:
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st129;
st129:
	if ( ++p == pe )
		goto _test_eof129;
case 129:
#line 22799 "scanner.c"
	switch( (*p) ) {
		case 76: goto st130;
		case 88: goto st133;
		case 89: goto st135;
		case 108: goto st130;
		case 120: goto st133;
		case 121: goto st135;
	}
	goto tr36;
st130:
	if ( ++p == pe )
		goto _test_eof130;
case 130:
	switch( (*p) ) {
		case 83: goto st131;
		case 115: goto st131;
	}
	goto tr36;
st131:
	if ( ++p == pe )
		goto _test_eof131;
case 131:
	switch( (*p) ) {
		case 65: goto st132;
		case 97: goto st132;
	}
	goto tr36;
st132:
	if ( ++p == pe )
		goto _test_eof132;
case 132:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr572;
		case 32: goto tr572;
		case 40: goto tr573;
		case 41: goto tr574;
		case 2058: goto tr575;
		case 2107: goto tr576;
		case 2314: goto tr577;
		case 2363: goto tr577;
		case 2570: goto tr578;
		case 2619: goto tr579;
	}
	goto tr57;
st133:
	if ( ++p == pe )
		goto _test_eof133;
case 133:
	switch( (*p) ) {
		case 84: goto st134;
		case 116: goto st134;
	}
	goto tr36;
st134:
	if ( ++p == pe )
		goto _test_eof134;
case 134:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr581;
		case 32: goto tr581;
		case 40: goto tr582;
		case 41: goto tr583;
		case 2058: goto tr584;
		case 2107: goto tr585;
		case 2314: goto tr586;
		case 2363: goto tr586;
		case 2570: goto tr587;
		case 2619: goto tr588;
	}
	goto tr57;
st135:
	if ( ++p == pe )
		goto _test_eof135;
case 135:
	switch( (*p) ) {
		case 80: goto st136;
		case 112: goto st136;
	}
	goto tr36;
st136:
	if ( ++p == pe )
		goto _test_eof136;
case 136:
	switch( (*p) ) {
		case 69: goto st137;
		case 101: goto st137;
	}
	goto tr36;
st137:
	if ( ++p == pe )
		goto _test_eof137;
case 137:
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr592;
	goto tr591;
tr592:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st138;
tr597:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st138;
st138:
	if ( ++p == pe )
		goto _test_eof138;
case 138:
#line 22977 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr594;
		case 32: goto tr594;
		case 40: goto tr595;
		case 41: goto tr596;
		case 2058: goto tr598;
		case 2107: goto tr599;
		case 2314: goto tr600;
		case 2363: goto tr600;
		case 2570: goto tr601;
		case 2619: goto tr602;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr597;
	goto tr593;
tr19:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st139;
tr54:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
	goto st139;
tr644:
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st139;
st139:
	if ( ++p == pe )
		goto _test_eof139;
case 139:
#line 23039 "scanner.c"
	switch( (*p) ) {
		case 82: goto st140;
		case 114: goto st140;
	}
	goto tr36;
st140:
	if ( ++p == pe )
		goto _test_eof140;
case 140:
	switch( (*p) ) {
		case 73: goto st141;
		case 105: goto st141;
	}
	goto tr36;
st141:
	if ( ++p == pe )
		goto _test_eof141;
case 141:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr605;
		case 32: goto tr605;
		case 40: goto tr606;
		case 41: goto tr607;
		case 2058: goto tr608;
		case 2107: goto tr609;
		case 2314: goto tr610;
		case 2363: goto tr610;
		case 2570: goto tr611;
		case 2619: goto tr612;
	}
	goto tr57;
tr657:
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st142;
tr613:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st142;
tr299:
#line 816 "scanner_body.rl"
	{
		s->r_class = KNOT_CLASS_IN;
	}
	goto st142;
tr670:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st142;
st142:
	if ( ++p == pe )
		goto _test_eof142;
case 142:
#line 23140 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr614;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr613;
	goto tr36;
tr919:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1140; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1140; goto _out;}
		}
	}
	goto st1140;
tr143:
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1140; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1140; goto _out;}
		}
	}
	goto st1140;
tr149:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1140; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1140; goto _out;}
		}
	}
	goto st1140;
st1140:
	if ( ++p == pe )
		goto _test_eof1140;
case 1140:
#line 23282 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3684;
		case 32: goto tr3684;
		case 36: goto st153;
		case 40: goto tr3685;
		case 41: goto tr3686;
		case 42: goto tr3666;
		case 65: goto tr3687;
		case 67: goto tr3688;
		case 68: goto tr3689;
		case 69: goto tr3690;
		case 72: goto tr3691;
		case 73: goto tr3692;
		case 75: goto tr3693;
		case 76: goto tr3694;
		case 77: goto tr3695;
		case 78: goto tr3696;
		case 80: goto tr3697;
		case 82: goto tr3698;
		case 83: goto tr3699;
		case 84: goto tr3700;
		case 85: goto tr3701;
		case 92: goto tr3666;
		case 95: goto tr3666;
		case 97: goto tr3687;
		case 99: goto tr3688;
		case 100: goto tr3689;
		case 101: goto tr3690;
		case 104: goto tr3691;
		case 105: goto tr3692;
		case 107: goto tr3693;
		case 108: goto tr3694;
		case 109: goto tr3695;
		case 110: goto tr3696;
		case 112: goto tr3697;
		case 114: goto tr3698;
		case 115: goto tr3699;
		case 116: goto tr3700;
		case 117: goto tr3701;
		case 778: goto tr3667;
		case 827: goto tr3668;
		case 1034: goto tr3702;
		case 1083: goto tr3703;
	}
	if ( _widec < 64 ) {
		if ( 45 <= _widec && _widec <= 57 )
			goto tr3666;
	} else if ( _widec > 90 ) {
		if ( 98 <= _widec && _widec <= 122 )
			goto tr3666;
	} else
		goto tr3666;
	goto tr3683;
tr616:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st143;
tr617:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st143;
tr3684:
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st143;
tr3685:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st143;
tr3686:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st143;
st143:
	if ( ++p == pe )
		goto _test_eof143;
case 143:
#line 23432 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st143;
		case 32: goto st143;
		case 40: goto tr616;
		case 41: goto tr617;
		case 65: goto tr5;
		case 67: goto tr6;
		case 68: goto tr7;
		case 69: goto tr8;
		case 72: goto tr9;
		case 73: goto tr10;
		case 75: goto tr11;
		case 76: goto tr12;
		case 77: goto tr13;
		case 78: goto tr14;
		case 80: goto tr15;
		case 82: goto tr16;
		case 83: goto tr17;
		case 84: goto tr18;
		case 85: goto tr19;
		case 97: goto tr5;
		case 99: goto tr6;
		case 100: goto tr7;
		case 101: goto tr8;
		case 104: goto tr9;
		case 105: goto tr10;
		case 107: goto tr11;
		case 108: goto tr12;
		case 109: goto tr13;
		case 110: goto tr14;
		case 112: goto tr15;
		case 114: goto tr16;
		case 115: goto tr17;
		case 116: goto tr18;
		case 117: goto tr19;
		case 778: goto tr20;
		case 827: goto st152;
		case 1034: goto tr618;
		case 1083: goto st266;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr4;
	goto tr0;
tr10:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
	goto st144;
st144:
	if ( ++p == pe )
		goto _test_eof144;
case 144:
#line 23504 "scanner.c"
	switch( (*p) ) {
		case 78: goto st145;
		case 80: goto st66;
		case 110: goto st145;
		case 112: goto st66;
	}
	goto tr36;
st145:
	if ( ++p == pe )
		goto _test_eof145;
case 145:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr621;
		case 32: goto tr621;
		case 40: goto tr622;
		case 41: goto tr623;
		case 1034: goto tr624;
		case 1083: goto tr625;
	}
	goto tr36;
tr627:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st146;
tr628:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st146;
tr645:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st146;
tr672:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st146;
tr621:
#line 816 "scanner_body.rl"
	{
		s->r_class = KNOT_CLASS_IN;
	}
	goto st146;
tr622:
#line 816 "scanner_body.rl"
	{
		s->r_class = KNOT_CLASS_IN;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st146;
tr623:
#line 816 "scanner_body.rl"
	{
		s->r_class = KNOT_CLASS_IN;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st146;
tr624:
#line 816 "scanner_body.rl"
	{
		s->r_class = KNOT_CLASS_IN;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st146;
st146:
	if ( ++p == pe )
		goto _test_eof146;
case 146:
#line 23623 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st146;
		case 32: goto st146;
		case 40: goto tr627;
		case 41: goto tr628;
		case 65: goto tr630;
		case 67: goto tr631;
		case 68: goto tr632;
		case 69: goto tr633;
		case 72: goto tr634;
		case 73: goto tr635;
		case 75: goto tr636;
		case 76: goto tr637;
		case 77: goto tr638;
		case 78: goto tr639;
		case 80: goto tr640;
		case 82: goto tr641;
		case 83: goto tr642;
		case 84: goto tr643;
		case 85: goto tr644;
		case 97: goto tr630;
		case 99: goto tr631;
		case 100: goto tr632;
		case 101: goto tr633;
		case 104: goto tr634;
		case 105: goto tr635;
		case 107: goto tr636;
		case 108: goto tr637;
		case 109: goto tr638;
		case 110: goto tr639;
		case 112: goto tr640;
		case 114: goto tr641;
		case 115: goto tr642;
		case 116: goto tr643;
		case 117: goto tr644;
		case 1034: goto tr645;
		case 1083: goto st151;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr629;
	goto tr591;
tr629:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st147;
tr650:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st147;
st147:
	if ( ++p == pe )
		goto _test_eof147;
case 147:
#line 23721 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr647;
		case 32: goto tr647;
		case 40: goto tr648;
		case 41: goto tr649;
		case 68: goto tr651;
		case 72: goto tr652;
		case 77: goto tr653;
		case 83: goto st148;
		case 87: goto tr655;
		case 100: goto tr651;
		case 104: goto tr652;
		case 109: goto tr653;
		case 115: goto st148;
		case 119: goto tr655;
		case 1034: goto tr656;
		case 1083: goto tr657;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr650;
	goto tr24;
tr651:
#line 443 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 86400)) {
	                  s->number64 *= 86400;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st148;
tr652:
#line 436 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 3600)) {
	                  s->number64 *= 3600;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st148;
tr653:
#line 429 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 60)) {
	                  s->number64 *= 60;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st148;
tr655:
#line 450 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 604800)) {
	                  s->number64 *= 604800;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st148;
st148:
	if ( ++p == pe )
		goto _test_eof148;
case 148:
#line 23801 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr647;
		case 32: goto tr647;
		case 40: goto tr648;
		case 41: goto tr649;
		case 1034: goto tr656;
		case 1083: goto tr657;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr658;
	goto tr24;
tr659:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st149;
tr658:
#line 460 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st149;
tr668:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 460 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st149;
st149:
	if ( ++p == pe )
		goto _test_eof149;
case 149:
#line 23907 "scanner.c"
	switch( (*p) ) {
		case 68: goto tr660;
		case 72: goto tr661;
		case 77: goto tr662;
		case 83: goto st150;
		case 87: goto tr664;
		case 100: goto tr660;
		case 104: goto tr661;
		case 109: goto tr662;
		case 115: goto st150;
		case 119: goto tr664;
	}
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr659;
	goto tr24;
tr660:
#line 443 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 86400)) {
	                  s->number64 *= 86400;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st150;
tr661:
#line 436 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 3600)) {
	                  s->number64 *= 3600;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st150;
tr662:
#line 429 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 60)) {
	                  s->number64 *= 60;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st150;
tr664:
#line 450 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 604800)) {
	                  s->number64 *= 604800;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st150;
st150:
	if ( ++p == pe )
		goto _test_eof150;
case 150:
#line 23967 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr665;
		case 32: goto tr665;
		case 40: goto tr666;
		case 41: goto tr667;
		case 1034: goto tr669;
		case 1083: goto tr670;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr668;
	goto tr24;
tr671:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st151;
tr625:
#line 816 "scanner_body.rl"
	{
		s->r_class = KNOT_CLASS_IN;
	}
	goto st151;
st151:
	if ( ++p == pe )
		goto _test_eof151;
case 151:
#line 24011 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr672;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr671;
	goto tr36;
tr3668:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st152;
tr673:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st152;
tr3728:
#line 793 "scanner_body.rl"
	{
		NOERR;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st152;
st152:
	if ( ++p == pe )
		goto _test_eof152;
case 152:
#line 24068 "scanner.c"
	if ( (*p) == 10 )
		goto tr674;
	goto tr673;
tr618:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1141;
tr917:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1141;
tr808:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1141; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1141; goto _out;}
		}
	}
	goto st1141;
tr805:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1141; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1141; goto _out;}
		}
	}
	goto st1141;
tr800:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1141; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1141; goto _out;}
		}
	}
	goto st1141;
tr3702:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st1141;
st1141:
	if ( ++p == pe )
		goto _test_eof1141;
case 1141:
#line 24225 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3684;
		case 32: goto tr3684;
		case 36: goto st153;
		case 40: goto tr3685;
		case 41: goto tr3686;
		case 42: goto tr3666;
		case 65: goto tr3706;
		case 67: goto tr3707;
		case 68: goto tr3708;
		case 69: goto tr3709;
		case 72: goto tr3710;
		case 73: goto tr3711;
		case 75: goto tr3712;
		case 76: goto tr3713;
		case 77: goto tr3714;
		case 78: goto tr3715;
		case 80: goto tr3716;
		case 82: goto tr3717;
		case 83: goto tr3718;
		case 84: goto tr3719;
		case 85: goto tr3720;
		case 92: goto tr3666;
		case 95: goto tr3666;
		case 97: goto tr3706;
		case 99: goto tr3707;
		case 100: goto tr3708;
		case 101: goto tr3709;
		case 104: goto tr3710;
		case 105: goto tr3711;
		case 107: goto tr3712;
		case 108: goto tr3713;
		case 109: goto tr3714;
		case 110: goto tr3715;
		case 112: goto tr3716;
		case 114: goto tr3717;
		case 115: goto tr3718;
		case 116: goto tr3719;
		case 117: goto tr3720;
		case 778: goto tr3667;
		case 827: goto tr3668;
		case 1034: goto tr3702;
		case 1083: goto tr3703;
	}
	if ( _widec < 48 ) {
		if ( 45 <= _widec && _widec <= 47 )
			goto tr3666;
	} else if ( _widec > 57 ) {
		if ( _widec > 90 ) {
			if ( 98 <= _widec && _widec <= 122 )
				goto tr3666;
		} else if ( _widec >= 64 )
			goto tr3666;
	} else
		goto tr3705;
	goto tr3704;
tr3723:
#line 793 "scanner_body.rl"
	{
		NOERR;
	}
	goto st153;
st153:
	if ( ++p == pe )
		goto _test_eof153;
case 153:
#line 24306 "scanner.c"
	switch( (*p) ) {
		case 73: goto tr676;
		case 79: goto tr677;
		case 84: goto tr678;
		case 105: goto tr676;
		case 111: goto tr677;
		case 116: goto tr678;
	}
	goto tr675;
tr676:
#line 789 "scanner_body.rl"
	{
		ERR(ZS_OK);
	}
	goto st154;
st154:
	if ( ++p == pe )
		goto _test_eof154;
case 154:
#line 24326 "scanner.c"
	switch( (*p) ) {
		case 78: goto st155;
		case 110: goto st155;
	}
	goto tr675;
st155:
	if ( ++p == pe )
		goto _test_eof155;
case 155:
	switch( (*p) ) {
		case 67: goto st156;
		case 99: goto st156;
	}
	goto tr675;
st156:
	if ( ++p == pe )
		goto _test_eof156;
case 156:
	switch( (*p) ) {
		case 76: goto st157;
		case 108: goto st157;
	}
	goto tr675;
st157:
	if ( ++p == pe )
		goto _test_eof157;
case 157:
	switch( (*p) ) {
		case 85: goto st158;
		case 117: goto st158;
	}
	goto tr675;
st158:
	if ( ++p == pe )
		goto _test_eof158;
case 158:
	switch( (*p) ) {
		case 68: goto st159;
		case 100: goto st159;
	}
	goto tr675;
st159:
	if ( ++p == pe )
		goto _test_eof159;
case 159:
	switch( (*p) ) {
		case 69: goto st160;
		case 101: goto st160;
	}
	goto tr675;
st160:
	if ( ++p == pe )
		goto _test_eof160;
case 160:
	switch( (*p) ) {
		case 32: goto tr685;
		case 59: goto tr685;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr685;
	} else if ( (*p) >= 9 )
		goto tr685;
	goto tr675;
tr685:
#line 783 "scanner_body.rl"
	{ p--; {stack[top++] = 1142;goto st313;} }
	goto st1142;
tr786:
#line 680 "scanner_body.rl"
	{ p--; {stack[top++] = 1142;goto st301;} }
	goto st1142;
tr789:
#line 663 "scanner_body.rl"
	{ p--; {stack[top++] = 1142;goto st292;} }
	goto st1142;
st1142:
	if ( ++p == pe )
		goto _test_eof1142;
case 1142:
#line 24407 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3722;
		case 32: goto tr3722;
		case 36: goto tr3723;
		case 40: goto tr3724;
		case 41: goto tr3725;
		case 42: goto tr3726;
		case 92: goto tr3726;
		case 95: goto tr3726;
		case 778: goto tr3727;
		case 827: goto tr3728;
		case 1034: goto tr3729;
		case 1083: goto tr3730;
	}
	if ( _widec < 64 ) {
		if ( 45 <= _widec && _widec <= 57 )
			goto tr3726;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr3726;
	} else
		goto tr3726;
	goto tr3721;
tr3666:
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 161;goto st271;} }
	goto st161;
tr3726:
#line 793 "scanner_body.rl"
	{
		NOERR;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 161;goto st271;} }
	goto st161;
st161:
	if ( ++p == pe )
		goto _test_eof161;
case 161:
#line 24471 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr687;
		case 32: goto tr687;
		case 40: goto tr688;
		case 41: goto tr689;
		case 1034: goto tr690;
		case 1083: goto tr691;
	}
	goto tr686;
tr693:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st162;
tr694:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st162;
tr695:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st162;
tr699:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st162;
tr687:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
	goto st162;
tr688:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st162;
tr689:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st162;
tr690:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st162;
st162:
	if ( ++p == pe )
		goto _test_eof162;
case 162:
#line 24579 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st162;
		case 32: goto st162;
		case 40: goto tr693;
		case 41: goto tr694;
		case 65: goto tr5;
		case 67: goto tr6;
		case 68: goto tr7;
		case 69: goto tr8;
		case 72: goto tr9;
		case 73: goto tr10;
		case 75: goto tr11;
		case 76: goto tr12;
		case 77: goto tr13;
		case 78: goto tr14;
		case 80: goto tr15;
		case 82: goto tr16;
		case 83: goto tr17;
		case 84: goto tr18;
		case 85: goto tr19;
		case 97: goto tr5;
		case 99: goto tr6;
		case 100: goto tr7;
		case 101: goto tr8;
		case 104: goto tr9;
		case 105: goto tr10;
		case 107: goto tr11;
		case 108: goto tr12;
		case 109: goto tr13;
		case 110: goto tr14;
		case 112: goto tr15;
		case 114: goto tr16;
		case 115: goto tr17;
		case 116: goto tr18;
		case 117: goto tr19;
		case 1034: goto tr695;
		case 1083: goto st163;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr4;
	goto tr591;
tr697:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st163;
tr691:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
	goto st163;
st163:
	if ( ++p == pe )
		goto _test_eof163;
case 163:
#line 24653 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr699;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr697;
	goto st0;
tr22:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1143;
tr915:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1143;
tr764:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1143; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1143; goto _out;}
		}
	}
	goto st1143;
tr761:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1143; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1143; goto _out;}
		}
	}
	goto st1143;
tr794:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1143; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1143; goto _out;}
		}
	}
	goto st1143;
tr831:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1143; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1143; goto _out;}
		}
	}
	goto st1143;
tr834:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1143; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1143; goto _out;}
		}
	}
	goto st1143;
tr3669:
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st1143;
tr3733:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st1143;
tr3729:
#line 793 "scanner_body.rl"
	{
		NOERR;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st1143;
tr3737:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1143; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1143; goto _out;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
	goto st1143;
tr3761:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1143; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1143; goto _out;}
		}
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
	goto st1143;
st1143:
	if ( ++p == pe )
		goto _test_eof1143;
case 1143:
#line 25026 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3662;
		case 32: goto tr3662;
		case 36: goto st153;
		case 40: goto tr3731;
		case 41: goto tr3732;
		case 42: goto tr3666;
		case 65: goto tr3706;
		case 67: goto tr3707;
		case 68: goto tr3708;
		case 69: goto tr3709;
		case 72: goto tr3710;
		case 73: goto tr3711;
		case 75: goto tr3712;
		case 76: goto tr3713;
		case 77: goto tr3714;
		case 78: goto tr3715;
		case 80: goto tr3716;
		case 82: goto tr3717;
		case 83: goto tr3718;
		case 84: goto tr3719;
		case 85: goto tr3720;
		case 92: goto tr3666;
		case 95: goto tr3666;
		case 97: goto tr3706;
		case 99: goto tr3707;
		case 100: goto tr3708;
		case 101: goto tr3709;
		case 104: goto tr3710;
		case 105: goto tr3711;
		case 107: goto tr3712;
		case 108: goto tr3713;
		case 109: goto tr3714;
		case 110: goto tr3715;
		case 112: goto tr3716;
		case 114: goto tr3717;
		case 115: goto tr3718;
		case 116: goto tr3719;
		case 117: goto tr3720;
		case 778: goto tr3667;
		case 827: goto tr3668;
		case 1034: goto tr3733;
		case 1083: goto tr3670;
	}
	if ( _widec < 48 ) {
		if ( 45 <= _widec && _widec <= 47 )
			goto tr3666;
	} else if ( _widec > 57 ) {
		if ( _widec > 90 ) {
			if ( 98 <= _widec && _widec <= 122 )
				goto tr3666;
		} else if ( _widec >= 64 )
			goto tr3666;
	} else
		goto tr3705;
	goto tr3704;
tr3705:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 164;goto st271;} }
	goto st164;
st164:
	if ( ++p == pe )
		goto _test_eof164;
case 164:
#line 25129 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr701;
		case 32: goto tr701;
		case 40: goto tr702;
		case 41: goto tr703;
		case 68: goto tr29;
		case 72: goto tr30;
		case 77: goto tr31;
		case 83: goto st167;
		case 87: goto tr33;
		case 100: goto tr29;
		case 104: goto tr30;
		case 109: goto tr31;
		case 115: goto st167;
		case 119: goto tr33;
		case 1034: goto tr704;
		case 1083: goto tr705;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr28;
	goto tr700;
tr707:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st165;
tr708:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st165;
tr709:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st165;
tr712:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st165;
tr701:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st165;
tr702:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st165;
tr703:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st165;
tr704:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st165;
st165:
	if ( ++p == pe )
		goto _test_eof165;
case 165:
#line 25285 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st165;
		case 32: goto st165;
		case 40: goto tr707;
		case 41: goto tr708;
		case 65: goto tr5;
		case 67: goto tr6;
		case 68: goto tr7;
		case 69: goto tr8;
		case 72: goto tr9;
		case 73: goto tr10;
		case 75: goto tr11;
		case 76: goto tr12;
		case 77: goto tr13;
		case 78: goto tr14;
		case 80: goto tr15;
		case 82: goto tr16;
		case 83: goto tr17;
		case 84: goto tr18;
		case 85: goto tr19;
		case 97: goto tr5;
		case 99: goto tr6;
		case 100: goto tr7;
		case 101: goto tr8;
		case 104: goto tr9;
		case 105: goto tr10;
		case 107: goto tr11;
		case 108: goto tr12;
		case 109: goto tr13;
		case 110: goto tr14;
		case 112: goto tr15;
		case 114: goto tr16;
		case 115: goto tr17;
		case 116: goto tr18;
		case 117: goto tr19;
		case 1034: goto tr709;
		case 1083: goto st166;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr4;
	goto tr591;
tr711:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st166;
tr705:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st166;
st166:
	if ( ++p == pe )
		goto _test_eof166;
case 166:
#line 25368 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr712;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr711;
	goto tr36;
tr29:
#line 443 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 86400)) {
	                  s->number64 *= 86400;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st167;
tr30:
#line 436 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 3600)) {
	                  s->number64 *= 3600;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st167;
tr31:
#line 429 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 60)) {
	                  s->number64 *= 60;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st167;
tr33:
#line 450 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 604800)) {
	                  s->number64 *= 604800;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st167;
st167:
	if ( ++p == pe )
		goto _test_eof167;
case 167:
#line 25439 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr25;
		case 32: goto tr25;
		case 40: goto tr26;
		case 41: goto tr27;
		case 1034: goto tr34;
		case 1083: goto tr35;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr713;
	goto tr24;
tr714:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st168;
tr713:
#line 460 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st168;
tr723:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 460 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st168;
st168:
	if ( ++p == pe )
		goto _test_eof168;
case 168:
#line 25545 "scanner.c"
	switch( (*p) ) {
		case 68: goto tr715;
		case 72: goto tr716;
		case 77: goto tr717;
		case 83: goto st169;
		case 87: goto tr719;
		case 100: goto tr715;
		case 104: goto tr716;
		case 109: goto tr717;
		case 115: goto st169;
		case 119: goto tr719;
	}
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr714;
	goto tr24;
tr715:
#line 443 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 86400)) {
	                  s->number64 *= 86400;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st169;
tr716:
#line 436 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 3600)) {
	                  s->number64 *= 3600;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st169;
tr717:
#line 429 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 60)) {
	                  s->number64 *= 60;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st169;
tr719:
#line 450 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 604800)) {
	                  s->number64 *= 604800;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st169;
st169:
	if ( ++p == pe )
		goto _test_eof169;
case 169:
#line 25605 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr720;
		case 32: goto tr720;
		case 40: goto tr721;
		case 41: goto tr722;
		case 1034: goto tr724;
		case 1083: goto tr725;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr723;
	goto tr24;
tr35:
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st170;
tr726:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st170;
tr725:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st170;
st170:
	if ( ++p == pe )
		goto _test_eof170;
case 170:
#line 25674 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr727;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr726;
	goto tr36;
tr3687:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 171;goto st271;} }
	goto st171;
tr3706:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 171;goto st271;} }
	goto st171;
st171:
	if ( ++p == pe )
		goto _test_eof171;
case 171:
#line 25735 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr729;
		case 32: goto tr729;
		case 40: goto tr730;
		case 41: goto tr731;
		case 65: goto st231;
		case 70: goto st234;
		case 80: goto st238;
		case 97: goto st231;
		case 102: goto st234;
		case 112: goto st238;
		case 2058: goto tr732;
		case 2107: goto tr733;
		case 2314: goto tr66;
		case 2363: goto tr66;
		case 2570: goto tr734;
		case 2619: goto tr735;
	}
	goto tr728;
tr737:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st172;
tr738:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st172;
tr739:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st172;
tr901:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st172;
tr729:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st172;
tr730:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st172;
tr731:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st172;
tr732:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st172;
st172:
	if ( ++p == pe )
		goto _test_eof172;
case 172:
#line 25883 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st172;
		case 32: goto st172;
		case 40: goto tr737;
		case 41: goto tr738;
		case 58: goto tr69;
		case 65: goto tr118;
		case 67: goto tr119;
		case 68: goto tr120;
		case 69: goto tr121;
		case 72: goto tr122;
		case 73: goto tr123;
		case 75: goto tr124;
		case 76: goto tr125;
		case 77: goto tr126;
		case 78: goto tr127;
		case 80: goto tr128;
		case 82: goto tr129;
		case 83: goto tr130;
		case 84: goto tr131;
		case 85: goto tr132;
		case 92: goto tr74;
		case 97: goto tr118;
		case 99: goto tr119;
		case 100: goto tr120;
		case 101: goto tr121;
		case 104: goto tr122;
		case 105: goto tr123;
		case 107: goto tr124;
		case 108: goto tr125;
		case 109: goto tr126;
		case 110: goto tr127;
		case 112: goto tr128;
		case 114: goto tr129;
		case 115: goto tr130;
		case 116: goto tr131;
		case 117: goto tr132;
		case 2058: goto tr739;
		case 2107: goto st247;
		case 2314: goto tr69;
		case 2363: goto tr69;
		case 2570: goto tr741;
		case 2619: goto tr742;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr69;
	} else if ( _widec > 47 ) {
		if ( _widec > 57 ) {
			if ( 60 <= _widec )
				goto tr69;
		} else if ( _widec >= 48 )
			goto tr117;
	} else
		goto tr69;
	goto tr593;
tr118:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 173;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 173;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 173;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 173;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 173;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 173;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 173;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 173;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 173;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 173;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 173;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 173;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 173;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 173;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 173;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 173;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 173;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 173;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 173;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 173;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 173;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 173;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 173;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 173;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 173;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 173;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 173;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 173;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 173;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 173;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st173;
st173:
	if ( ++p == pe )
		goto _test_eof173;
case 173:
#line 26056 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr744;
		case 32: goto tr744;
		case 40: goto tr745;
		case 41: goto tr746;
		case 65: goto st231;
		case 70: goto st234;
		case 80: goto st238;
		case 97: goto st231;
		case 102: goto st234;
		case 112: goto st238;
		case 1802: goto tr83;
		case 1851: goto tr84;
		case 2058: goto tr747;
		case 2107: goto tr748;
		case 2314: goto tr749;
		case 2363: goto tr750;
		case 2570: goto tr751;
		case 2619: goto tr752;
	}
	goto tr743;
tr754:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st174;
tr755:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st174;
tr744:
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st174;
tr745:
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st174;
tr746:
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st174;
st174:
	if ( ++p == pe )
		goto _test_eof174;
case 174:
#line 26177 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st174;
		case 32: goto st174;
		case 40: goto tr754;
		case 41: goto tr755;
		case 92: goto tr74;
		case 1802: goto tr89;
		case 1851: goto st8;
		case 2058: goto tr756;
		case 2107: goto st13;
		case 2314: goto tr108;
		case 2363: goto tr109;
		case 2570: goto tr757;
		case 2619: goto tr110;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr69;
	} else if ( _widec > 58 ) {
		if ( 60 <= _widec )
			goto tr69;
	} else
		goto tr69;
	goto tr79;
tr101:
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 1144;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 1144;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 1144;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 1144;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 1144;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 1144;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 1144;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 1144;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 1144;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 1144;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 1144;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 1144;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 1144;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 1144;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 1144;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 1144;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 1144;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 1144;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 1144;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 1144;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 1144;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 1144;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 1144;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 1144;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 1144;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 1144;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 1144;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 1144;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 1144;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 1144;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1144; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1144; goto _out;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1144;
tr108:
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 1144;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 1144;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 1144;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 1144;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 1144;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 1144;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 1144;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 1144;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 1144;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 1144;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 1144;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 1144;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 1144;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 1144;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 1144;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 1144;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 1144;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 1144;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 1144;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 1144;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 1144;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 1144;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 1144;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 1144;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 1144;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 1144;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 1144;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 1144;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 1144;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 1144;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1144; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1144; goto _out;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1144;
tr135:
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 1144;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 1144;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 1144;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 1144;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 1144;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 1144;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 1144;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 1144;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 1144;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 1144;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 1144;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 1144;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 1144;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 1144;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 1144;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 1144;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 1144;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 1144;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 1144;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 1144;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 1144;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 1144;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 1144;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 1144;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 1144;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 1144;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 1144;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 1144;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 1144;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 1144;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1144;
tr749:
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 1144;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 1144;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 1144;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 1144;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 1144;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 1144;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 1144;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 1144;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 1144;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 1144;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 1144;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 1144;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 1144;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 1144;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 1144;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 1144;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 1144;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 1144;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 1144;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 1144;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 1144;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 1144;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 1144;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 1144;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 1144;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 1144;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 1144;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 1144;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 1144;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 1144;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1144; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1144; goto _out;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1144;
tr3679:
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 1144;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 1144;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 1144;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 1144;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 1144;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 1144;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 1144;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 1144;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 1144;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 1144;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 1144;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 1144;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 1144;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 1144;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 1144;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 1144;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 1144;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 1144;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 1144;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 1144;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 1144;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 1144;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 1144;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 1144;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 1144;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 1144;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 1144;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 1144;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 1144;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 1144;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1144;
st1144:
	if ( ++p == pe )
		goto _test_eof1144;
case 1144:
#line 26762 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3734;
		case 32: goto tr3734;
		case 36: goto st153;
		case 40: goto tr3735;
		case 41: goto tr3736;
		case 42: goto tr3666;
		case 92: goto tr3666;
		case 95: goto tr3666;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr3737;
		case 1083: goto tr3738;
	}
	if ( _widec < 64 ) {
		if ( 45 <= _widec && _widec <= 57 )
			goto tr3666;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr3666;
	} else
		goto tr3666;
	goto tr790;
tr759:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st175;
tr760:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st175;
tr828:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st175;
tr829:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st175;
tr830:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st175;
tr791:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st175;
tr792:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st175;
tr793:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st175;
tr3734:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
	goto st175;
tr3735:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
	goto st175;
tr3736:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
	goto st175;
st175:
	if ( ++p == pe )
		goto _test_eof175;
case 175:
#line 26968 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st175;
		case 32: goto st175;
		case 40: goto tr759;
		case 41: goto tr760;
		case 65: goto tr5;
		case 67: goto tr6;
		case 68: goto tr7;
		case 69: goto tr8;
		case 72: goto tr9;
		case 73: goto tr10;
		case 75: goto tr11;
		case 76: goto tr12;
		case 77: goto tr13;
		case 78: goto tr14;
		case 80: goto tr15;
		case 82: goto tr16;
		case 83: goto tr17;
		case 84: goto tr18;
		case 85: goto tr19;
		case 97: goto tr5;
		case 99: goto tr6;
		case 100: goto tr7;
		case 101: goto tr8;
		case 104: goto tr9;
		case 105: goto tr10;
		case 107: goto tr11;
		case 108: goto tr12;
		case 109: goto tr13;
		case 110: goto tr14;
		case 112: goto tr15;
		case 114: goto tr16;
		case 115: goto tr17;
		case 116: goto tr18;
		case 117: goto tr19;
		case 778: goto tr89;
		case 827: goto st8;
		case 1034: goto tr761;
		case 1083: goto st176;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr4;
	goto tr0;
tr832:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st176;
tr763:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st176;
tr837:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st176;
tr795:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st176;
tr3738:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
	goto st176;
st176:
	if ( ++p == pe )
		goto _test_eof176;
case 176:
#line 27083 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 778: goto tr92;
		case 1034: goto tr764;
	}
	if ( _widec > 895 ) {
		if ( 896 <= _widec && _widec <= 1151 )
			goto tr763;
	} else if ( _widec >= 640 )
		goto tr91;
	goto tr85;
tr109:
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 177;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 177;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 177;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 177;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 177;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 177;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 177;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 177;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 177;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 177;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 177;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 177;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 177;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 177;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 177;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 177;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 177;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 177;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 177;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 177;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 177;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 177;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 177;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 177;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 177;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 177;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 177;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 177;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 177;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 177;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st177;
tr102:
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 177;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 177;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 177;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 177;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 177;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 177;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 177;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 177;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 177;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 177;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 177;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 177;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 177;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 177;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 177;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 177;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 177;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 177;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 177;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 177;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 177;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 177;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 177;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 177;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 177;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 177;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 177;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 177;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 177;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 177;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st177;
tr750:
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 177;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 177;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 177;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 177;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 177;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 177;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 177;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 177;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 177;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 177;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 177;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 177;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 177;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 177;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 177;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 177;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 177;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 177;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 177;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 177;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 177;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 177;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 177;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 177;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 177;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 177;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 177;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 177;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 177;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 177;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st177;
st177:
	if ( ++p == pe )
		goto _test_eof177;
case 177:
#line 27387 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr765;
		case 32: goto tr765;
		case 40: goto tr766;
		case 41: goto tr767;
		case 778: goto tr768;
		case 827: goto tr769;
		case 1034: goto tr768;
		case 1083: goto tr769;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr91;
	} else if ( _widec > 58 ) {
		if ( 60 <= _widec )
			goto tr91;
	} else
		goto tr91;
	goto tr79;
tr770:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st178;
tr765:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st178;
tr766:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st178;
tr767:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st178;
tr771:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st178;
tr772:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st178;
st178:
	if ( ++p == pe )
		goto _test_eof178;
case 178:
#line 27520 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr770;
		case 32: goto tr770;
		case 40: goto tr771;
		case 41: goto tr772;
		case 778: goto tr92;
		case 827: goto tr91;
		case 1034: goto tr92;
		case 1083: goto tr91;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr91;
	} else if ( _widec > 58 ) {
		if ( 60 <= _widec )
			goto tr91;
	} else
		goto tr91;
	goto tr85;
tr751:
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 1145;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 1145;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 1145;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 1145;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 1145;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 1145;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 1145;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 1145;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 1145;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 1145;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 1145;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 1145;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 1145;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 1145;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 1145;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 1145;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 1145;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 1145;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 1145;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 1145;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 1145;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 1145;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 1145;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 1145;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 1145;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 1145;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 1145;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 1145;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 1145;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 1145;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1145; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1145; goto _out;}
		}
	}
	goto st1145;
tr757:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 1145;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 1145;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 1145;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 1145;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 1145;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 1145;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 1145;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 1145;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 1145;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 1145;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 1145;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 1145;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 1145;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 1145;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 1145;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 1145;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 1145;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 1145;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 1145;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 1145;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 1145;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 1145;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 1145;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 1145;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 1145;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 1145;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 1145;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 1145;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 1145;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 1145;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1145; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1145; goto _out;}
		}
	}
	goto st1145;
st1145:
	if ( ++p == pe )
		goto _test_eof1145;
case 1145:
#line 27795 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr3739;
		case 32: goto tr3739;
		case 36: goto tr3672;
		case 40: goto tr3740;
		case 41: goto tr3741;
		case 42: goto tr3675;
		case 58: goto tr69;
		case 92: goto tr3676;
		case 95: goto tr3675;
		case 1802: goto tr83;
		case 1851: goto tr84;
		case 2058: goto tr3737;
		case 2107: goto tr3742;
		case 2314: goto tr101;
		case 2363: goto tr102;
		case 2570: goto tr3737;
		case 2619: goto tr3743;
	}
	if ( _widec < 60 ) {
		if ( _widec < 11 ) {
			if ( _widec <= 8 )
				goto tr69;
		} else if ( _widec > 44 ) {
			if ( 45 <= _widec && _widec <= 57 )
				goto tr3675;
		} else
			goto tr69;
	} else if ( _widec > 63 ) {
		if ( _widec < 91 ) {
			if ( 64 <= _widec && _widec <= 90 )
				goto tr3675;
		} else if ( _widec > 96 ) {
			if ( _widec > 122 ) {
				if ( 123 <= _widec )
					goto tr69;
			} else if ( _widec >= 97 )
				goto tr3675;
		} else
			goto tr69;
	} else
		goto tr69;
	goto tr790;
tr774:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st179;
tr775:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st179;
tr902:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st179;
tr903:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st179;
tr904:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st179;
tr3739:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
	goto st179;
tr3740:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
	goto st179;
tr3741:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
	goto st179;
st179:
	if ( ++p == pe )
		goto _test_eof179;
case 179:
#line 27978 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st179;
		case 32: goto st179;
		case 40: goto tr774;
		case 41: goto tr775;
		case 58: goto tr69;
		case 65: goto tr118;
		case 67: goto tr119;
		case 68: goto tr120;
		case 69: goto tr121;
		case 72: goto tr122;
		case 73: goto tr123;
		case 75: goto tr124;
		case 76: goto tr125;
		case 77: goto tr126;
		case 78: goto tr127;
		case 80: goto tr128;
		case 82: goto tr129;
		case 83: goto tr130;
		case 84: goto tr131;
		case 85: goto tr132;
		case 92: goto tr74;
		case 97: goto tr118;
		case 99: goto tr119;
		case 100: goto tr120;
		case 101: goto tr121;
		case 104: goto tr122;
		case 105: goto tr123;
		case 107: goto tr124;
		case 108: goto tr125;
		case 109: goto tr126;
		case 110: goto tr127;
		case 112: goto tr128;
		case 114: goto tr129;
		case 115: goto tr130;
		case 116: goto tr131;
		case 117: goto tr132;
		case 1802: goto tr89;
		case 1851: goto st8;
		case 2058: goto tr761;
		case 2107: goto st194;
		case 2314: goto tr108;
		case 2363: goto tr109;
		case 2570: goto tr761;
		case 2619: goto tr777;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr69;
	} else if ( _widec > 47 ) {
		if ( _widec > 57 ) {
			if ( 60 <= _widec )
				goto tr69;
		} else if ( _widec >= 48 )
			goto tr117;
	} else
		goto tr69;
	goto tr114;
tr119:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 180;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 180;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 180;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 180;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 180;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 180;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 180;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 180;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 180;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 180;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 180;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 180;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 180;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 180;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 180;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 180;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 180;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 180;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 180;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 180;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 180;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 180;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 180;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 180;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 180;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 180;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 180;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 180;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 180;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 180;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st180;
st180:
	if ( ++p == pe )
		goto _test_eof180;
case 180:
#line 28153 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr80;
		case 32: goto tr80;
		case 40: goto tr81;
		case 41: goto tr82;
		case 65: goto st18;
		case 68: goto st22;
		case 69: goto st29;
		case 78: goto st32;
		case 97: goto st18;
		case 100: goto st22;
		case 101: goto st29;
		case 110: goto st32;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr83;
		case 1083: goto tr84;
	}
	goto tr743;
tr120:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 181;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 181;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 181;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 181;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 181;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 181;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 181;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 181;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 181;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 181;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 181;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 181;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 181;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 181;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 181;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 181;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 181;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 181;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 181;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 181;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 181;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 181;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 181;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 181;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 181;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 181;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 181;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 181;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 181;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 181;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st181;
st181:
	if ( ++p == pe )
		goto _test_eof181;
case 181:
#line 28283 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr80;
		case 32: goto tr80;
		case 40: goto tr81;
		case 41: goto tr82;
		case 72: goto st37;
		case 78: goto st41;
		case 83: goto st49;
		case 104: goto st37;
		case 110: goto st41;
		case 115: goto st49;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr83;
		case 1083: goto tr84;
	}
	goto tr743;
tr121:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 182;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 182;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 182;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 182;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 182;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 182;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 182;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 182;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 182;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 182;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 182;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 182;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 182;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 182;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 182;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 182;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 182;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 182;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 182;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 182;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 182;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 182;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 182;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 182;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 182;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 182;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 182;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 182;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 182;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 182;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st182;
st182:
	if ( ++p == pe )
		goto _test_eof182;
case 182:
#line 28411 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr80;
		case 32: goto tr80;
		case 40: goto tr81;
		case 41: goto tr82;
		case 85: goto st51;
		case 117: goto st51;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr83;
		case 1083: goto tr84;
	}
	goto tr743;
tr122:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 183;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 183;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 183;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 183;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 183;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 183;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 183;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 183;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 183;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 183;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 183;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 183;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 183;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 183;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 183;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 183;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 183;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 183;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 183;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 183;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 183;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 183;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 183;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 183;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 183;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 183;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 183;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 183;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 183;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 183;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st183;
st183:
	if ( ++p == pe )
		goto _test_eof183;
case 183:
#line 28535 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr80;
		case 32: goto tr80;
		case 40: goto tr81;
		case 41: goto tr82;
		case 73: goto st58;
		case 105: goto st58;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr83;
		case 1083: goto tr84;
	}
	goto tr743;
tr123:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 184;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 184;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 184;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 184;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 184;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 184;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 184;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 184;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 184;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 184;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 184;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 184;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 184;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 184;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 184;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 184;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 184;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 184;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 184;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 184;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 184;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 184;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 184;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 184;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 184;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 184;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 184;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 184;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 184;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 184;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st184;
st184:
	if ( ++p == pe )
		goto _test_eof184;
case 184:
#line 28659 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr80;
		case 32: goto tr80;
		case 40: goto tr81;
		case 41: goto tr82;
		case 78: goto st145;
		case 80: goto st66;
		case 110: goto st145;
		case 112: goto st66;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr83;
		case 1083: goto tr84;
	}
	goto tr743;
tr124:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 185;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 185;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 185;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 185;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 185;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 185;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 185;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 185;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 185;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 185;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 185;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 185;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 185;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 185;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 185;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 185;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 185;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 185;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 185;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 185;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 185;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 185;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 185;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 185;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 185;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 185;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 185;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 185;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 185;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 185;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st185;
st185:
	if ( ++p == pe )
		goto _test_eof185;
case 185:
#line 28785 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr80;
		case 32: goto tr80;
		case 40: goto tr81;
		case 41: goto tr82;
		case 69: goto st74;
		case 88: goto st76;
		case 101: goto st74;
		case 120: goto st76;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr83;
		case 1083: goto tr84;
	}
	goto tr743;
tr125:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 186;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 186;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 186;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 186;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 186;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 186;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 186;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 186;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 186;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 186;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 186;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 186;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 186;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 186;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 186;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 186;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 186;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 186;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 186;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 186;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 186;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 186;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 186;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 186;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 186;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 186;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 186;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 186;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 186;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 186;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st186;
st186:
	if ( ++p == pe )
		goto _test_eof186;
case 186:
#line 28911 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr80;
		case 32: goto tr80;
		case 40: goto tr81;
		case 41: goto tr82;
		case 51: goto st78;
		case 54: goto st80;
		case 66: goto st82;
		case 79: goto st83;
		case 80: goto st85;
		case 98: goto st82;
		case 111: goto st83;
		case 112: goto st85;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr83;
		case 1083: goto tr84;
	}
	goto tr743;
tr126:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 187;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 187;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 187;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 187;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 187;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 187;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 187;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 187;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 187;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 187;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 187;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 187;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 187;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 187;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 187;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 187;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 187;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 187;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 187;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 187;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 187;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 187;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 187;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 187;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 187;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 187;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 187;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 187;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 187;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 187;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st187;
st187:
	if ( ++p == pe )
		goto _test_eof187;
case 187:
#line 29041 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr80;
		case 32: goto tr80;
		case 40: goto tr81;
		case 41: goto tr82;
		case 73: goto st87;
		case 88: goto st91;
		case 105: goto st87;
		case 120: goto st91;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr83;
		case 1083: goto tr84;
	}
	goto tr743;
tr127:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 188;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 188;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 188;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 188;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 188;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 188;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 188;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 188;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 188;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 188;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 188;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 188;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 188;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 188;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 188;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 188;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 188;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 188;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 188;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 188;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 188;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 188;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 188;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 188;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 188;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 188;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 188;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 188;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 188;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 188;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st188;
st188:
	if ( ++p == pe )
		goto _test_eof188;
case 188:
#line 29167 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr80;
		case 32: goto tr80;
		case 40: goto tr81;
		case 41: goto tr82;
		case 65: goto st93;
		case 73: goto st97;
		case 83: goto st99;
		case 97: goto st93;
		case 105: goto st97;
		case 115: goto st99;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr83;
		case 1083: goto tr84;
	}
	goto tr743;
tr128:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 189;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 189;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 189;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 189;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 189;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 189;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 189;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 189;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 189;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 189;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 189;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 189;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 189;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 189;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 189;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 189;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 189;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 189;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 189;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 189;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 189;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 189;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 189;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 189;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 189;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 189;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 189;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 189;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 189;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 189;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st189;
st189:
	if ( ++p == pe )
		goto _test_eof189;
case 189:
#line 29295 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr80;
		case 32: goto tr80;
		case 40: goto tr81;
		case 41: goto tr82;
		case 84: goto st109;
		case 116: goto st109;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr83;
		case 1083: goto tr84;
	}
	goto tr743;
tr129:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 190;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 190;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 190;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 190;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 190;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 190;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 190;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 190;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 190;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 190;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 190;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 190;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 190;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 190;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 190;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 190;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 190;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 190;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 190;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 190;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 190;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 190;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 190;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 190;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 190;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 190;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 190;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 190;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 190;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 190;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st190;
st190:
	if ( ++p == pe )
		goto _test_eof190;
case 190:
#line 29419 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr80;
		case 32: goto tr80;
		case 40: goto tr81;
		case 41: goto tr82;
		case 80: goto st112;
		case 82: goto st113;
		case 84: goto st117;
		case 112: goto st112;
		case 114: goto st113;
		case 116: goto st117;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr83;
		case 1083: goto tr84;
	}
	goto tr743;
tr130:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 191;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 191;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 191;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 191;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 191;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 191;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 191;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 191;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 191;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 191;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 191;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 191;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 191;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 191;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 191;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 191;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 191;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 191;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 191;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 191;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 191;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 191;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 191;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 191;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 191;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 191;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 191;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 191;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 191;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 191;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st191;
st191:
	if ( ++p == pe )
		goto _test_eof191;
case 191:
#line 29547 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr80;
		case 32: goto tr80;
		case 40: goto tr81;
		case 41: goto tr82;
		case 79: goto st119;
		case 80: goto st121;
		case 82: goto st123;
		case 83: goto st125;
		case 111: goto st119;
		case 112: goto st121;
		case 114: goto st123;
		case 115: goto st125;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr83;
		case 1083: goto tr84;
	}
	goto tr743;
tr131:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 192;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 192;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 192;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 192;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 192;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 192;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 192;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 192;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 192;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 192;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 192;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 192;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 192;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 192;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 192;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 192;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 192;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 192;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 192;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 192;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 192;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 192;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 192;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 192;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 192;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 192;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 192;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 192;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 192;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 192;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st192;
st192:
	if ( ++p == pe )
		goto _test_eof192;
case 192:
#line 29677 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr80;
		case 32: goto tr80;
		case 40: goto tr81;
		case 41: goto tr82;
		case 76: goto st130;
		case 88: goto st133;
		case 89: goto st135;
		case 108: goto st130;
		case 120: goto st133;
		case 121: goto st135;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr83;
		case 1083: goto tr84;
	}
	goto tr743;
tr132:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 193;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 193;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 193;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 193;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 193;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 193;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 193;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 193;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 193;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 193;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 193;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 193;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 193;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 193;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 193;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 193;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 193;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 193;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 193;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 193;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 193;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 193;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 193;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 193;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 193;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 193;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 193;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 193;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 193;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 193;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st193;
st193:
	if ( ++p == pe )
		goto _test_eof193;
case 193:
#line 29805 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr80;
		case 32: goto tr80;
		case 40: goto tr81;
		case 41: goto tr82;
		case 82: goto st140;
		case 114: goto st140;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr83;
		case 1083: goto tr84;
	}
	goto tr743;
tr905:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st194;
tr778:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st194;
tr844:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st194;
tr814:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st194;
tr3742:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
	goto st194;
st194:
	if ( ++p == pe )
		goto _test_eof194;
case 194:
#line 29896 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 778: goto tr92;
		case 1034: goto tr779;
	}
	if ( _widec > 895 ) {
		if ( 896 <= _widec && _widec <= 1151 )
			goto tr778;
	} else if ( _widec >= 640 )
		goto tr91;
	goto tr79;
tr133:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1146;
tr879:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1146;
tr779:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1146; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1146; goto _out;}
		}
	}
	goto st1146;
tr820:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1146; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1146; goto _out;}
		}
	}
	goto st1146;
tr813:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1146; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1146; goto _out;}
		}
	}
	goto st1146;
tr3677:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st1146;
st1146:
	if ( ++p == pe )
		goto _test_eof1146;
case 1146:
#line 30078 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr3671;
		case 32: goto tr3671;
		case 36: goto tr3672;
		case 40: goto tr3673;
		case 41: goto tr3674;
		case 42: goto tr3675;
		case 58: goto tr69;
		case 65: goto tr3746;
		case 67: goto tr3747;
		case 68: goto tr3748;
		case 69: goto tr3749;
		case 72: goto tr3750;
		case 73: goto tr3751;
		case 75: goto tr3752;
		case 76: goto tr3753;
		case 77: goto tr3754;
		case 78: goto tr3755;
		case 80: goto tr3756;
		case 82: goto tr3757;
		case 83: goto tr3758;
		case 84: goto tr3759;
		case 85: goto tr3760;
		case 92: goto tr3676;
		case 95: goto tr3675;
		case 97: goto tr3746;
		case 99: goto tr3747;
		case 100: goto tr3748;
		case 101: goto tr3749;
		case 104: goto tr3750;
		case 105: goto tr3751;
		case 107: goto tr3752;
		case 108: goto tr3753;
		case 109: goto tr3754;
		case 110: goto tr3755;
		case 112: goto tr3756;
		case 114: goto tr3757;
		case 115: goto tr3758;
		case 116: goto tr3759;
		case 117: goto tr3760;
		case 1802: goto tr3667;
		case 1851: goto tr3668;
		case 2058: goto tr3677;
		case 2107: goto tr3678;
		case 2314: goto tr3679;
		case 2363: goto tr3680;
		case 2570: goto tr3681;
		case 2619: goto tr3682;
	}
	if ( _widec < 60 ) {
		if ( _widec < 11 ) {
			if ( _widec <= 8 )
				goto tr69;
		} else if ( _widec > 44 ) {
			if ( _widec > 47 ) {
				if ( 48 <= _widec && _widec <= 57 )
					goto tr3745;
			} else if ( _widec >= 45 )
				goto tr3675;
		} else
			goto tr69;
	} else if ( _widec > 63 ) {
		if ( _widec < 91 ) {
			if ( 64 <= _widec && _widec <= 90 )
				goto tr3675;
		} else if ( _widec > 96 ) {
			if ( _widec > 122 ) {
				if ( 123 <= _widec )
					goto tr69;
			} else if ( _widec >= 98 )
				goto tr3675;
		} else
			goto tr69;
	} else
		goto tr69;
	goto tr3744;
tr3672:
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 195;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 195;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 195;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 195;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 195;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 195;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 195;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 195;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 195;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 195;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 195;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 195;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 195;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 195;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 195;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 195;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 195;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 195;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 195;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 195;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 195;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 195;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 195;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 195;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 195;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 195;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 195;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 195;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 195;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 195;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st195;
st195:
	if ( ++p == pe )
		goto _test_eof195;
case 195:
#line 30263 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr80;
		case 32: goto tr80;
		case 40: goto tr81;
		case 41: goto tr82;
		case 73: goto tr676;
		case 79: goto tr677;
		case 84: goto tr678;
		case 105: goto tr676;
		case 111: goto tr677;
		case 116: goto tr678;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr83;
		case 1083: goto tr84;
	}
	goto tr780;
tr677:
#line 789 "scanner_body.rl"
	{
		ERR(ZS_OK);
	}
	goto st196;
st196:
	if ( ++p == pe )
		goto _test_eof196;
case 196:
#line 30305 "scanner.c"
	switch( (*p) ) {
		case 82: goto st197;
		case 114: goto st197;
	}
	goto tr675;
st197:
	if ( ++p == pe )
		goto _test_eof197;
case 197:
	switch( (*p) ) {
		case 73: goto st198;
		case 105: goto st198;
	}
	goto tr675;
st198:
	if ( ++p == pe )
		goto _test_eof198;
case 198:
	switch( (*p) ) {
		case 71: goto st199;
		case 103: goto st199;
	}
	goto tr675;
st199:
	if ( ++p == pe )
		goto _test_eof199;
case 199:
	switch( (*p) ) {
		case 73: goto st200;
		case 105: goto st200;
	}
	goto tr675;
st200:
	if ( ++p == pe )
		goto _test_eof200;
case 200:
	switch( (*p) ) {
		case 78: goto st201;
		case 110: goto st201;
	}
	goto tr675;
st201:
	if ( ++p == pe )
		goto _test_eof201;
case 201:
	switch( (*p) ) {
		case 32: goto tr786;
		case 59: goto tr786;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr786;
	} else if ( (*p) >= 9 )
		goto tr786;
	goto tr675;
tr678:
#line 789 "scanner_body.rl"
	{
		ERR(ZS_OK);
	}
	goto st202;
st202:
	if ( ++p == pe )
		goto _test_eof202;
case 202:
#line 30371 "scanner.c"
	switch( (*p) ) {
		case 84: goto st203;
		case 116: goto st203;
	}
	goto tr675;
st203:
	if ( ++p == pe )
		goto _test_eof203;
case 203:
	switch( (*p) ) {
		case 76: goto st204;
		case 108: goto st204;
	}
	goto tr675;
st204:
	if ( ++p == pe )
		goto _test_eof204;
case 204:
	switch( (*p) ) {
		case 32: goto tr789;
		case 59: goto tr789;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr789;
	} else if ( (*p) >= 9 )
		goto tr789;
	goto tr675;
tr3675:
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 205;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 205;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 205;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 205;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 205;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 205;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 205;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 205;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 205;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 205;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 205;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 205;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 205;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 205;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 205;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 205;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 205;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 205;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 205;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 205;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 205;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 205;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 205;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 205;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 205;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 205;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 205;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 205;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 205;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 205;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 205;goto st271;} }
	goto st205;
st205:
	if ( ++p == pe )
		goto _test_eof205;
case 205:
#line 30495 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr791;
		case 32: goto tr791;
		case 40: goto tr792;
		case 41: goto tr793;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr794;
		case 1083: goto tr795;
	}
	goto tr790;
tr3745:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 206;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 206;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 206;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 206;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 206;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 206;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 206;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 206;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 206;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 206;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 206;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 206;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 206;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 206;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 206;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 206;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 206;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 206;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 206;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 206;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 206;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 206;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 206;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 206;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 206;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 206;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 206;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 206;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 206;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 206;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 206;goto st271;} }
	goto st206;
st206:
	if ( ++p == pe )
		goto _test_eof206;
case 206:
#line 30635 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr797;
		case 32: goto tr797;
		case 40: goto tr798;
		case 41: goto tr799;
		case 68: goto tr29;
		case 72: goto tr30;
		case 77: goto tr31;
		case 83: goto st167;
		case 87: goto tr33;
		case 100: goto tr29;
		case 104: goto tr30;
		case 109: goto tr31;
		case 115: goto st167;
		case 119: goto tr33;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr800;
		case 1083: goto tr801;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr28;
	goto tr796;
tr803:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st207;
tr804:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st207;
tr797:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st207;
tr798:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st207;
tr799:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st207;
st207:
	if ( ++p == pe )
		goto _test_eof207;
case 207:
#line 30773 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st207;
		case 32: goto st207;
		case 40: goto tr803;
		case 41: goto tr804;
		case 65: goto tr5;
		case 67: goto tr6;
		case 68: goto tr7;
		case 69: goto tr8;
		case 72: goto tr9;
		case 73: goto tr10;
		case 75: goto tr11;
		case 76: goto tr12;
		case 77: goto tr13;
		case 78: goto tr14;
		case 80: goto tr15;
		case 82: goto tr16;
		case 83: goto tr17;
		case 84: goto tr18;
		case 85: goto tr19;
		case 97: goto tr5;
		case 99: goto tr6;
		case 100: goto tr7;
		case 101: goto tr8;
		case 104: goto tr9;
		case 105: goto tr10;
		case 107: goto tr11;
		case 108: goto tr12;
		case 109: goto tr13;
		case 110: goto tr14;
		case 112: goto tr15;
		case 114: goto tr16;
		case 115: goto tr17;
		case 116: goto tr18;
		case 117: goto tr19;
		case 778: goto tr89;
		case 827: goto st8;
		case 1034: goto tr805;
		case 1083: goto st208;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr4;
	goto tr0;
tr807:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st208;
tr801:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st208;
st208:
	if ( ++p == pe )
		goto _test_eof208;
case 208:
#line 30863 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 778: goto tr92;
		case 1034: goto tr808;
	}
	if ( _widec > 895 ) {
		if ( 896 <= _widec && _widec <= 1151 )
			goto tr807;
	} else if ( _widec >= 640 )
		goto tr91;
	goto tr145;
tr3746:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 209;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 209;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 209;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 209;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 209;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 209;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 209;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 209;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 209;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 209;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 209;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 209;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 209;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 209;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 209;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 209;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 209;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 209;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 209;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 209;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 209;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 209;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 209;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 209;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 209;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 209;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 209;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 209;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 209;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 209;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 209;goto st271;} }
	goto st209;
st209:
	if ( ++p == pe )
		goto _test_eof209;
case 209:
#line 30998 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr810;
		case 32: goto tr810;
		case 40: goto tr811;
		case 41: goto tr812;
		case 65: goto st231;
		case 70: goto st234;
		case 80: goto st238;
		case 97: goto st231;
		case 102: goto st234;
		case 112: goto st238;
		case 1802: goto tr83;
		case 1851: goto tr84;
		case 2058: goto tr813;
		case 2107: goto tr814;
		case 2314: goto tr749;
		case 2363: goto tr750;
		case 2570: goto tr815;
		case 2619: goto tr816;
	}
	goto tr809;
tr818:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st210;
tr819:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st210;
tr810:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st210;
tr811:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st210;
tr812:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st210;
st210:
	if ( ++p == pe )
		goto _test_eof210;
case 210:
#line 31131 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st210;
		case 32: goto st210;
		case 40: goto tr818;
		case 41: goto tr819;
		case 58: goto tr69;
		case 65: goto tr118;
		case 67: goto tr119;
		case 68: goto tr120;
		case 69: goto tr121;
		case 72: goto tr122;
		case 73: goto tr123;
		case 75: goto tr124;
		case 76: goto tr125;
		case 77: goto tr126;
		case 78: goto tr127;
		case 80: goto tr128;
		case 82: goto tr129;
		case 83: goto tr130;
		case 84: goto tr131;
		case 85: goto tr132;
		case 92: goto tr74;
		case 97: goto tr118;
		case 99: goto tr119;
		case 100: goto tr120;
		case 101: goto tr121;
		case 104: goto tr122;
		case 105: goto tr123;
		case 107: goto tr124;
		case 108: goto tr125;
		case 109: goto tr126;
		case 110: goto tr127;
		case 112: goto tr128;
		case 114: goto tr129;
		case 115: goto tr130;
		case 116: goto tr131;
		case 117: goto tr132;
		case 1802: goto tr89;
		case 1851: goto st8;
		case 2058: goto tr820;
		case 2107: goto st194;
		case 2314: goto tr108;
		case 2363: goto tr109;
		case 2570: goto tr821;
		case 2619: goto tr777;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr69;
	} else if ( _widec > 47 ) {
		if ( _widec > 57 ) {
			if ( 60 <= _widec )
				goto tr69;
		} else if ( _widec >= 48 )
			goto tr117;
	} else
		goto tr69;
	goto tr114;
tr137:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 1147;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 1147;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 1147;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 1147;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 1147;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 1147;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 1147;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 1147;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 1147;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 1147;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 1147;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 1147;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 1147;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 1147;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 1147;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 1147;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 1147;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 1147;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 1147;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 1147;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 1147;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 1147;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 1147;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 1147;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 1147;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 1147;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 1147;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 1147;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 1147;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 1147;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st1147;
tr821:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 1147;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 1147;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 1147;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 1147;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 1147;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 1147;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 1147;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 1147;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 1147;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 1147;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 1147;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 1147;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 1147;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 1147;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 1147;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 1147;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 1147;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 1147;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 1147;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 1147;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 1147;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 1147;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 1147;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 1147;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 1147;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 1147;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 1147;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 1147;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 1147;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 1147;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1147; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1147; goto _out;}
		}
	}
	goto st1147;
tr815:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 1147;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 1147;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 1147;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 1147;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 1147;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 1147;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 1147;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 1147;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 1147;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 1147;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 1147;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 1147;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 1147;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 1147;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 1147;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 1147;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 1147;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 1147;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 1147;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 1147;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 1147;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 1147;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 1147;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 1147;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 1147;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 1147;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 1147;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 1147;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 1147;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 1147;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 2048 "scanner_body.rl"
	{
		if (rdata_tail - s->r_data > UINT16_MAX) {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
		s->r_data_length = rdata_tail - s->r_data;

		s->state = ZS_STATE_DATA;

		// Execute the record callback.
		if (s->process.automatic) {
			if (s->process.record != NULL) {
				s->process.record(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; cs = 1147; goto _out;}
				}
			}
		} else {
			// Return if external processing.
			p--; {p++; cs = 1147; goto _out;}
		}
	}
	goto st1147;
tr3681:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 1147;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 1147;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 1147;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 1147;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 1147;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 1147;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 1147;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 1147;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 1147;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 1147;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 1147;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 1147;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 1147;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 1147;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 1147;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 1147;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 1147;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 1147;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 1147;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 1147;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 1147;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 1147;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 1147;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 1147;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 1147;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 1147;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 1147;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 1147;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 1147;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 1147;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st1147;
st1147:
	if ( ++p == pe )
		goto _test_eof1147;
case 1147:
#line 31643 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr3739;
		case 32: goto tr3739;
		case 36: goto tr3672;
		case 40: goto tr3740;
		case 41: goto tr3741;
		case 42: goto tr3675;
		case 58: goto tr69;
		case 65: goto tr3746;
		case 67: goto tr3747;
		case 68: goto tr3748;
		case 69: goto tr3749;
		case 72: goto tr3750;
		case 73: goto tr3751;
		case 75: goto tr3752;
		case 76: goto tr3753;
		case 77: goto tr3754;
		case 78: goto tr3755;
		case 80: goto tr3756;
		case 82: goto tr3757;
		case 83: goto tr3758;
		case 84: goto tr3759;
		case 85: goto tr3760;
		case 92: goto tr3676;
		case 95: goto tr3675;
		case 97: goto tr3746;
		case 99: goto tr3747;
		case 100: goto tr3748;
		case 101: goto tr3749;
		case 104: goto tr3750;
		case 105: goto tr3751;
		case 107: goto tr3752;
		case 108: goto tr3753;
		case 109: goto tr3754;
		case 110: goto tr3755;
		case 112: goto tr3756;
		case 114: goto tr3757;
		case 115: goto tr3758;
		case 116: goto tr3759;
		case 117: goto tr3760;
		case 1802: goto tr83;
		case 1851: goto tr84;
		case 2058: goto tr3761;
		case 2107: goto tr3742;
		case 2314: goto tr101;
		case 2363: goto tr102;
		case 2570: goto tr3761;
		case 2619: goto tr3743;
	}
	if ( _widec < 60 ) {
		if ( _widec < 11 ) {
			if ( _widec <= 8 )
				goto tr69;
		} else if ( _widec > 44 ) {
			if ( _widec > 47 ) {
				if ( 48 <= _widec && _widec <= 57 )
					goto tr3745;
			} else if ( _widec >= 45 )
				goto tr3675;
		} else
			goto tr69;
	} else if ( _widec > 63 ) {
		if ( _widec < 91 ) {
			if ( 64 <= _widec && _widec <= 90 )
				goto tr3675;
		} else if ( _widec > 96 ) {
			if ( _widec > 122 ) {
				if ( 123 <= _widec )
					goto tr69;
			} else if ( _widec >= 98 )
				goto tr3675;
		} else
			goto tr69;
	} else
		goto tr69;
	goto tr3744;
tr3747:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 211;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 211;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 211;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 211;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 211;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 211;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 211;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 211;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 211;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 211;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 211;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 211;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 211;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 211;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 211;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 211;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 211;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 211;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 211;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 211;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 211;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 211;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 211;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 211;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 211;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 211;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 211;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 211;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 211;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 211;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 211;goto st271;} }
	goto st211;
st211:
	if ( ++p == pe )
		goto _test_eof211;
case 211:
#line 31843 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr791;
		case 32: goto tr791;
		case 40: goto tr792;
		case 41: goto tr793;
		case 65: goto st18;
		case 68: goto st22;
		case 69: goto st29;
		case 78: goto st32;
		case 97: goto st18;
		case 100: goto st22;
		case 101: goto st29;
		case 110: goto st32;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr794;
		case 1083: goto tr795;
	}
	goto tr809;
tr3748:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 212;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 212;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 212;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 212;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 212;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 212;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 212;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 212;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 212;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 212;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 212;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 212;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 212;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 212;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 212;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 212;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 212;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 212;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 212;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 212;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 212;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 212;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 212;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 212;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 212;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 212;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 212;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 212;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 212;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 212;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 212;goto st271;} }
	goto st212;
st212:
	if ( ++p == pe )
		goto _test_eof212;
case 212:
#line 31980 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr791;
		case 32: goto tr791;
		case 40: goto tr792;
		case 41: goto tr793;
		case 72: goto st37;
		case 78: goto st41;
		case 83: goto st49;
		case 104: goto st37;
		case 110: goto st41;
		case 115: goto st49;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr794;
		case 1083: goto tr795;
	}
	goto tr809;
tr3749:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 213;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 213;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 213;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 213;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 213;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 213;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 213;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 213;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 213;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 213;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 213;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 213;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 213;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 213;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 213;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 213;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 213;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 213;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 213;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 213;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 213;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 213;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 213;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 213;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 213;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 213;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 213;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 213;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 213;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 213;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 213;goto st271;} }
	goto st213;
st213:
	if ( ++p == pe )
		goto _test_eof213;
case 213:
#line 32115 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr791;
		case 32: goto tr791;
		case 40: goto tr792;
		case 41: goto tr793;
		case 85: goto st51;
		case 117: goto st51;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr794;
		case 1083: goto tr795;
	}
	goto tr809;
tr3750:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 214;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 214;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 214;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 214;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 214;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 214;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 214;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 214;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 214;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 214;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 214;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 214;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 214;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 214;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 214;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 214;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 214;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 214;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 214;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 214;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 214;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 214;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 214;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 214;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 214;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 214;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 214;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 214;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 214;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 214;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 214;goto st271;} }
	goto st214;
st214:
	if ( ++p == pe )
		goto _test_eof214;
case 214:
#line 32246 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr791;
		case 32: goto tr791;
		case 40: goto tr792;
		case 41: goto tr793;
		case 73: goto st58;
		case 105: goto st58;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr794;
		case 1083: goto tr795;
	}
	goto tr809;
tr3751:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 215;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 215;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 215;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 215;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 215;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 215;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 215;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 215;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 215;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 215;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 215;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 215;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 215;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 215;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 215;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 215;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 215;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 215;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 215;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 215;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 215;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 215;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 215;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 215;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 215;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 215;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 215;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 215;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 215;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 215;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 215;goto st271;} }
	goto st215;
st215:
	if ( ++p == pe )
		goto _test_eof215;
case 215:
#line 32377 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr791;
		case 32: goto tr791;
		case 40: goto tr792;
		case 41: goto tr793;
		case 78: goto st145;
		case 80: goto st66;
		case 110: goto st145;
		case 112: goto st66;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr794;
		case 1083: goto tr795;
	}
	goto tr809;
tr3752:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 216;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 216;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 216;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 216;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 216;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 216;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 216;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 216;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 216;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 216;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 216;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 216;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 216;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 216;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 216;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 216;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 216;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 216;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 216;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 216;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 216;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 216;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 216;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 216;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 216;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 216;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 216;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 216;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 216;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 216;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 216;goto st271;} }
	goto st216;
st216:
	if ( ++p == pe )
		goto _test_eof216;
case 216:
#line 32510 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr791;
		case 32: goto tr791;
		case 40: goto tr792;
		case 41: goto tr793;
		case 69: goto st74;
		case 88: goto st76;
		case 101: goto st74;
		case 120: goto st76;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr794;
		case 1083: goto tr795;
	}
	goto tr809;
tr3753:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 217;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 217;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 217;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 217;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 217;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 217;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 217;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 217;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 217;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 217;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 217;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 217;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 217;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 217;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 217;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 217;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 217;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 217;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 217;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 217;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 217;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 217;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 217;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 217;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 217;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 217;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 217;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 217;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 217;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 217;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 217;goto st271;} }
	goto st217;
st217:
	if ( ++p == pe )
		goto _test_eof217;
case 217:
#line 32643 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr791;
		case 32: goto tr791;
		case 40: goto tr792;
		case 41: goto tr793;
		case 51: goto st78;
		case 54: goto st80;
		case 66: goto st82;
		case 79: goto st83;
		case 80: goto st85;
		case 98: goto st82;
		case 111: goto st83;
		case 112: goto st85;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr794;
		case 1083: goto tr795;
	}
	goto tr809;
tr3754:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 218;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 218;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 218;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 218;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 218;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 218;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 218;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 218;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 218;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 218;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 218;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 218;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 218;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 218;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 218;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 218;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 218;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 218;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 218;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 218;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 218;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 218;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 218;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 218;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 218;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 218;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 218;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 218;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 218;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 218;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 218;goto st271;} }
	goto st218;
st218:
	if ( ++p == pe )
		goto _test_eof218;
case 218:
#line 32780 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr791;
		case 32: goto tr791;
		case 40: goto tr792;
		case 41: goto tr793;
		case 73: goto st87;
		case 88: goto st91;
		case 105: goto st87;
		case 120: goto st91;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr794;
		case 1083: goto tr795;
	}
	goto tr809;
tr3755:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 219;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 219;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 219;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 219;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 219;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 219;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 219;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 219;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 219;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 219;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 219;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 219;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 219;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 219;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 219;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 219;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 219;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 219;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 219;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 219;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 219;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 219;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 219;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 219;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 219;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 219;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 219;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 219;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 219;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 219;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 219;goto st271;} }
	goto st219;
st219:
	if ( ++p == pe )
		goto _test_eof219;
case 219:
#line 32913 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr791;
		case 32: goto tr791;
		case 40: goto tr792;
		case 41: goto tr793;
		case 65: goto st93;
		case 73: goto st97;
		case 83: goto st99;
		case 97: goto st93;
		case 105: goto st97;
		case 115: goto st99;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr794;
		case 1083: goto tr795;
	}
	goto tr809;
tr3756:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 220;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 220;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 220;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 220;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 220;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 220;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 220;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 220;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 220;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 220;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 220;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 220;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 220;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 220;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 220;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 220;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 220;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 220;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 220;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 220;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 220;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 220;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 220;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 220;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 220;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 220;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 220;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 220;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 220;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 220;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 220;goto st271;} }
	goto st220;
st220:
	if ( ++p == pe )
		goto _test_eof220;
case 220:
#line 33048 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr791;
		case 32: goto tr791;
		case 40: goto tr792;
		case 41: goto tr793;
		case 84: goto st109;
		case 116: goto st109;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr794;
		case 1083: goto tr795;
	}
	goto tr809;
tr3757:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 221;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 221;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 221;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 221;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 221;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 221;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 221;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 221;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 221;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 221;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 221;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 221;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 221;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 221;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 221;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 221;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 221;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 221;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 221;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 221;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 221;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 221;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 221;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 221;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 221;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 221;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 221;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 221;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 221;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 221;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 221;goto st271;} }
	goto st221;
st221:
	if ( ++p == pe )
		goto _test_eof221;
case 221:
#line 33179 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr791;
		case 32: goto tr791;
		case 40: goto tr792;
		case 41: goto tr793;
		case 80: goto st112;
		case 82: goto st113;
		case 84: goto st117;
		case 112: goto st112;
		case 114: goto st113;
		case 116: goto st117;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr794;
		case 1083: goto tr795;
	}
	goto tr809;
tr3758:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 222;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 222;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 222;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 222;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 222;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 222;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 222;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 222;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 222;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 222;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 222;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 222;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 222;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 222;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 222;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 222;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 222;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 222;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 222;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 222;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 222;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 222;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 222;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 222;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 222;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 222;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 222;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 222;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 222;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 222;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 222;goto st271;} }
	goto st222;
st222:
	if ( ++p == pe )
		goto _test_eof222;
case 222:
#line 33314 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr791;
		case 32: goto tr791;
		case 40: goto tr792;
		case 41: goto tr793;
		case 79: goto st119;
		case 80: goto st121;
		case 82: goto st123;
		case 83: goto st125;
		case 111: goto st119;
		case 112: goto st121;
		case 114: goto st123;
		case 115: goto st125;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr794;
		case 1083: goto tr795;
	}
	goto tr809;
tr3759:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 223;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 223;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 223;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 223;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 223;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 223;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 223;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 223;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 223;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 223;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 223;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 223;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 223;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 223;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 223;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 223;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 223;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 223;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 223;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 223;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 223;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 223;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 223;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 223;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 223;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 223;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 223;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 223;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 223;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 223;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 223;goto st271;} }
	goto st223;
st223:
	if ( ++p == pe )
		goto _test_eof223;
case 223:
#line 33451 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr791;
		case 32: goto tr791;
		case 40: goto tr792;
		case 41: goto tr793;
		case 76: goto st130;
		case 88: goto st133;
		case 89: goto st135;
		case 108: goto st130;
		case 120: goto st133;
		case 121: goto st135;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr794;
		case 1083: goto tr795;
	}
	goto tr809;
tr3760:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 224;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 224;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 224;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 224;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 224;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 224;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 224;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 224;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 224;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 224;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 224;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 224;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 224;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 224;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 224;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 224;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 224;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 224;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 224;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 224;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 224;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 224;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 224;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 224;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 224;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 224;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 224;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 224;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 224;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 224;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 224;goto st271;} }
	goto st224;
st224:
	if ( ++p == pe )
		goto _test_eof224;
case 224:
#line 33586 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr791;
		case 32: goto tr791;
		case 40: goto tr792;
		case 41: goto tr793;
		case 82: goto st140;
		case 114: goto st140;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr794;
		case 1083: goto tr795;
	}
	goto tr809;
tr3676:
#line 1973 "scanner_body.rl"
	{
		if (pe - p == 1) {
			*wrap = WRAP_DETECTED;
		}
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 225;goto st271;} }
	goto st225;
st225:
	if ( ++p == pe )
		goto _test_eof225;
case 225:
#line 33633 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr822;
		case 32: goto tr822;
		case 35: goto tr94;
		case 40: goto tr824;
		case 41: goto tr825;
		case 778: goto tr93;
		case 827: goto tr93;
		case 1034: goto tr826;
		case 1083: goto tr827;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr93;
	} else if ( _widec > 58 ) {
		if ( 60 <= _widec )
			goto tr93;
	} else
		goto tr93;
	goto tr823;
tr822:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 1978 "scanner_body.rl"
	{
		if (*wrap == WRAP_NONE) {
			p--;
		}
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 226;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 226;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 226;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 226;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 226;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 226;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 226;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 226;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 226;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 226;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 226;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 226;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 226;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 226;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 226;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 226;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 226;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 226;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 226;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 226;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 226;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 226;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 226;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 226;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 226;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 226;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 226;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 226;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 226;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 226;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st226;
tr824:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 1978 "scanner_body.rl"
	{
		if (*wrap == WRAP_NONE) {
			p--;
		}
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 226;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 226;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 226;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 226;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 226;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 226;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 226;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 226;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 226;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 226;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 226;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 226;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 226;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 226;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 226;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 226;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 226;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 226;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 226;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 226;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 226;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 226;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 226;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 226;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 226;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 226;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 226;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 226;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 226;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 226;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st226;
tr825:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 1978 "scanner_body.rl"
	{
		if (*wrap == WRAP_NONE) {
			p--;
		}
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 226;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 226;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 226;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 226;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 226;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 226;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 226;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 226;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 226;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 226;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 226;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 226;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 226;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 226;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 226;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 226;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 226;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 226;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 226;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 226;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 226;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 226;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 226;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 226;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 226;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 226;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 226;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 226;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 226;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 226;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st226;
tr826:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1978 "scanner_body.rl"
	{
		if (*wrap == WRAP_NONE) {
			p--;
		}
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 226;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 226;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 226;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 226;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 226;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 226;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 226;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 226;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 226;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 226;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 226;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 226;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 226;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 226;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 226;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 226;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 226;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 226;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 226;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 226;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 226;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 226;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 226;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 226;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 226;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 226;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 226;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 226;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 226;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 226;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st226;
st226:
	if ( ++p == pe )
		goto _test_eof226;
case 226:
#line 34068 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr828;
		case 32: goto tr828;
		case 40: goto tr829;
		case 41: goto tr830;
		case 65: goto tr5;
		case 67: goto tr6;
		case 68: goto tr7;
		case 69: goto tr8;
		case 72: goto tr9;
		case 73: goto tr10;
		case 75: goto tr11;
		case 76: goto tr12;
		case 77: goto tr13;
		case 78: goto tr14;
		case 80: goto tr15;
		case 82: goto tr16;
		case 83: goto tr17;
		case 84: goto tr18;
		case 85: goto tr19;
		case 97: goto tr5;
		case 99: goto tr6;
		case 100: goto tr7;
		case 101: goto tr8;
		case 104: goto tr9;
		case 105: goto tr10;
		case 107: goto tr11;
		case 108: goto tr12;
		case 109: goto tr13;
		case 110: goto tr14;
		case 112: goto tr15;
		case 114: goto tr16;
		case 115: goto tr17;
		case 116: goto tr18;
		case 117: goto tr19;
		case 778: goto tr83;
		case 827: goto tr84;
		case 1034: goto tr831;
		case 1083: goto tr832;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr4;
	goto tr114;
tr827:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 1978 "scanner_body.rl"
	{
		if (*wrap == WRAP_NONE) {
			p--;
		}
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 227;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 227;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 227;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 227;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 227;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 227;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 227;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 227;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 227;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 227;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 227;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 227;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 227;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 227;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 227;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 227;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 227;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 227;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 227;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 227;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 227;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 227;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 227;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 227;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 227;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 227;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 227;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 227;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 227;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 227;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st227;
st227:
	if ( ++p == pe )
		goto _test_eof227;
case 227:
#line 34224 "scanner.c"
	_widec = (*p);
	if ( (*p) < 11 ) {
		if ( (*p) > 9 ) {
			if ( 10 <= (*p) && (*p) <= 10 ) {
				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 58 ) {
		if ( (*p) > 59 ) {
			if ( 60 <= (*p) )
 {				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else if ( (*p) >= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 777: goto tr80;
		case 778: goto tr83;
		case 800: goto tr80;
		case 808: goto tr81;
		case 809: goto tr82;
		case 827: goto tr84;
		case 1033: goto tr833;
		case 1034: goto tr834;
		case 1056: goto tr833;
		case 1064: goto tr835;
		case 1065: goto tr836;
		case 1083: goto tr837;
	}
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr697;
	goto tr79;
tr838:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st228;
tr833:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st228;
tr835:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st228;
tr836:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st228;
tr839:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st228;
tr840:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st228;
st228:
	if ( ++p == pe )
		goto _test_eof228;
case 228:
#line 34376 "scanner.c"
	_widec = (*p);
	if ( (*p) < 11 ) {
		if ( (*p) > 9 ) {
			if ( 10 <= (*p) && (*p) <= 10 ) {
				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 58 ) {
		if ( (*p) > 59 ) {
			if ( 60 <= (*p) )
 {				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else if ( (*p) >= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 777: goto st7;
		case 778: goto tr89;
		case 800: goto st7;
		case 808: goto tr87;
		case 809: goto tr88;
		case 827: goto st8;
		case 1033: goto tr838;
		case 1034: goto tr764;
		case 1056: goto tr838;
		case 1064: goto tr839;
		case 1065: goto tr840;
		case 1083: goto tr763;
	}
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr697;
	goto tr85;
tr777:
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 229;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 229;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 229;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 229;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 229;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 229;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 229;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 229;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 229;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 229;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 229;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 229;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 229;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 229;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 229;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 229;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 229;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 229;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 229;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 229;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 229;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 229;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 229;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 229;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 229;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 229;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 229;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 229;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 229;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 229;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st229;
tr906:
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 229;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 229;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 229;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 229;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 229;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 229;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 229;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 229;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 229;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 229;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 229;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 229;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 229;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 229;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 229;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 229;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 229;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 229;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 229;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 229;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 229;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 229;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 229;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 229;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 229;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 229;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 229;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 229;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 229;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 229;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st229;
tr816:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 229;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 229;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 229;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 229;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 229;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 229;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 229;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 229;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 229;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 229;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 229;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 229;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 229;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 229;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 229;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 229;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 229;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 229;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 229;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 229;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 229;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 229;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 229;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 229;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 229;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 229;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 229;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 229;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 229;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 229;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st229;
tr3743:
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 229;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 229;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 229;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 229;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 229;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 229;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 229;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 229;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 229;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 229;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 229;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 229;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 229;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 229;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 229;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 229;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 229;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 229;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 229;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 229;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 229;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 229;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 229;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 229;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 229;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 229;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 229;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 229;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 229;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 229;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
	goto st229;
st229:
	if ( ++p == pe )
		goto _test_eof229;
case 229:
#line 34801 "scanner.c"
	_widec = (*p);
	if ( (*p) < 11 ) {
		if ( (*p) > 9 ) {
			if ( 10 <= (*p) && (*p) <= 10 ) {
				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 58 ) {
		if ( (*p) > 59 ) {
			if ( 60 <= (*p) )
 {				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else if ( (*p) >= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 777: goto tr765;
		case 778: goto tr768;
		case 800: goto tr765;
		case 808: goto tr766;
		case 809: goto tr767;
		case 827: goto tr769;
		case 1033: goto tr841;
		case 1034: goto tr834;
		case 1056: goto tr841;
		case 1064: goto tr842;
		case 1065: goto tr843;
		case 1083: goto tr844;
	}
	if ( _widec > 895 ) {
		if ( 896 <= _widec && _widec <= 1151 )
			goto tr778;
	} else if ( _widec >= 640 )
		goto tr91;
	goto tr79;
tr845:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st230;
tr841:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st230;
tr842:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st230;
tr843:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st230;
tr846:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st230;
tr847:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st230;
st230:
	if ( ++p == pe )
		goto _test_eof230;
case 230:
#line 34956 "scanner.c"
	_widec = (*p);
	if ( (*p) < 11 ) {
		if ( (*p) > 9 ) {
			if ( 10 <= (*p) && (*p) <= 10 ) {
				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 58 ) {
		if ( (*p) > 59 ) {
			if ( 60 <= (*p) )
 {				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else if ( (*p) >= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 777: goto tr770;
		case 778: goto tr92;
		case 800: goto tr770;
		case 808: goto tr771;
		case 809: goto tr772;
		case 1033: goto tr845;
		case 1034: goto tr764;
		case 1056: goto tr845;
		case 1064: goto tr846;
		case 1065: goto tr847;
	}
	if ( _widec > 895 ) {
		if ( 896 <= _widec && _widec <= 1151 )
			goto tr778;
	} else if ( _widec >= 640 )
		goto tr91;
	goto tr79;
st231:
	if ( ++p == pe )
		goto _test_eof231;
case 231:
	switch( (*p) ) {
		case 65: goto st232;
		case 97: goto st232;
	}
	goto tr36;
st232:
	if ( ++p == pe )
		goto _test_eof232;
case 232:
	switch( (*p) ) {
		case 65: goto st233;
		case 97: goto st233;
	}
	goto tr36;
st233:
	if ( ++p == pe )
		goto _test_eof233;
case 233:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr850;
		case 32: goto tr850;
		case 40: goto tr851;
		case 41: goto tr852;
		case 2058: goto tr853;
		case 2107: goto tr854;
		case 2314: goto tr855;
		case 2363: goto tr855;
		case 2570: goto tr856;
		case 2619: goto tr857;
	}
	goto tr57;
st234:
	if ( ++p == pe )
		goto _test_eof234;
case 234:
	switch( (*p) ) {
		case 83: goto st235;
		case 115: goto st235;
	}
	goto tr36;
st235:
	if ( ++p == pe )
		goto _test_eof235;
case 235:
	switch( (*p) ) {
		case 68: goto st236;
		case 100: goto st236;
	}
	goto tr36;
st236:
	if ( ++p == pe )
		goto _test_eof236;
case 236:
	switch( (*p) ) {
		case 66: goto st237;
		case 98: goto st237;
	}
	goto tr36;
st237:
	if ( ++p == pe )
		goto _test_eof237;
case 237:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr861;
		case 32: goto tr861;
		case 40: goto tr862;
		case 41: goto tr863;
		case 2058: goto tr864;
		case 2107: goto tr865;
		case 2314: goto tr866;
		case 2363: goto tr866;
		case 2570: goto tr867;
		case 2619: goto tr868;
	}
	goto tr57;
st238:
	if ( ++p == pe )
		goto _test_eof238;
case 238:
	switch( (*p) ) {
		case 76: goto st239;
		case 108: goto st239;
	}
	goto tr36;
st239:
	if ( ++p == pe )
		goto _test_eof239;
case 239:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr870;
		case 32: goto tr870;
		case 40: goto tr871;
		case 41: goto tr872;
		case 2058: goto tr873;
		case 2107: goto tr874;
		case 2314: goto tr875;
		case 2363: goto tr875;
		case 2570: goto tr876;
		case 2619: goto tr877;
	}
	goto tr57;
tr878:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st240;
tr3678:
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st240;
st240:
	if ( ++p == pe )
		goto _test_eof240;
case 240:
#line 35201 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 778: goto tr674;
		case 1034: goto tr879;
	}
	if ( _widec > 895 ) {
		if ( 896 <= _widec && _widec <= 1151 )
			goto tr878;
	} else if ( _widec >= 640 )
		goto tr673;
	goto tr79;
tr136:
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 241;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 241;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 241;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 241;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 241;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 241;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 241;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 241;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 241;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 241;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 241;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 241;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 241;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 241;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 241;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 241;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 241;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 241;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 241;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 241;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 241;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 241;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 241;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 241;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 241;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 241;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 241;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 241;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 241;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 241;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st241;
tr3680:
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 241;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 241;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 241;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 241;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 241;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 241;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 241;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 241;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 241;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 241;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 241;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 241;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 241;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 241;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 241;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 241;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 241;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 241;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 241;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 241;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 241;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 241;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 241;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 241;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 241;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 241;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 241;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 241;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 241;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 241;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st241;
st241:
	if ( ++p == pe )
		goto _test_eof241;
case 241:
#line 35410 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr880;
		case 32: goto tr880;
		case 40: goto tr881;
		case 41: goto tr882;
		case 778: goto tr883;
		case 827: goto tr769;
		case 1034: goto tr883;
		case 1083: goto tr769;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr673;
	} else if ( _widec > 58 ) {
		if ( 60 <= _widec )
			goto tr673;
	} else
		goto tr673;
	goto tr79;
tr884:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st242;
tr880:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st242;
tr881:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st242;
tr882:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st242;
tr885:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st242;
tr886:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st242;
st242:
	if ( ++p == pe )
		goto _test_eof242;
case 242:
#line 35543 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr884;
		case 32: goto tr884;
		case 40: goto tr885;
		case 41: goto tr886;
		case 778: goto tr887;
		case 827: goto tr91;
		case 1034: goto tr887;
		case 1083: goto tr91;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr673;
	} else if ( _widec > 58 ) {
		if ( 60 <= _widec )
			goto tr673;
	} else
		goto tr673;
	goto tr85;
tr138:
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 243;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 243;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 243;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 243;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 243;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 243;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 243;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 243;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 243;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 243;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 243;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 243;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 243;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 243;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 243;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 243;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 243;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 243;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 243;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 243;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 243;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 243;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 243;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 243;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 243;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 243;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 243;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 243;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 243;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 243;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st243;
tr3682:
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 243;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 243;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 243;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 243;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 243;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 243;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 243;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 243;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 243;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 243;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 243;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 243;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 243;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 243;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 243;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 243;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 243;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 243;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 243;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 243;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 243;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 243;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 243;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 243;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 243;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 243;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 243;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 243;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 243;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 243;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st243;
st243:
	if ( ++p == pe )
		goto _test_eof243;
case 243:
#line 35761 "scanner.c"
	_widec = (*p);
	if ( (*p) < 11 ) {
		if ( (*p) > 9 ) {
			if ( 10 <= (*p) && (*p) <= 10 ) {
				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 58 ) {
		if ( (*p) > 59 ) {
			if ( 60 <= (*p) )
 {				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else if ( (*p) >= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 777: goto tr880;
		case 778: goto tr883;
		case 800: goto tr880;
		case 808: goto tr881;
		case 809: goto tr882;
		case 827: goto tr769;
		case 1033: goto tr888;
		case 1034: goto tr834;
		case 1056: goto tr888;
		case 1064: goto tr889;
		case 1065: goto tr890;
		case 1083: goto tr844;
	}
	if ( _widec > 895 ) {
		if ( 896 <= _widec && _widec <= 1151 )
			goto tr878;
	} else if ( _widec >= 640 )
		goto tr673;
	goto tr79;
tr891:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st244;
tr888:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st244;
tr889:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st244;
tr890:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st244;
tr892:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st244;
tr893:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st244;
st244:
	if ( ++p == pe )
		goto _test_eof244;
case 244:
#line 35916 "scanner.c"
	_widec = (*p);
	if ( (*p) < 11 ) {
		if ( (*p) > 9 ) {
			if ( 10 <= (*p) && (*p) <= 10 ) {
				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 58 ) {
		if ( (*p) > 59 ) {
			if ( 60 <= (*p) )
 {				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else if ( (*p) >= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 777: goto tr884;
		case 778: goto tr887;
		case 800: goto tr884;
		case 808: goto tr885;
		case 809: goto tr886;
		case 827: goto tr91;
		case 1033: goto tr891;
		case 1034: goto tr764;
		case 1056: goto tr891;
		case 1064: goto tr892;
		case 1065: goto tr893;
		case 1083: goto tr778;
	}
	if ( _widec > 895 ) {
		if ( 896 <= _widec && _widec <= 1151 )
			goto tr878;
	} else if ( _widec >= 640 )
		goto tr673;
	goto tr79;
tr110:
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 245;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 245;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 245;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 245;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 245;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 245;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 245;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 245;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 245;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 245;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 245;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 245;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 245;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 245;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 245;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 245;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 245;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 245;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 245;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 245;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 245;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 245;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 245;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 245;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 245;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 245;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 245;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 245;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 245;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 245;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st245;
tr103:
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 245;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 245;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 245;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 245;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 245;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 245;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 245;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 245;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 245;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 245;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 245;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 245;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 245;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 245;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 245;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 245;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 245;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 245;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 245;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 245;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 245;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 245;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 245;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 245;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 245;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 245;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 245;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 245;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 245;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 245;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st245;
tr752:
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 245;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 245;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 245;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 245;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 245;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 245;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 245;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 245;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 245;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 245;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 245;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 245;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 245;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 245;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 245;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 245;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 245;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 245;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 245;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 245;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 245;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 245;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 245;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 245;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 245;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 245;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 245;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 245;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 245;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 245;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st245;
st245:
	if ( ++p == pe )
		goto _test_eof245;
case 245:
#line 36244 "scanner.c"
	_widec = (*p);
	if ( (*p) < 11 ) {
		if ( (*p) > 9 ) {
			if ( 10 <= (*p) && (*p) <= 10 ) {
				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 58 ) {
		if ( (*p) > 59 ) {
			if ( 60 <= (*p) )
 {				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else if ( (*p) >= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 777: goto tr765;
		case 778: goto tr768;
		case 800: goto tr765;
		case 808: goto tr766;
		case 809: goto tr767;
		case 827: goto tr769;
		case 1033: goto tr894;
		case 1034: goto tr768;
		case 1056: goto tr894;
		case 1064: goto tr895;
		case 1065: goto tr896;
		case 1083: goto tr167;
	}
	if ( _widec > 895 ) {
		if ( 896 <= _widec && _widec <= 1151 )
			goto tr111;
	} else if ( _widec >= 640 )
		goto tr91;
	goto tr79;
tr897:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st246;
tr894:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st246;
tr895:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st246;
tr896:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st246;
tr898:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st246;
tr899:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st246;
st246:
	if ( ++p == pe )
		goto _test_eof246;
case 246:
#line 36399 "scanner.c"
	_widec = (*p);
	if ( (*p) < 11 ) {
		if ( (*p) > 9 ) {
			if ( 10 <= (*p) && (*p) <= 10 ) {
				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 58 ) {
		if ( (*p) > 59 ) {
			if ( 60 <= (*p) )
 {				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else if ( (*p) >= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 777: goto tr770;
		case 778: goto tr92;
		case 800: goto tr770;
		case 808: goto tr771;
		case 809: goto tr772;
		case 1033: goto tr897;
		case 1034: goto tr92;
		case 1056: goto tr897;
		case 1064: goto tr898;
		case 1065: goto tr899;
	}
	if ( _widec > 895 ) {
		if ( 896 <= _widec && _widec <= 1151 )
			goto tr111;
	} else if ( _widec >= 640 )
		goto tr91;
	goto tr79;
tr900:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st247;
tr733:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
	goto st247;
st247:
	if ( ++p == pe )
		goto _test_eof247;
case 247:
#line 36477 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr901;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr900;
	goto tr71;
tr741:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 248;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 248;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 248;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 248;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 248;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 248;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 248;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 248;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 248;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 248;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 248;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 248;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 248;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 248;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 248;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 248;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 248;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 248;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 248;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 248;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 248;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 248;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 248;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 248;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 248;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 248;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 248;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 248;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 248;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 248;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st248;
tr734:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 248;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 248;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 248;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 248;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 248;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 248;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 248;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 248;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 248;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 248;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 248;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 248;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 248;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 248;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 248;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 248;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 248;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 248;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 248;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 248;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 248;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 248;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 248;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 248;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 248;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 248;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 248;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 248;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 248;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 248;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st248;
st248:
	if ( ++p == pe )
		goto _test_eof248;
case 248:
#line 36694 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr902;
		case 32: goto tr902;
		case 40: goto tr903;
		case 41: goto tr904;
		case 58: goto tr69;
		case 65: goto tr118;
		case 67: goto tr119;
		case 68: goto tr120;
		case 69: goto tr121;
		case 72: goto tr122;
		case 73: goto tr123;
		case 75: goto tr124;
		case 76: goto tr125;
		case 77: goto tr126;
		case 78: goto tr127;
		case 80: goto tr128;
		case 82: goto tr129;
		case 83: goto tr130;
		case 84: goto tr131;
		case 85: goto tr132;
		case 92: goto tr74;
		case 97: goto tr118;
		case 99: goto tr119;
		case 100: goto tr120;
		case 101: goto tr121;
		case 104: goto tr122;
		case 105: goto tr123;
		case 107: goto tr124;
		case 108: goto tr125;
		case 109: goto tr126;
		case 110: goto tr127;
		case 112: goto tr128;
		case 114: goto tr129;
		case 115: goto tr130;
		case 116: goto tr131;
		case 117: goto tr132;
		case 1802: goto tr83;
		case 1851: goto tr84;
		case 2058: goto tr831;
		case 2107: goto tr905;
		case 2314: goto tr101;
		case 2363: goto tr102;
		case 2570: goto tr831;
		case 2619: goto tr906;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr69;
	} else if ( _widec > 47 ) {
		if ( _widec > 57 ) {
			if ( 60 <= _widec )
				goto tr69;
		} else if ( _widec >= 48 )
			goto tr117;
	} else
		goto tr69;
	goto tr114;
tr742:
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 249;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 249;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 249;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 249;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 249;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 249;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 249;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 249;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 249;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 249;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 249;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 249;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 249;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 249;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 249;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 249;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 249;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 249;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 249;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 249;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 249;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 249;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 249;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 249;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 249;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 249;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 249;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 249;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 249;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 249;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st249;
tr735:
#line 267 "scanner_body.rl"
	{
		s->r_owner_length = s->dname_tmp_length;
	}
#line 2000 "scanner_body.rl"
	{ s->r_type = KNOT_RRTYPE_A; }
#line 1705 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 1838 "scanner_body.rl"
	{
		p--;
		switch (s->r_type) {
		case KNOT_RRTYPE_A:
			{stack[top++] = 249;goto st634;}
		case KNOT_RRTYPE_NS:
		case KNOT_RRTYPE_CNAME:
		case KNOT_RRTYPE_PTR:
		case KNOT_RRTYPE_DNAME:
			{stack[top++] = 249;goto st636;}
		case KNOT_RRTYPE_SOA:
			{stack[top++] = 249;goto st638;}
		case KNOT_RRTYPE_HINFO:
			{stack[top++] = 249;goto st670;}
		case KNOT_RRTYPE_MINFO:
		case KNOT_RRTYPE_RP:
			{stack[top++] = 249;goto st675;}
		case KNOT_RRTYPE_MX:
		case KNOT_RRTYPE_AFSDB:
		case KNOT_RRTYPE_RT:
		case KNOT_RRTYPE_KX:
		case KNOT_RRTYPE_LP:
			{stack[top++] = 249;goto st680;}
		case KNOT_RRTYPE_TXT:
		case KNOT_RRTYPE_SPF:
			{stack[top++] = 249;goto st685;}
		case KNOT_RRTYPE_AAAA:
			{stack[top++] = 249;goto st689;}
		case KNOT_RRTYPE_LOC:
			{stack[top++] = 249;goto st691;}
		case KNOT_RRTYPE_SRV:
			{stack[top++] = 249;goto st746;}
		case KNOT_RRTYPE_NAPTR:
			{stack[top++] = 249;goto st757;}
		case KNOT_RRTYPE_CERT:
			{stack[top++] = 249;goto st774;}
		case KNOT_RRTYPE_APL:
			{stack[top++] = 249;goto st785;}
		case KNOT_RRTYPE_DS:
		case KNOT_RRTYPE_CDS:
			{stack[top++] = 249;goto st796;}
		case KNOT_RRTYPE_SSHFP:
			{stack[top++] = 249;goto st809;}
		case KNOT_RRTYPE_IPSECKEY:
			{stack[top++] = 249;goto st819;}
		case KNOT_RRTYPE_RRSIG:
			{stack[top++] = 249;goto st858;}
		case KNOT_RRTYPE_NSEC:
			{stack[top++] = 249;goto st1013;}
		case KNOT_RRTYPE_KEY:
		case KNOT_RRTYPE_DNSKEY:
		case KNOT_RRTYPE_CDNSKEY:
			{stack[top++] = 249;goto st1016;}
		case KNOT_RRTYPE_DHCID:
			{stack[top++] = 249;goto st1027;}
		case KNOT_RRTYPE_NSEC3:
			{stack[top++] = 249;goto st1029;}
		case KNOT_RRTYPE_NSEC3PARAM:
			{stack[top++] = 249;goto st1058;}
		case KNOT_RRTYPE_TLSA:
			{stack[top++] = 249;goto st1071;}
		case KNOT_RRTYPE_NID:
		case KNOT_RRTYPE_L64:
			{stack[top++] = 249;goto st1089;}
		case KNOT_RRTYPE_L32:
			{stack[top++] = 249;goto st1084;}
		case KNOT_RRTYPE_EUI48:
			{stack[top++] = 249;goto st1102;}
		case KNOT_RRTYPE_EUI64:
			{stack[top++] = 249;goto st1108;}
		case KNOT_RRTYPE_URI:
			{stack[top++] = 249;goto st1114;}
		case KNOT_RRTYPE_CAA:
			{stack[top++] = 249;goto st1122;}
		case KNOT_RRTYPE_LB:
			{stack[top++] = 249;goto st1130;}
		default:
			WARN(ZS_CANNOT_TEXT_DATA);
			{goto st269;}
		}
	}
	goto st249;
st249:
	if ( ++p == pe )
		goto _test_eof249;
case 249:
#line 36955 "scanner.c"
	_widec = (*p);
	if ( (*p) < 11 ) {
		if ( (*p) > 9 ) {
			if ( 10 <= (*p) && (*p) <= 10 ) {
				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 58 ) {
		if ( (*p) > 59 ) {
			if ( 60 <= (*p) )
 {				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else if ( (*p) >= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 777: goto tr80;
		case 778: goto tr83;
		case 800: goto tr80;
		case 808: goto tr81;
		case 809: goto tr82;
		case 827: goto tr84;
		case 1033: goto tr907;
		case 1034: goto tr834;
		case 1056: goto tr907;
		case 1064: goto tr908;
		case 1065: goto tr909;
		case 1083: goto tr844;
	}
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr900;
	goto tr79;
tr910:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st250;
tr907:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st250;
tr908:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st250;
tr909:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st250;
tr911:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st250;
tr912:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st250;
st250:
	if ( ++p == pe )
		goto _test_eof250;
case 250:
#line 37107 "scanner.c"
	_widec = (*p);
	if ( (*p) < 11 ) {
		if ( (*p) > 9 ) {
			if ( 10 <= (*p) && (*p) <= 10 ) {
				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 58 ) {
		if ( (*p) > 59 ) {
			if ( 60 <= (*p) )
 {				_widec = (short)(640 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			}
		} else if ( (*p) >= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 777: goto st7;
		case 778: goto tr89;
		case 800: goto st7;
		case 808: goto tr87;
		case 809: goto tr88;
		case 827: goto st8;
		case 1033: goto tr910;
		case 1034: goto tr764;
		case 1056: goto tr910;
		case 1064: goto tr911;
		case 1065: goto tr912;
		case 1083: goto tr778;
	}
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr900;
	goto tr79;
tr3688:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 251;goto st271;} }
	goto st251;
tr3707:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 251;goto st271;} }
	goto st251;
st251:
	if ( ++p == pe )
		goto _test_eof251;
case 251:
#line 37194 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr687;
		case 32: goto tr687;
		case 40: goto tr688;
		case 41: goto tr689;
		case 65: goto st18;
		case 68: goto st22;
		case 69: goto st29;
		case 78: goto st32;
		case 97: goto st18;
		case 100: goto st22;
		case 101: goto st29;
		case 110: goto st32;
		case 1034: goto tr690;
		case 1083: goto tr691;
	}
	goto tr913;
tr3689:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 252;goto st271;} }
	goto st252;
tr3708:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 252;goto st271;} }
	goto st252;
st252:
	if ( ++p == pe )
		goto _test_eof252;
case 252:
#line 37260 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr687;
		case 32: goto tr687;
		case 40: goto tr688;
		case 41: goto tr689;
		case 72: goto st37;
		case 78: goto st41;
		case 83: goto st49;
		case 104: goto st37;
		case 110: goto st41;
		case 115: goto st49;
		case 1034: goto tr690;
		case 1083: goto tr691;
	}
	goto tr913;
tr3690:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 253;goto st271;} }
	goto st253;
tr3709:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 253;goto st271;} }
	goto st253;
st253:
	if ( ++p == pe )
		goto _test_eof253;
case 253:
#line 37324 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr687;
		case 32: goto tr687;
		case 40: goto tr688;
		case 41: goto tr689;
		case 85: goto st51;
		case 117: goto st51;
		case 1034: goto tr690;
		case 1083: goto tr691;
	}
	goto tr913;
tr3691:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 254;goto st271;} }
	goto st254;
tr3710:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 254;goto st271;} }
	goto st254;
st254:
	if ( ++p == pe )
		goto _test_eof254;
case 254:
#line 37384 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr687;
		case 32: goto tr687;
		case 40: goto tr688;
		case 41: goto tr689;
		case 73: goto st58;
		case 105: goto st58;
		case 1034: goto tr690;
		case 1083: goto tr691;
	}
	goto tr913;
tr3711:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 255;goto st271;} }
	goto st255;
st255:
	if ( ++p == pe )
		goto _test_eof255;
case 255:
#line 37431 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr687;
		case 32: goto tr687;
		case 40: goto tr688;
		case 41: goto tr689;
		case 78: goto st145;
		case 80: goto st66;
		case 110: goto st145;
		case 112: goto st66;
		case 1034: goto tr690;
		case 1083: goto tr691;
	}
	goto tr913;
tr3693:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 256;goto st271;} }
	goto st256;
tr3712:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 256;goto st271;} }
	goto st256;
st256:
	if ( ++p == pe )
		goto _test_eof256;
case 256:
#line 37493 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr687;
		case 32: goto tr687;
		case 40: goto tr688;
		case 41: goto tr689;
		case 69: goto st74;
		case 88: goto st76;
		case 101: goto st74;
		case 120: goto st76;
		case 1034: goto tr690;
		case 1083: goto tr691;
	}
	goto tr913;
tr3694:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 257;goto st271;} }
	goto st257;
tr3713:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 257;goto st271;} }
	goto st257;
st257:
	if ( ++p == pe )
		goto _test_eof257;
case 257:
#line 37555 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr687;
		case 32: goto tr687;
		case 40: goto tr688;
		case 41: goto tr689;
		case 51: goto st78;
		case 54: goto st80;
		case 66: goto st82;
		case 79: goto st83;
		case 80: goto st85;
		case 98: goto st82;
		case 111: goto st83;
		case 112: goto st85;
		case 1034: goto tr690;
		case 1083: goto tr691;
	}
	goto tr913;
tr3695:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 258;goto st271;} }
	goto st258;
tr3714:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 258;goto st271;} }
	goto st258;
st258:
	if ( ++p == pe )
		goto _test_eof258;
case 258:
#line 37621 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr687;
		case 32: goto tr687;
		case 40: goto tr688;
		case 41: goto tr689;
		case 73: goto st87;
		case 88: goto st91;
		case 105: goto st87;
		case 120: goto st91;
		case 1034: goto tr690;
		case 1083: goto tr691;
	}
	goto tr913;
tr3696:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 259;goto st271;} }
	goto st259;
tr3715:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 259;goto st271;} }
	goto st259;
st259:
	if ( ++p == pe )
		goto _test_eof259;
case 259:
#line 37683 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr687;
		case 32: goto tr687;
		case 40: goto tr688;
		case 41: goto tr689;
		case 65: goto st93;
		case 73: goto st97;
		case 83: goto st99;
		case 97: goto st93;
		case 105: goto st97;
		case 115: goto st99;
		case 1034: goto tr690;
		case 1083: goto tr691;
	}
	goto tr913;
tr3697:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 260;goto st271;} }
	goto st260;
tr3716:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 260;goto st271;} }
	goto st260;
st260:
	if ( ++p == pe )
		goto _test_eof260;
case 260:
#line 37747 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr687;
		case 32: goto tr687;
		case 40: goto tr688;
		case 41: goto tr689;
		case 84: goto st109;
		case 116: goto st109;
		case 1034: goto tr690;
		case 1083: goto tr691;
	}
	goto tr913;
tr3698:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 261;goto st271;} }
	goto st261;
tr3717:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 261;goto st271;} }
	goto st261;
st261:
	if ( ++p == pe )
		goto _test_eof261;
case 261:
#line 37807 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr687;
		case 32: goto tr687;
		case 40: goto tr688;
		case 41: goto tr689;
		case 80: goto st112;
		case 82: goto st113;
		case 84: goto st117;
		case 112: goto st112;
		case 114: goto st113;
		case 116: goto st117;
		case 1034: goto tr690;
		case 1083: goto tr691;
	}
	goto tr913;
tr3699:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 262;goto st271;} }
	goto st262;
tr3718:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 262;goto st271;} }
	goto st262;
st262:
	if ( ++p == pe )
		goto _test_eof262;
case 262:
#line 37871 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr687;
		case 32: goto tr687;
		case 40: goto tr688;
		case 41: goto tr689;
		case 79: goto st119;
		case 80: goto st121;
		case 82: goto st123;
		case 83: goto st125;
		case 111: goto st119;
		case 112: goto st121;
		case 114: goto st123;
		case 115: goto st125;
		case 1034: goto tr690;
		case 1083: goto tr691;
	}
	goto tr913;
tr3700:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 263;goto st271;} }
	goto st263;
tr3719:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 263;goto st271;} }
	goto st263;
st263:
	if ( ++p == pe )
		goto _test_eof263;
case 263:
#line 37937 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr687;
		case 32: goto tr687;
		case 40: goto tr688;
		case 41: goto tr689;
		case 76: goto st130;
		case 88: goto st133;
		case 89: goto st135;
		case 108: goto st130;
		case 120: goto st133;
		case 121: goto st135;
		case 1034: goto tr690;
		case 1083: goto tr691;
	}
	goto tr913;
tr3701:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 264;goto st271;} }
	goto st264;
tr3720:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 812 "scanner_body.rl"
	{
		s->r_ttl = s->default_ttl;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 264;goto st271;} }
	goto st264;
st264:
	if ( ++p == pe )
		goto _test_eof264;
case 264:
#line 38001 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr687;
		case 32: goto tr687;
		case 40: goto tr688;
		case 41: goto tr689;
		case 82: goto st140;
		case 114: goto st140;
		case 1034: goto tr690;
		case 1083: goto tr691;
	}
	goto tr913;
tr914:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st265;
tr3670:
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st265;
tr3730:
#line 793 "scanner_body.rl"
	{
		NOERR;
	}
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st265;
st265:
	if ( ++p == pe )
		goto _test_eof265;
case 265:
#line 38071 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 778: goto tr674;
		case 1034: goto tr915;
	}
	if ( _widec > 895 ) {
		if ( 896 <= _widec && _widec <= 1151 )
			goto tr914;
	} else if ( _widec >= 640 )
		goto tr673;
	goto tr85;
tr916:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st266;
tr3703:
#line 270 "scanner_body.rl"
	{
		if (s->r_owner_length == 0) {
			WARN(ZS_BAD_PREVIOUS_OWNER);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st266;
st266:
	if ( ++p == pe )
		goto _test_eof266;
case 266:
#line 38129 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 778: goto tr674;
		case 1034: goto tr917;
	}
	if ( _widec > 895 ) {
		if ( 896 <= _widec && _widec <= 1151 )
			goto tr916;
	} else if ( _widec >= 640 )
		goto tr673;
	goto tr145;
tr3692:
#line 808 "scanner_body.rl"
	{
		s->r_class = s->default_class;
	}
#line 263 "scanner_body.rl"
	{
		s->dname = s->r_owner;
		s->r_owner_length = 0;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 267;goto st271;} }
	goto st267;
st267:
	if ( ++p == pe )
		goto _test_eof267;
case 267:
#line 38178 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr687;
		case 32: goto tr687;
		case 40: goto tr688;
		case 41: goto tr689;
		case 78: goto st63;
		case 80: goto st66;
		case 110: goto st63;
		case 112: goto st66;
		case 1034: goto tr690;
		case 1083: goto tr691;
	}
	goto tr913;
tr918:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st268;
tr144:
#line 820 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->r_ttl = (uint32_t)(s->number64);
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st268;
st268:
	if ( ++p == pe )
		goto _test_eof268;
case 268:
#line 38234 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 778: goto tr92;
		case 1034: goto tr919;
	}
	if ( _widec > 895 ) {
		if ( 896 <= _widec && _widec <= 1151 )
			goto tr918;
	} else if ( _widec >= 640 )
		goto tr91;
	goto tr145;
st269:
	if ( ++p == pe )
		goto _test_eof269;
case 269:
	if ( (*p) == 10 )
		goto tr921;
	goto tr920;
tr920:
#line 80 "scanner_body.rl"
	{
		s->buffer_length = 0;
	}
#line 83 "scanner_body.rl"
	{
		if ((*p) == '\r') {
			ERR(ZS_DOS_NEWLINE);
		}

		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st270;
tr922:
#line 83 "scanner_body.rl"
	{
		if ((*p) == '\r') {
			ERR(ZS_DOS_NEWLINE);
		}

		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st270;
st270:
	if ( ++p == pe )
		goto _test_eof270;
case 270:
#line 38305 "scanner.c"
	if ( (*p) == 10 )
		goto tr923;
	goto tr922;
tr921:
	cs = 1148;
#line 80 "scanner_body.rl"
	{
		s->buffer_length = 0;
	}
#line 92 "scanner_body.rl"
	{
		// Terminate the error context string.
		s->buffer[s->buffer_length++] = 0;

		// Error counter incrementation.
		s->error.counter++;

		// Initialize the fcall stack.
		top = 0;

		// Reset the multiline context.
		s->multiline = false;

		s->state = ZS_STATE_ERROR;

		// Execute the error callback.
		if (s->process.automatic) {
			if (s->process.error != NULL) {
				s->process.error(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; goto _out;}
				}
			}

			// Stop the scanner if fatal error.
			if (s->error.fatal) {
				{p++; goto _out;}
			}
			{goto st1138;}
		} else {
			// Return if external processing.
			p--; cs = 1138; {p++; goto _out;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto _again;
tr923:
	cs = 1148;
#line 92 "scanner_body.rl"
	{
		// Terminate the error context string.
		s->buffer[s->buffer_length++] = 0;

		// Error counter incrementation.
		s->error.counter++;

		// Initialize the fcall stack.
		top = 0;

		// Reset the multiline context.
		s->multiline = false;

		s->state = ZS_STATE_ERROR;

		// Execute the error callback.
		if (s->process.automatic) {
			if (s->process.error != NULL) {
				s->process.error(s);

				// Stop if required from the callback.
				if (s->state == ZS_STATE_STOP) {
					{p++; goto _out;}
				}
			}

			// Stop the scanner if fatal error.
			if (s->error.fatal) {
				{p++; goto _out;}
			}
			{goto st1138;}
		} else {
			// Return if external processing.
			p--; cs = 1138; {p++; goto _out;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto _again;
st1148:
	if ( ++p == pe )
		goto _test_eof1148;
case 1148:
#line 38405 "scanner.c"
	goto st0;
st271:
	if ( ++p == pe )
		goto _test_eof271;
case 271:
	switch( (*p) ) {
		case 42: goto tr925;
		case 46: goto tr926;
		case 64: goto st279;
		case 92: goto tr928;
		case 95: goto tr925;
	}
	if ( (*p) < 65 ) {
		if ( 45 <= (*p) && (*p) <= 57 )
			goto tr925;
	} else if ( (*p) > 90 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto tr925;
	} else
		goto tr925;
	goto tr924;
tr925:
#line 222 "scanner_body.rl"
	{
		s->item_length_position = 0;
		s->dname_tmp_length = 0;
	}
#line 135 "scanner_body.rl"
	{
		s->item_length = 0;
		s->item_length_position = s->dname_tmp_length++;
	}
#line 139 "scanner_body.rl"
	{
		// Check for maximum dname label length.
		if (s->item_length < MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length++] = (*p);
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st272;
tr930:
#line 139 "scanner_body.rl"
	{
		// Check for maximum dname label length.
		if (s->item_length < MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length++] = (*p);
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st272;
tr934:
#line 135 "scanner_body.rl"
	{
		s->item_length = 0;
		s->item_length_position = s->dname_tmp_length++;
	}
#line 139 "scanner_body.rl"
	{
		// Check for maximum dname label length.
		if (s->item_length < MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length++] = (*p);
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st272;
tr941:
#line 174 "scanner_body.rl"
	{
		s->dname_tmp_length++;
	}
#line 139 "scanner_body.rl"
	{
		// Check for maximum dname label length.
		if (s->item_length < MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length++] = (*p);
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st272;
st272:
	if ( ++p == pe )
		goto _test_eof272;
case 272:
#line 38502 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr929;
		case 42: goto tr930;
		case 46: goto tr931;
		case 59: goto tr929;
		case 92: goto st274;
		case 95: goto tr930;
	}
	if ( (*p) < 45 ) {
		if ( (*p) > 10 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr929;
		} else if ( (*p) >= 9 )
			goto tr929;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr930;
		} else if ( (*p) >= 65 )
			goto tr930;
	} else
		goto tr930;
	goto tr924;
tr929:
#line 149 "scanner_body.rl"
	{
		// Check for maximum dname length overflow after each label.
		// (at least the next label length must follow).
		if (s->dname_tmp_length < MAX_DNAME_LENGTH) {
			(s->dname)[s->item_length_position] =
				(uint8_t)(s->item_length);
		} else {
			WARN(ZS_DNAME_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 200 "scanner_body.rl"
	{
		// Check for (relative + origin) dname length overflow.
		if (s->dname_tmp_length + s->zone_origin_length <= MAX_DNAME_LENGTH) {
			memcpy(s->dname + s->dname_tmp_length,
			       s->zone_origin,
			       s->zone_origin_length);

			s->dname_tmp_length += s->zone_origin_length;
		} else {
			WARN(ZS_DNAME_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1149;
tr933:
#line 196 "scanner_body.rl"
	{
		// Enough room for the terminal label is guaranteed (_label_exit).
		(s->dname)[s->dname_tmp_length++] = 0;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1149;
tr940:
#line 174 "scanner_body.rl"
	{
		s->dname_tmp_length++;
	}
#line 149 "scanner_body.rl"
	{
		// Check for maximum dname length overflow after each label.
		// (at least the next label length must follow).
		if (s->dname_tmp_length < MAX_DNAME_LENGTH) {
			(s->dname)[s->item_length_position] =
				(uint8_t)(s->item_length);
		} else {
			WARN(ZS_DNAME_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 200 "scanner_body.rl"
	{
		// Check for (relative + origin) dname length overflow.
		if (s->dname_tmp_length + s->zone_origin_length <= MAX_DNAME_LENGTH) {
			memcpy(s->dname + s->dname_tmp_length,
			       s->zone_origin,
			       s->zone_origin_length);

			s->dname_tmp_length += s->zone_origin_length;
		} else {
			WARN(ZS_DNAME_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1149;
tr944:
#line 213 "scanner_body.rl"
	{
		// Copy already verified zone origin.
		memcpy(s->dname,
		       s->zone_origin,
		       s->zone_origin_length);

		s->dname_tmp_length = s->zone_origin_length;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1149;
st1149:
	if ( ++p == pe )
		goto _test_eof1149;
case 1149:
#line 38624 "scanner.c"
	goto st0;
tr931:
#line 149 "scanner_body.rl"
	{
		// Check for maximum dname length overflow after each label.
		// (at least the next label length must follow).
		if (s->dname_tmp_length < MAX_DNAME_LENGTH) {
			(s->dname)[s->item_length_position] =
				(uint8_t)(s->item_length);
		} else {
			WARN(ZS_DNAME_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st273;
tr942:
#line 174 "scanner_body.rl"
	{
		s->dname_tmp_length++;
	}
#line 149 "scanner_body.rl"
	{
		// Check for maximum dname length overflow after each label.
		// (at least the next label length must follow).
		if (s->dname_tmp_length < MAX_DNAME_LENGTH) {
			(s->dname)[s->item_length_position] =
				(uint8_t)(s->item_length);
		} else {
			WARN(ZS_DNAME_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st273;
st273:
	if ( ++p == pe )
		goto _test_eof273;
case 273:
#line 38662 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr933;
		case 42: goto tr934;
		case 45: goto tr934;
		case 59: goto tr933;
		case 92: goto tr935;
		case 95: goto tr934;
	}
	if ( (*p) < 47 ) {
		if ( (*p) > 10 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr933;
		} else if ( (*p) >= 9 )
			goto tr933;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr934;
		} else if ( (*p) >= 65 )
			goto tr934;
	} else
		goto tr934;
	goto tr924;
tr928:
#line 222 "scanner_body.rl"
	{
		s->item_length_position = 0;
		s->dname_tmp_length = 0;
	}
#line 135 "scanner_body.rl"
	{
		s->item_length = 0;
		s->item_length_position = s->dname_tmp_length++;
	}
	goto st274;
tr935:
#line 135 "scanner_body.rl"
	{
		s->item_length = 0;
		s->item_length_position = s->dname_tmp_length++;
	}
	goto st274;
tr943:
#line 174 "scanner_body.rl"
	{
		s->dname_tmp_length++;
	}
	goto st274;
st274:
	if ( ++p == pe )
		goto _test_eof274;
case 274:
#line 38715 "scanner.c"
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr936;
	goto tr930;
tr936:
#line 161 "scanner_body.rl"
	{
		if (s->item_length < MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length] = 0;
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 170 "scanner_body.rl"
	{
		(s->dname)[s->dname_tmp_length] *= 10;
		(s->dname)[s->dname_tmp_length] += digit_to_num[(uint8_t)(*p)];
	}
	goto st275;
st275:
	if ( ++p == pe )
		goto _test_eof275;
case 275:
#line 38740 "scanner.c"
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr938;
	goto tr937;
tr938:
#line 170 "scanner_body.rl"
	{
		(s->dname)[s->dname_tmp_length] *= 10;
		(s->dname)[s->dname_tmp_length] += digit_to_num[(uint8_t)(*p)];
	}
	goto st276;
st276:
	if ( ++p == pe )
		goto _test_eof276;
case 276:
#line 38755 "scanner.c"
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr939;
	goto tr937;
tr939:
#line 170 "scanner_body.rl"
	{
		(s->dname)[s->dname_tmp_length] *= 10;
		(s->dname)[s->dname_tmp_length] += digit_to_num[(uint8_t)(*p)];
	}
	goto st277;
st277:
	if ( ++p == pe )
		goto _test_eof277;
case 277:
#line 38770 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr940;
		case 42: goto tr941;
		case 46: goto tr942;
		case 59: goto tr940;
		case 92: goto tr943;
		case 95: goto tr941;
	}
	if ( (*p) < 45 ) {
		if ( (*p) > 10 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr940;
		} else if ( (*p) >= 9 )
			goto tr940;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 90 ) {
			if ( 97 <= (*p) && (*p) <= 122 )
				goto tr941;
		} else if ( (*p) >= 65 )
			goto tr941;
	} else
		goto tr941;
	goto tr937;
tr926:
#line 222 "scanner_body.rl"
	{
		s->item_length_position = 0;
		s->dname_tmp_length = 0;
	}
	goto st278;
st278:
	if ( ++p == pe )
		goto _test_eof278;
case 278:
#line 38805 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr933;
		case 59: goto tr933;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr933;
	} else if ( (*p) >= 9 )
		goto tr933;
	goto tr924;
st279:
	if ( ++p == pe )
		goto _test_eof279;
case 279:
	switch( (*p) ) {
		case 32: goto tr944;
		case 59: goto tr944;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr944;
	} else if ( (*p) >= 9 )
		goto tr944;
	goto tr924;
st280:
	if ( ++p == pe )
		goto _test_eof280;
case 280:
	switch( (*p) ) {
		case 34: goto st286;
		case 92: goto st282;
	}
	if ( (*p) > 58 ) {
		if ( 60 <= (*p) && (*p) <= 126 )
			goto tr946;
	} else if ( (*p) >= 33 )
		goto tr946;
	goto tr945;
tr946:
#line 537 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			// Split long string.
			if (s->long_string &&
			    rdata_tail - s->item_length_location == 1 + MAX_ITEM_LENGTH) {
				// _item_length_exit equivalent.
				*(s->item_length_location) = MAX_ITEM_LENGTH;
				// _item_length_init equivalent.
				s->item_length_location = rdata_tail++;

				if (rdata_tail > rdata_stop) {
					WARN(ZS_TEXT_OVERFLOW);
					p--; {goto st269;}
				}
			}

			*(rdata_tail++) = (*p);
		} else {
			WARN(ZS_TEXT_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st281;
tr956:
#line 604 "scanner_body.rl"
	{
		rdata_tail++;
	}
#line 537 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			// Split long string.
			if (s->long_string &&
			    rdata_tail - s->item_length_location == 1 + MAX_ITEM_LENGTH) {
				// _item_length_exit equivalent.
				*(s->item_length_location) = MAX_ITEM_LENGTH;
				// _item_length_init equivalent.
				s->item_length_location = rdata_tail++;

				if (rdata_tail > rdata_stop) {
					WARN(ZS_TEXT_OVERFLOW);
					p--; {goto st269;}
				}
			}

			*(rdata_tail++) = (*p);
		} else {
			WARN(ZS_TEXT_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st281;
st281:
	if ( ++p == pe )
		goto _test_eof281;
case 281:
#line 38902 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr949;
		case 33: goto tr946;
		case 59: goto tr949;
		case 92: goto st282;
	}
	if ( (*p) < 35 ) {
		if ( 9 <= (*p) && (*p) <= 10 )
			goto tr949;
	} else if ( (*p) > 39 ) {
		if ( (*p) > 41 ) {
			if ( 42 <= (*p) && (*p) <= 126 )
				goto tr946;
		} else if ( (*p) >= 40 )
			goto tr950;
	} else
		goto tr946;
	goto tr945;
tr949:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1150;
tr955:
#line 604 "scanner_body.rl"
	{
		rdata_tail++;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1150;
st1150:
	if ( ++p == pe )
		goto _test_eof1150;
case 1150:
#line 38941 "scanner.c"
	goto st0;
tr950:
#line 537 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			// Split long string.
			if (s->long_string &&
			    rdata_tail - s->item_length_location == 1 + MAX_ITEM_LENGTH) {
				// _item_length_exit equivalent.
				*(s->item_length_location) = MAX_ITEM_LENGTH;
				// _item_length_init equivalent.
				s->item_length_location = rdata_tail++;

				if (rdata_tail > rdata_stop) {
					WARN(ZS_TEXT_OVERFLOW);
					p--; {goto st269;}
				}
			}

			*(rdata_tail++) = (*p);
		} else {
			WARN(ZS_TEXT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1151;
tr957:
#line 604 "scanner_body.rl"
	{
		rdata_tail++;
	}
#line 537 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			// Split long string.
			if (s->long_string &&
			    rdata_tail - s->item_length_location == 1 + MAX_ITEM_LENGTH) {
				// _item_length_exit equivalent.
				*(s->item_length_location) = MAX_ITEM_LENGTH;
				// _item_length_init equivalent.
				s->item_length_location = rdata_tail++;

				if (rdata_tail > rdata_stop) {
					WARN(ZS_TEXT_OVERFLOW);
					p--; {goto st269;}
				}
			}

			*(rdata_tail++) = (*p);
		} else {
			WARN(ZS_TEXT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1151;
st1151:
	if ( ++p == pe )
		goto _test_eof1151;
case 1151:
#line 39009 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr949;
		case 33: goto tr946;
		case 59: goto tr949;
		case 92: goto st282;
	}
	if ( (*p) < 35 ) {
		if ( 9 <= (*p) && (*p) <= 10 )
			goto tr949;
	} else if ( (*p) > 39 ) {
		if ( (*p) > 41 ) {
			if ( 42 <= (*p) && (*p) <= 126 )
				goto tr946;
		} else if ( (*p) >= 40 )
			goto tr950;
	} else
		goto tr946;
	goto tr945;
tr958:
#line 604 "scanner_body.rl"
	{
		rdata_tail++;
	}
	goto st282;
st282:
	if ( ++p == pe )
		goto _test_eof282;
case 282:
#line 39038 "scanner.c"
	if ( (*p) < 48 ) {
		if ( 32 <= (*p) && (*p) <= 47 )
			goto tr946;
	} else if ( (*p) > 57 ) {
		if ( 58 <= (*p) && (*p) <= 126 )
			goto tr946;
	} else
		goto tr952;
	goto tr951;
tr952:
#line 568 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			// Split long string.
			if (s->long_string &&
			    rdata_tail - s->item_length_location == 1 + MAX_ITEM_LENGTH) {
				// _item_length_exit equivalent.
				*(s->item_length_location) = MAX_ITEM_LENGTH;
				// _item_length_init equivalent.
				s->item_length_location = rdata_tail++;

				if (rdata_tail > rdata_stop) {
					WARN(ZS_TEXT_OVERFLOW);
					p--; {goto st269;}
				}
			}

			*rdata_tail = 0;
			s->item_length++;
		} else {
			WARN(ZS_TEXT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 591 "scanner_body.rl"
	{
		if ((*rdata_tail < (UINT8_MAX / 10)) ||   // Dominant fast check.
			((*rdata_tail == (UINT8_MAX / 10)) && // Marginal case.
			 ((*p) <= (UINT8_MAX % 10) + '0')
			)
		   ) {
			*rdata_tail *= 10;
			*rdata_tail += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st283;
st283:
	if ( ++p == pe )
		goto _test_eof283;
case 283:
#line 39092 "scanner.c"
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr953;
	goto tr951;
tr953:
#line 591 "scanner_body.rl"
	{
		if ((*rdata_tail < (UINT8_MAX / 10)) ||   // Dominant fast check.
			((*rdata_tail == (UINT8_MAX / 10)) && // Marginal case.
			 ((*p) <= (UINT8_MAX % 10) + '0')
			)
		   ) {
			*rdata_tail *= 10;
			*rdata_tail += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st284;
st284:
	if ( ++p == pe )
		goto _test_eof284;
case 284:
#line 39116 "scanner.c"
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr954;
	goto tr951;
tr954:
#line 591 "scanner_body.rl"
	{
		if ((*rdata_tail < (UINT8_MAX / 10)) ||   // Dominant fast check.
			((*rdata_tail == (UINT8_MAX / 10)) && // Marginal case.
			 ((*p) <= (UINT8_MAX % 10) + '0')
			)
		   ) {
			*rdata_tail *= 10;
			*rdata_tail += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st285;
st285:
	if ( ++p == pe )
		goto _test_eof285;
case 285:
#line 39140 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr955;
		case 33: goto tr956;
		case 59: goto tr955;
		case 92: goto tr958;
	}
	if ( (*p) < 35 ) {
		if ( 9 <= (*p) && (*p) <= 10 )
			goto tr955;
	} else if ( (*p) > 39 ) {
		if ( (*p) > 41 ) {
			if ( 42 <= (*p) && (*p) <= 126 )
				goto tr956;
		} else if ( (*p) >= 40 )
			goto tr957;
	} else
		goto tr956;
	goto tr951;
tr959:
#line 537 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			// Split long string.
			if (s->long_string &&
			    rdata_tail - s->item_length_location == 1 + MAX_ITEM_LENGTH) {
				// _item_length_exit equivalent.
				*(s->item_length_location) = MAX_ITEM_LENGTH;
				// _item_length_init equivalent.
				s->item_length_location = rdata_tail++;

				if (rdata_tail > rdata_stop) {
					WARN(ZS_TEXT_OVERFLOW);
					p--; {goto st269;}
				}
			}

			*(rdata_tail++) = (*p);
		} else {
			WARN(ZS_TEXT_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st286;
tr966:
#line 604 "scanner_body.rl"
	{
		rdata_tail++;
	}
#line 537 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			// Split long string.
			if (s->long_string &&
			    rdata_tail - s->item_length_location == 1 + MAX_ITEM_LENGTH) {
				// _item_length_exit equivalent.
				*(s->item_length_location) = MAX_ITEM_LENGTH;
				// _item_length_init equivalent.
				s->item_length_location = rdata_tail++;

				if (rdata_tail > rdata_stop) {
					WARN(ZS_TEXT_OVERFLOW);
					p--; {goto st269;}
				}
			}

			*(rdata_tail++) = (*p);
		} else {
			WARN(ZS_TEXT_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st286;
st286:
	if ( ++p == pe )
		goto _test_eof286;
case 286:
#line 39217 "scanner.c"
	_widec = (*p);
	if ( 10 <= (*p) && (*p) <= 10 ) {
		_widec = (short)(128 + ((*p) - -128));
		if ( 
#line 623 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr959;
		case 34: goto st287;
		case 92: goto st288;
		case 522: goto tr959;
	}
	if ( 32 <= _widec && _widec <= 126 )
		goto tr959;
	goto tr945;
tr967:
#line 604 "scanner_body.rl"
	{
		rdata_tail++;
	}
	goto st287;
st287:
	if ( ++p == pe )
		goto _test_eof287;
case 287:
#line 39244 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr949;
		case 59: goto tr949;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr949;
	} else if ( (*p) >= 9 )
		goto tr949;
	goto tr962;
tr968:
#line 604 "scanner_body.rl"
	{
		rdata_tail++;
	}
	goto st288;
st288:
	if ( ++p == pe )
		goto _test_eof288;
case 288:
#line 39265 "scanner.c"
	if ( (*p) < 48 ) {
		if ( 32 <= (*p) && (*p) <= 47 )
			goto tr959;
	} else if ( (*p) > 57 ) {
		if ( 58 <= (*p) && (*p) <= 126 )
			goto tr959;
	} else
		goto tr963;
	goto tr951;
tr963:
#line 568 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			// Split long string.
			if (s->long_string &&
			    rdata_tail - s->item_length_location == 1 + MAX_ITEM_LENGTH) {
				// _item_length_exit equivalent.
				*(s->item_length_location) = MAX_ITEM_LENGTH;
				// _item_length_init equivalent.
				s->item_length_location = rdata_tail++;

				if (rdata_tail > rdata_stop) {
					WARN(ZS_TEXT_OVERFLOW);
					p--; {goto st269;}
				}
			}

			*rdata_tail = 0;
			s->item_length++;
		} else {
			WARN(ZS_TEXT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 591 "scanner_body.rl"
	{
		if ((*rdata_tail < (UINT8_MAX / 10)) ||   // Dominant fast check.
			((*rdata_tail == (UINT8_MAX / 10)) && // Marginal case.
			 ((*p) <= (UINT8_MAX % 10) + '0')
			)
		   ) {
			*rdata_tail *= 10;
			*rdata_tail += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st289;
st289:
	if ( ++p == pe )
		goto _test_eof289;
case 289:
#line 39319 "scanner.c"
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr964;
	goto tr951;
tr964:
#line 591 "scanner_body.rl"
	{
		if ((*rdata_tail < (UINT8_MAX / 10)) ||   // Dominant fast check.
			((*rdata_tail == (UINT8_MAX / 10)) && // Marginal case.
			 ((*p) <= (UINT8_MAX % 10) + '0')
			)
		   ) {
			*rdata_tail *= 10;
			*rdata_tail += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st290;
st290:
	if ( ++p == pe )
		goto _test_eof290;
case 290:
#line 39343 "scanner.c"
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr965;
	goto tr951;
tr965:
#line 591 "scanner_body.rl"
	{
		if ((*rdata_tail < (UINT8_MAX / 10)) ||   // Dominant fast check.
			((*rdata_tail == (UINT8_MAX / 10)) && // Marginal case.
			 ((*p) <= (UINT8_MAX % 10) + '0')
			)
		   ) {
			*rdata_tail *= 10;
			*rdata_tail += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st291;
st291:
	if ( ++p == pe )
		goto _test_eof291;
case 291:
#line 39367 "scanner.c"
	_widec = (*p);
	if ( 10 <= (*p) && (*p) <= 10 ) {
		_widec = (short)(128 + ((*p) - -128));
		if ( 
#line 623 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr966;
		case 34: goto tr967;
		case 92: goto tr968;
		case 522: goto tr966;
	}
	if ( 32 <= _widec && _widec <= 126 )
		goto tr966;
	goto tr951;
st292:
	if ( ++p == pe )
		goto _test_eof292;
case 292:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st293;
		case 32: goto st293;
		case 40: goto tr971;
		case 41: goto tr972;
		case 1034: goto tr973;
		case 1083: goto st300;
	}
	goto tr969;
tr971:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st293;
tr972:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st293;
tr973:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st293;
tr1012:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st293;
st293:
	if ( ++p == pe )
		goto _test_eof293;
case 293:
#line 39451 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st293;
		case 32: goto st293;
		case 40: goto tr971;
		case 41: goto tr972;
		case 1034: goto tr973;
		case 1083: goto st300;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr976;
	goto tr975;
tr976:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st294;
tr981:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st294;
st294:
	if ( ++p == pe )
		goto _test_eof294;
case 294:
#line 39519 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr978;
		case 32: goto tr978;
		case 40: goto tr979;
		case 41: goto tr980;
		case 68: goto tr982;
		case 72: goto tr983;
		case 77: goto tr984;
		case 83: goto st297;
		case 87: goto tr986;
		case 100: goto tr982;
		case 104: goto tr983;
		case 109: goto tr984;
		case 115: goto st297;
		case 119: goto tr986;
		case 778: goto tr987;
		case 827: goto tr988;
		case 1034: goto tr987;
		case 1083: goto tr988;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr981;
	goto tr977;
tr991:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st295;
tr992:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st295;
tr978:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st295;
tr979:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st295;
tr980:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st295;
tr1005:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st295;
tr1006:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st295;
tr1007:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st295;
st295:
	if ( ++p == pe )
		goto _test_eof295;
case 295:
#line 39682 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st295;
		case 32: goto st295;
		case 40: goto tr991;
		case 41: goto tr992;
		case 778: goto tr993;
		case 827: goto st296;
		case 1034: goto tr993;
		case 1083: goto st296;
	}
	goto tr989;
tr987:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 648 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->default_ttl = (uint32_t)(s->number64);
		} else {
			ERR(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1152;
tr993:
#line 648 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->default_ttl = (uint32_t)(s->number64);
		} else {
			ERR(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1152;
tr996:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 648 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->default_ttl = (uint32_t)(s->number64);
		} else {
			ERR(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1152;
tr1009:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 648 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			s->default_ttl = (uint32_t)(s->number64);
		} else {
			ERR(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1152;
st1152:
	if ( ++p == pe )
		goto _test_eof1152;
case 1152:
#line 39811 "scanner.c"
	goto st0;
tr988:
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st296;
tr995:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st296;
tr1010:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st296;
st296:
	if ( ++p == pe )
		goto _test_eof296;
case 296:
#line 39848 "scanner.c"
	if ( (*p) == 10 )
		goto tr996;
	goto tr995;
tr982:
#line 443 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 86400)) {
	                  s->number64 *= 86400;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st297;
tr983:
#line 436 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 3600)) {
	                  s->number64 *= 3600;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st297;
tr984:
#line 429 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 60)) {
	                  s->number64 *= 60;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st297;
tr986:
#line 450 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 604800)) {
	                  s->number64 *= 604800;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st297;
st297:
	if ( ++p == pe )
		goto _test_eof297;
case 297:
#line 39896 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr978;
		case 32: goto tr978;
		case 40: goto tr979;
		case 41: goto tr980;
		case 778: goto tr987;
		case 827: goto tr988;
		case 1034: goto tr987;
		case 1083: goto tr988;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr997;
	goto tr977;
tr999:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st298;
tr997:
#line 460 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st298;
tr1008:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 460 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st298;
st298:
	if ( ++p == pe )
		goto _test_eof298;
case 298:
#line 40004 "scanner.c"
	switch( (*p) ) {
		case 68: goto tr1000;
		case 72: goto tr1001;
		case 77: goto tr1002;
		case 83: goto st299;
		case 87: goto tr1004;
		case 100: goto tr1000;
		case 104: goto tr1001;
		case 109: goto tr1002;
		case 115: goto st299;
		case 119: goto tr1004;
	}
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr999;
	goto tr998;
tr1000:
#line 443 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 86400)) {
	                  s->number64 *= 86400;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st299;
tr1001:
#line 436 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 3600)) {
	                  s->number64 *= 3600;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st299;
tr1002:
#line 429 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 60)) {
	                  s->number64 *= 60;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st299;
tr1004:
#line 450 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 604800)) {
	                  s->number64 *= 604800;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st299;
st299:
	if ( ++p == pe )
		goto _test_eof299;
case 299:
#line 40064 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr1005;
		case 32: goto tr1005;
		case 40: goto tr1006;
		case 41: goto tr1007;
		case 778: goto tr1009;
		case 827: goto tr1010;
		case 1034: goto tr1009;
		case 1083: goto tr1010;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr1008;
	goto tr977;
tr1011:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st300;
st300:
	if ( ++p == pe )
		goto _test_eof300;
case 300:
#line 40104 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr1012;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr1011;
	goto tr969;
st301:
	if ( ++p == pe )
		goto _test_eof301;
case 301:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st302;
		case 32: goto st302;
		case 40: goto tr1015;
		case 41: goto tr1016;
		case 1034: goto tr1017;
		case 1083: goto st312;
	}
	goto tr1013;
tr1015:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st302;
tr1016:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st302;
tr1017:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st302;
tr1048:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st302;
st302:
	if ( ++p == pe )
		goto _test_eof302;
case 302:
#line 40198 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st302;
		case 32: goto st302;
		case 40: goto tr1015;
		case 41: goto tr1016;
		case 42: goto tr1019;
		case 46: goto tr1020;
		case 92: goto tr1021;
		case 95: goto tr1019;
		case 1034: goto tr1017;
		case 1083: goto st312;
	}
	if ( _widec < 65 ) {
		if ( 45 <= _widec && _widec <= 57 )
			goto tr1019;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr1019;
	} else
		goto tr1019;
	goto tr1013;
tr1022:
#line 139 "scanner_body.rl"
	{
		// Check for maximum dname label length.
		if (s->item_length < MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length++] = (*p);
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st303;
tr1029:
#line 135 "scanner_body.rl"
	{
		s->item_length = 0;
		s->item_length_position = s->dname_tmp_length++;
	}
#line 139 "scanner_body.rl"
	{
		// Check for maximum dname label length.
		if (s->item_length < MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length++] = (*p);
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st303;
tr1044:
#line 174 "scanner_body.rl"
	{
		s->dname_tmp_length++;
	}
#line 139 "scanner_body.rl"
	{
		// Check for maximum dname label length.
		if (s->item_length < MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length++] = (*p);
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st303;
tr1019:
#line 667 "scanner_body.rl"
	{
		s->dname = s->zone_origin;
	}
#line 222 "scanner_body.rl"
	{
		s->item_length_position = 0;
		s->dname_tmp_length = 0;
	}
#line 135 "scanner_body.rl"
	{
		s->item_length = 0;
		s->item_length_position = s->dname_tmp_length++;
	}
#line 139 "scanner_body.rl"
	{
		// Check for maximum dname label length.
		if (s->item_length < MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length++] = (*p);
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st303;
st303:
	if ( ++p == pe )
		goto _test_eof303;
case 303:
#line 40313 "scanner.c"
	switch( (*p) ) {
		case 42: goto tr1022;
		case 46: goto tr1023;
		case 92: goto st307;
		case 95: goto tr1022;
	}
	if ( (*p) < 65 ) {
		if ( 45 <= (*p) && (*p) <= 57 )
			goto tr1022;
	} else if ( (*p) > 90 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto tr1022;
	} else
		goto tr1022;
	goto tr1013;
tr1023:
#line 149 "scanner_body.rl"
	{
		// Check for maximum dname length overflow after each label.
		// (at least the next label length must follow).
		if (s->dname_tmp_length < MAX_DNAME_LENGTH) {
			(s->dname)[s->item_length_position] =
				(uint8_t)(s->item_length);
		} else {
			WARN(ZS_DNAME_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st304;
tr1045:
#line 174 "scanner_body.rl"
	{
		s->dname_tmp_length++;
	}
#line 149 "scanner_body.rl"
	{
		// Check for maximum dname length overflow after each label.
		// (at least the next label length must follow).
		if (s->dname_tmp_length < MAX_DNAME_LENGTH) {
			(s->dname)[s->item_length_position] =
				(uint8_t)(s->item_length);
		} else {
			WARN(ZS_DNAME_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st304;
st304:
	if ( ++p == pe )
		goto _test_eof304;
case 304:
#line 40365 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr1026;
		case 32: goto tr1026;
		case 40: goto tr1027;
		case 41: goto tr1028;
		case 42: goto tr1029;
		case 45: goto tr1029;
		case 92: goto tr1030;
		case 95: goto tr1029;
		case 778: goto tr1031;
		case 827: goto tr1032;
		case 1034: goto tr1031;
		case 1083: goto tr1032;
	}
	if ( _widec < 65 ) {
		if ( 47 <= _widec && _widec <= 57 )
			goto tr1029;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr1029;
	} else
		goto tr1029;
	goto tr1025;
tr1034:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st305;
tr1035:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st305;
tr1026:
#line 196 "scanner_body.rl"
	{
		// Enough room for the terminal label is guaranteed (_label_exit).
		(s->dname)[s->dname_tmp_length++] = 0;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st305;
tr1027:
#line 196 "scanner_body.rl"
	{
		// Enough room for the terminal label is guaranteed (_label_exit).
		(s->dname)[s->dname_tmp_length++] = 0;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st305;
tr1028:
#line 196 "scanner_body.rl"
	{
		// Enough room for the terminal label is guaranteed (_label_exit).
		(s->dname)[s->dname_tmp_length++] = 0;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st305;
st305:
	if ( ++p == pe )
		goto _test_eof305;
case 305:
#line 40479 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st305;
		case 32: goto st305;
		case 40: goto tr1034;
		case 41: goto tr1035;
		case 778: goto tr1036;
		case 827: goto st306;
		case 1034: goto tr1036;
		case 1083: goto st306;
	}
	goto tr1025;
tr1031:
#line 196 "scanner_body.rl"
	{
		// Enough room for the terminal label is guaranteed (_label_exit).
		(s->dname)[s->dname_tmp_length++] = 0;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 670 "scanner_body.rl"
	{
		s->zone_origin_length = s->dname_tmp_length;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1153;
tr1036:
#line 670 "scanner_body.rl"
	{
		s->zone_origin_length = s->dname_tmp_length;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1153;
tr1039:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 670 "scanner_body.rl"
	{
		s->zone_origin_length = s->dname_tmp_length;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1153;
st1153:
	if ( ++p == pe )
		goto _test_eof1153;
case 1153:
#line 40565 "scanner.c"
	goto st0;
tr1038:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st306;
tr1032:
#line 196 "scanner_body.rl"
	{
		// Enough room for the terminal label is guaranteed (_label_exit).
		(s->dname)[s->dname_tmp_length++] = 0;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st306;
st306:
	if ( ++p == pe )
		goto _test_eof306;
case 306:
#line 40591 "scanner.c"
	if ( (*p) == 10 )
		goto tr1039;
	goto tr1038;
tr1030:
#line 135 "scanner_body.rl"
	{
		s->item_length = 0;
		s->item_length_position = s->dname_tmp_length++;
	}
	goto st307;
tr1046:
#line 174 "scanner_body.rl"
	{
		s->dname_tmp_length++;
	}
	goto st307;
tr1021:
#line 667 "scanner_body.rl"
	{
		s->dname = s->zone_origin;
	}
#line 222 "scanner_body.rl"
	{
		s->item_length_position = 0;
		s->dname_tmp_length = 0;
	}
#line 135 "scanner_body.rl"
	{
		s->item_length = 0;
		s->item_length_position = s->dname_tmp_length++;
	}
	goto st307;
st307:
	if ( ++p == pe )
		goto _test_eof307;
case 307:
#line 40628 "scanner.c"
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr1040;
	goto tr1022;
tr1040:
#line 161 "scanner_body.rl"
	{
		if (s->item_length < MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length] = 0;
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 170 "scanner_body.rl"
	{
		(s->dname)[s->dname_tmp_length] *= 10;
		(s->dname)[s->dname_tmp_length] += digit_to_num[(uint8_t)(*p)];
	}
	goto st308;
st308:
	if ( ++p == pe )
		goto _test_eof308;
case 308:
#line 40653 "scanner.c"
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr1042;
	goto tr1041;
tr1042:
#line 170 "scanner_body.rl"
	{
		(s->dname)[s->dname_tmp_length] *= 10;
		(s->dname)[s->dname_tmp_length] += digit_to_num[(uint8_t)(*p)];
	}
	goto st309;
st309:
	if ( ++p == pe )
		goto _test_eof309;
case 309:
#line 40668 "scanner.c"
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr1043;
	goto tr1041;
tr1043:
#line 170 "scanner_body.rl"
	{
		(s->dname)[s->dname_tmp_length] *= 10;
		(s->dname)[s->dname_tmp_length] += digit_to_num[(uint8_t)(*p)];
	}
	goto st310;
st310:
	if ( ++p == pe )
		goto _test_eof310;
case 310:
#line 40683 "scanner.c"
	switch( (*p) ) {
		case 42: goto tr1044;
		case 46: goto tr1045;
		case 92: goto tr1046;
		case 95: goto tr1044;
	}
	if ( (*p) < 65 ) {
		if ( 45 <= (*p) && (*p) <= 57 )
			goto tr1044;
	} else if ( (*p) > 90 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto tr1044;
	} else
		goto tr1044;
	goto tr1041;
tr1020:
#line 667 "scanner_body.rl"
	{
		s->dname = s->zone_origin;
	}
#line 222 "scanner_body.rl"
	{
		s->item_length_position = 0;
		s->dname_tmp_length = 0;
	}
	goto st311;
st311:
	if ( ++p == pe )
		goto _test_eof311;
case 311:
#line 40714 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr1026;
		case 32: goto tr1026;
		case 40: goto tr1027;
		case 41: goto tr1028;
		case 778: goto tr1031;
		case 827: goto tr1032;
		case 1034: goto tr1031;
		case 1083: goto tr1032;
	}
	goto tr1025;
tr1047:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st312;
st312:
	if ( ++p == pe )
		goto _test_eof312;
case 312:
#line 40752 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr1048;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr1047;
	goto tr1013;
st313:
	if ( ++p == pe )
		goto _test_eof313;
case 313:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st314;
		case 32: goto st314;
		case 40: goto tr1050;
		case 41: goto tr1051;
		case 1034: goto tr1052;
		case 1083: goto st329;
	}
	goto st0;
tr1050:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st314;
tr1051:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st314;
tr1052:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st314;
tr1106:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st314;
st314:
	if ( ++p == pe )
		goto _test_eof314;
case 314:
#line 40846 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st314;
		case 32: goto st314;
		case 40: goto tr1050;
		case 41: goto tr1051;
		case 1034: goto tr1052;
		case 1083: goto st329;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr1054;
	} else if ( _widec > 58 ) {
		if ( 60 <= _widec )
			goto tr1054;
	} else
		goto tr1054;
	goto tr1055;
tr1054:
#line 684 "scanner_body.rl"
	{
		rdata_tail = s->r_data;
	}
#line 629 "scanner_body.rl"
	{ p--; {stack[top++] = 315;goto st280;} }
	goto st315;
st315:
	if ( ++p == pe )
		goto _test_eof315;
case 315:
#line 40890 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr1057;
		case 32: goto tr1057;
		case 40: goto tr1058;
		case 41: goto tr1059;
		case 778: goto tr1060;
		case 827: goto tr1061;
		case 1034: goto tr1060;
		case 1083: goto tr1062;
	}
	goto tr1056;
tr1065:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st316;
tr1066:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st316;
tr1057:
#line 687 "scanner_body.rl"
	{
		size_t len = rdata_tail - s->r_data;
		if (len >= sizeof(s->include_filename)) {
			ERR(ZS_BAD_INCLUDE_FILENAME);
			p--; {goto st269;}
		}

		// Store zero terminated include filename.
		memcpy(s->include_filename, s->r_data, len);
		s->include_filename[len] = '\0';

		// For detection whether origin is not present.
		s->dname = NULL;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st316;
tr1058:
#line 687 "scanner_body.rl"
	{
		size_t len = rdata_tail - s->r_data;
		if (len >= sizeof(s->include_filename)) {
			ERR(ZS_BAD_INCLUDE_FILENAME);
			p--; {goto st269;}
		}

		// Store zero terminated include filename.
		memcpy(s->include_filename, s->r_data, len);
		s->include_filename[len] = '\0';

		// For detection whether origin is not present.
		s->dname = NULL;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st316;
tr1059:
#line 687 "scanner_body.rl"
	{
		size_t len = rdata_tail - s->r_data;
		if (len >= sizeof(s->include_filename)) {
			ERR(ZS_BAD_INCLUDE_FILENAME);
			p--; {goto st269;}
		}

		// Store zero terminated include filename.
		memcpy(s->include_filename, s->r_data, len);
		s->include_filename[len] = '\0';

		// For detection whether origin is not present.
		s->dname = NULL;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st316;
st316:
	if ( ++p == pe )
		goto _test_eof316;
case 316:
#line 41022 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st316;
		case 32: goto st316;
		case 40: goto tr1065;
		case 41: goto tr1066;
		case 42: goto tr1067;
		case 46: goto tr1068;
		case 92: goto tr1069;
		case 95: goto tr1067;
		case 778: goto tr1070;
		case 827: goto st320;
		case 1034: goto tr1070;
		case 1083: goto st326;
	}
	if ( _widec < 65 ) {
		if ( 45 <= _widec && _widec <= 57 )
			goto tr1067;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr1067;
	} else
		goto tr1067;
	goto tr1063;
tr1074:
#line 139 "scanner_body.rl"
	{
		// Check for maximum dname label length.
		if (s->item_length < MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length++] = (*p);
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st317;
tr1080:
#line 135 "scanner_body.rl"
	{
		s->item_length = 0;
		s->item_length_position = s->dname_tmp_length++;
	}
#line 139 "scanner_body.rl"
	{
		// Check for maximum dname label length.
		if (s->item_length < MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length++] = (*p);
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st317;
tr1093:
#line 174 "scanner_body.rl"
	{
		s->dname_tmp_length++;
	}
#line 139 "scanner_body.rl"
	{
		// Check for maximum dname label length.
		if (s->item_length < MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length++] = (*p);
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st317;
tr1067:
#line 706 "scanner_body.rl"
	{
		s->dname = s->r_data;
	}
#line 222 "scanner_body.rl"
	{
		s->item_length_position = 0;
		s->dname_tmp_length = 0;
	}
#line 135 "scanner_body.rl"
	{
		s->item_length = 0;
		s->item_length_position = s->dname_tmp_length++;
	}
#line 139 "scanner_body.rl"
	{
		// Check for maximum dname label length.
		if (s->item_length < MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length++] = (*p);
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st317;
st317:
	if ( ++p == pe )
		goto _test_eof317;
case 317:
#line 41139 "scanner.c"
	switch( (*p) ) {
		case 42: goto tr1074;
		case 46: goto tr1075;
		case 92: goto st321;
		case 95: goto tr1074;
	}
	if ( (*p) < 65 ) {
		if ( 45 <= (*p) && (*p) <= 57 )
			goto tr1074;
	} else if ( (*p) > 90 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto tr1074;
	} else
		goto tr1074;
	goto tr1073;
tr1075:
#line 149 "scanner_body.rl"
	{
		// Check for maximum dname length overflow after each label.
		// (at least the next label length must follow).
		if (s->dname_tmp_length < MAX_DNAME_LENGTH) {
			(s->dname)[s->item_length_position] =
				(uint8_t)(s->item_length);
		} else {
			WARN(ZS_DNAME_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st318;
tr1094:
#line 174 "scanner_body.rl"
	{
		s->dname_tmp_length++;
	}
#line 149 "scanner_body.rl"
	{
		// Check for maximum dname length overflow after each label.
		// (at least the next label length must follow).
		if (s->dname_tmp_length < MAX_DNAME_LENGTH) {
			(s->dname)[s->item_length_position] =
				(uint8_t)(s->item_length);
		} else {
			WARN(ZS_DNAME_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st318;
st318:
	if ( ++p == pe )
		goto _test_eof318;
case 318:
#line 41191 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr1077;
		case 32: goto tr1077;
		case 40: goto tr1078;
		case 41: goto tr1079;
		case 42: goto tr1080;
		case 45: goto tr1080;
		case 92: goto tr1081;
		case 95: goto tr1080;
		case 778: goto tr1082;
		case 827: goto tr1083;
		case 1034: goto tr1082;
		case 1083: goto tr1083;
	}
	if ( _widec < 65 ) {
		if ( 47 <= _widec && _widec <= 57 )
			goto tr1080;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr1080;
	} else
		goto tr1080;
	goto tr1063;
tr1085:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st319;
tr1086:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st319;
tr1077:
#line 196 "scanner_body.rl"
	{
		// Enough room for the terminal label is guaranteed (_label_exit).
		(s->dname)[s->dname_tmp_length++] = 0;
	}
#line 709 "scanner_body.rl"
	{
		s->r_data_length = s->dname_tmp_length;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st319;
tr1078:
#line 196 "scanner_body.rl"
	{
		// Enough room for the terminal label is guaranteed (_label_exit).
		(s->dname)[s->dname_tmp_length++] = 0;
	}
#line 709 "scanner_body.rl"
	{
		s->r_data_length = s->dname_tmp_length;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st319;
tr1079:
#line 196 "scanner_body.rl"
	{
		// Enough room for the terminal label is guaranteed (_label_exit).
		(s->dname)[s->dname_tmp_length++] = 0;
	}
#line 709 "scanner_body.rl"
	{
		s->r_data_length = s->dname_tmp_length;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st319;
st319:
	if ( ++p == pe )
		goto _test_eof319;
case 319:
#line 41317 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st319;
		case 32: goto st319;
		case 40: goto tr1085;
		case 41: goto tr1086;
		case 778: goto tr1070;
		case 827: goto st320;
		case 1034: goto tr1070;
		case 1083: goto st320;
	}
	goto tr85;
tr1060:
	cs = 1154;
#line 687 "scanner_body.rl"
	{
		size_t len = rdata_tail - s->r_data;
		if (len >= sizeof(s->include_filename)) {
			ERR(ZS_BAD_INCLUDE_FILENAME);
			p--; {goto st269;}
		}

		// Store zero terminated include filename.
		memcpy(s->include_filename, s->r_data, len);
		s->include_filename[len] = '\0';

		// For detection whether origin is not present.
		s->dname = NULL;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 717 "scanner_body.rl"
	{
		// Extend relative file path.
		if (s->include_filename[0] != '/') {
			ret = snprintf((char *)(s->buffer), sizeof(s->buffer),
			               "%s/%s", s->path, s->include_filename);
			if (ret <= 0 || ret > sizeof(s->buffer)) {
				ERR(ZS_BAD_INCLUDE_FILENAME);
				p--; {goto st269;}
			}
			memcpy(s->include_filename, s->buffer, ret);
		}

		// Origin conversion from wire to text form in \DDD notation.
		if (s->dname == NULL) { // Use current origin.
			wire_dname_to_str(s->zone_origin,
			                  s->zone_origin_length,
			                  (char *)s->buffer);
		} else { // Use specified origin.
			wire_dname_to_str(s->r_data,
			                  s->r_data_length,
			                  (char *)s->buffer);
		}

		// Let the caller to solve the include.
		if (s->process.automatic) {
			// Create new scanner for included zone file.
			zs_scanner_t *ss = malloc(sizeof(zs_scanner_t));
			if (ss == NULL) {
				ERR(ZS_UNPROCESSED_INCLUDE);
				p--; {goto st269;}
			}

			// Parse included zone file.
			if (zs_init(ss, (char *)s->buffer, s->default_class,
			            s->default_ttl) != 0 ||
			    zs_set_input_file(ss, (char *)(s->include_filename)) != 0 ||
			    zs_set_processing(ss, s->process.record, s->process.error,
			                      s->process.data) != 0 ||
			    zs_parse_all(ss) != 0) {
				// File internal errors are handled by error callback.
				if (ss->error.counter > 0) {
					s->error.counter += ss->error.counter;
					ERR(ZS_UNPROCESSED_INCLUDE);
				// General include file error.
				} else {
					ERR(ss->error.code);
				}
				zs_deinit(ss);
				free(ss);
				p--; {goto st269;}
			}
			zs_deinit(ss);
			free(ss);
		} else {
			s->state = ZS_STATE_INCLUDE;
			p--; cs = 1138; {p++; goto _out;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto _again;
tr1070:
	cs = 1154;
#line 717 "scanner_body.rl"
	{
		// Extend relative file path.
		if (s->include_filename[0] != '/') {
			ret = snprintf((char *)(s->buffer), sizeof(s->buffer),
			               "%s/%s", s->path, s->include_filename);
			if (ret <= 0 || ret > sizeof(s->buffer)) {
				ERR(ZS_BAD_INCLUDE_FILENAME);
				p--; {goto st269;}
			}
			memcpy(s->include_filename, s->buffer, ret);
		}

		// Origin conversion from wire to text form in \DDD notation.
		if (s->dname == NULL) { // Use current origin.
			wire_dname_to_str(s->zone_origin,
			                  s->zone_origin_length,
			                  (char *)s->buffer);
		} else { // Use specified origin.
			wire_dname_to_str(s->r_data,
			                  s->r_data_length,
			                  (char *)s->buffer);
		}

		// Let the caller to solve the include.
		if (s->process.automatic) {
			// Create new scanner for included zone file.
			zs_scanner_t *ss = malloc(sizeof(zs_scanner_t));
			if (ss == NULL) {
				ERR(ZS_UNPROCESSED_INCLUDE);
				p--; {goto st269;}
			}

			// Parse included zone file.
			if (zs_init(ss, (char *)s->buffer, s->default_class,
			            s->default_ttl) != 0 ||
			    zs_set_input_file(ss, (char *)(s->include_filename)) != 0 ||
			    zs_set_processing(ss, s->process.record, s->process.error,
			                      s->process.data) != 0 ||
			    zs_parse_all(ss) != 0) {
				// File internal errors are handled by error callback.
				if (ss->error.counter > 0) {
					s->error.counter += ss->error.counter;
					ERR(ZS_UNPROCESSED_INCLUDE);
				// General include file error.
				} else {
					ERR(ss->error.code);
				}
				zs_deinit(ss);
				free(ss);
				p--; {goto st269;}
			}
			zs_deinit(ss);
			free(ss);
		} else {
			s->state = ZS_STATE_INCLUDE;
			p--; cs = 1138; {p++; goto _out;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto _again;
tr1082:
	cs = 1154;
#line 196 "scanner_body.rl"
	{
		// Enough room for the terminal label is guaranteed (_label_exit).
		(s->dname)[s->dname_tmp_length++] = 0;
	}
#line 709 "scanner_body.rl"
	{
		s->r_data_length = s->dname_tmp_length;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
#line 717 "scanner_body.rl"
	{
		// Extend relative file path.
		if (s->include_filename[0] != '/') {
			ret = snprintf((char *)(s->buffer), sizeof(s->buffer),
			               "%s/%s", s->path, s->include_filename);
			if (ret <= 0 || ret > sizeof(s->buffer)) {
				ERR(ZS_BAD_INCLUDE_FILENAME);
				p--; {goto st269;}
			}
			memcpy(s->include_filename, s->buffer, ret);
		}

		// Origin conversion from wire to text form in \DDD notation.
		if (s->dname == NULL) { // Use current origin.
			wire_dname_to_str(s->zone_origin,
			                  s->zone_origin_length,
			                  (char *)s->buffer);
		} else { // Use specified origin.
			wire_dname_to_str(s->r_data,
			                  s->r_data_length,
			                  (char *)s->buffer);
		}

		// Let the caller to solve the include.
		if (s->process.automatic) {
			// Create new scanner for included zone file.
			zs_scanner_t *ss = malloc(sizeof(zs_scanner_t));
			if (ss == NULL) {
				ERR(ZS_UNPROCESSED_INCLUDE);
				p--; {goto st269;}
			}

			// Parse included zone file.
			if (zs_init(ss, (char *)s->buffer, s->default_class,
			            s->default_ttl) != 0 ||
			    zs_set_input_file(ss, (char *)(s->include_filename)) != 0 ||
			    zs_set_processing(ss, s->process.record, s->process.error,
			                      s->process.data) != 0 ||
			    zs_parse_all(ss) != 0) {
				// File internal errors are handled by error callback.
				if (ss->error.counter > 0) {
					s->error.counter += ss->error.counter;
					ERR(ZS_UNPROCESSED_INCLUDE);
				// General include file error.
				} else {
					ERR(ss->error.code);
				}
				zs_deinit(ss);
				free(ss);
				p--; {goto st269;}
			}
			zs_deinit(ss);
			free(ss);
		} else {
			s->state = ZS_STATE_INCLUDE;
			p--; cs = 1138; {p++; goto _out;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto _again;
tr1088:
	cs = 1154;
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 717 "scanner_body.rl"
	{
		// Extend relative file path.
		if (s->include_filename[0] != '/') {
			ret = snprintf((char *)(s->buffer), sizeof(s->buffer),
			               "%s/%s", s->path, s->include_filename);
			if (ret <= 0 || ret > sizeof(s->buffer)) {
				ERR(ZS_BAD_INCLUDE_FILENAME);
				p--; {goto st269;}
			}
			memcpy(s->include_filename, s->buffer, ret);
		}

		// Origin conversion from wire to text form in \DDD notation.
		if (s->dname == NULL) { // Use current origin.
			wire_dname_to_str(s->zone_origin,
			                  s->zone_origin_length,
			                  (char *)s->buffer);
		} else { // Use specified origin.
			wire_dname_to_str(s->r_data,
			                  s->r_data_length,
			                  (char *)s->buffer);
		}

		// Let the caller to solve the include.
		if (s->process.automatic) {
			// Create new scanner for included zone file.
			zs_scanner_t *ss = malloc(sizeof(zs_scanner_t));
			if (ss == NULL) {
				ERR(ZS_UNPROCESSED_INCLUDE);
				p--; {goto st269;}
			}

			// Parse included zone file.
			if (zs_init(ss, (char *)s->buffer, s->default_class,
			            s->default_ttl) != 0 ||
			    zs_set_input_file(ss, (char *)(s->include_filename)) != 0 ||
			    zs_set_processing(ss, s->process.record, s->process.error,
			                      s->process.data) != 0 ||
			    zs_parse_all(ss) != 0) {
				// File internal errors are handled by error callback.
				if (ss->error.counter > 0) {
					s->error.counter += ss->error.counter;
					ERR(ZS_UNPROCESSED_INCLUDE);
				// General include file error.
				} else {
					ERR(ss->error.code);
				}
				zs_deinit(ss);
				free(ss);
				p--; {goto st269;}
			}
			zs_deinit(ss);
			free(ss);
		} else {
			s->state = ZS_STATE_INCLUDE;
			p--; cs = 1138; {p++; goto _out;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto _again;
st1154:
	if ( ++p == pe )
		goto _test_eof1154;
case 1154:
#line 41665 "scanner.c"
	goto st0;
tr1087:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st320;
tr1061:
#line 687 "scanner_body.rl"
	{
		size_t len = rdata_tail - s->r_data;
		if (len >= sizeof(s->include_filename)) {
			ERR(ZS_BAD_INCLUDE_FILENAME);
			p--; {goto st269;}
		}

		// Store zero terminated include filename.
		memcpy(s->include_filename, s->r_data, len);
		s->include_filename[len] = '\0';

		// For detection whether origin is not present.
		s->dname = NULL;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st320;
tr1083:
#line 196 "scanner_body.rl"
	{
		// Enough room for the terminal label is guaranteed (_label_exit).
		(s->dname)[s->dname_tmp_length++] = 0;
	}
#line 709 "scanner_body.rl"
	{
		s->r_data_length = s->dname_tmp_length;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st320;
st320:
	if ( ++p == pe )
		goto _test_eof320;
case 320:
#line 41717 "scanner.c"
	if ( (*p) == 10 )
		goto tr1088;
	goto tr1087;
tr1081:
#line 135 "scanner_body.rl"
	{
		s->item_length = 0;
		s->item_length_position = s->dname_tmp_length++;
	}
	goto st321;
tr1095:
#line 174 "scanner_body.rl"
	{
		s->dname_tmp_length++;
	}
	goto st321;
tr1069:
#line 706 "scanner_body.rl"
	{
		s->dname = s->r_data;
	}
#line 222 "scanner_body.rl"
	{
		s->item_length_position = 0;
		s->dname_tmp_length = 0;
	}
#line 135 "scanner_body.rl"
	{
		s->item_length = 0;
		s->item_length_position = s->dname_tmp_length++;
	}
	goto st321;
st321:
	if ( ++p == pe )
		goto _test_eof321;
case 321:
#line 41754 "scanner.c"
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr1089;
	goto tr1074;
tr1089:
#line 161 "scanner_body.rl"
	{
		if (s->item_length < MAX_LABEL_LENGTH) {
			(s->dname)[s->dname_tmp_length] = 0;
			s->item_length++;
		} else {
			WARN(ZS_LABEL_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 170 "scanner_body.rl"
	{
		(s->dname)[s->dname_tmp_length] *= 10;
		(s->dname)[s->dname_tmp_length] += digit_to_num[(uint8_t)(*p)];
	}
	goto st322;
st322:
	if ( ++p == pe )
		goto _test_eof322;
case 322:
#line 41779 "scanner.c"
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr1091;
	goto tr1090;
tr1091:
#line 170 "scanner_body.rl"
	{
		(s->dname)[s->dname_tmp_length] *= 10;
		(s->dname)[s->dname_tmp_length] += digit_to_num[(uint8_t)(*p)];
	}
	goto st323;
st323:
	if ( ++p == pe )
		goto _test_eof323;
case 323:
#line 41794 "scanner.c"
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr1092;
	goto tr1090;
tr1092:
#line 170 "scanner_body.rl"
	{
		(s->dname)[s->dname_tmp_length] *= 10;
		(s->dname)[s->dname_tmp_length] += digit_to_num[(uint8_t)(*p)];
	}
	goto st324;
st324:
	if ( ++p == pe )
		goto _test_eof324;
case 324:
#line 41809 "scanner.c"
	switch( (*p) ) {
		case 42: goto tr1093;
		case 46: goto tr1094;
		case 92: goto tr1095;
		case 95: goto tr1093;
	}
	if ( (*p) < 65 ) {
		if ( 45 <= (*p) && (*p) <= 57 )
			goto tr1093;
	} else if ( (*p) > 90 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto tr1093;
	} else
		goto tr1093;
	goto tr1090;
tr1068:
#line 706 "scanner_body.rl"
	{
		s->dname = s->r_data;
	}
#line 222 "scanner_body.rl"
	{
		s->item_length_position = 0;
		s->dname_tmp_length = 0;
	}
	goto st325;
st325:
	if ( ++p == pe )
		goto _test_eof325;
case 325:
#line 41840 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr1077;
		case 32: goto tr1077;
		case 40: goto tr1078;
		case 41: goto tr1079;
		case 778: goto tr1082;
		case 827: goto tr1083;
		case 1034: goto tr1082;
		case 1083: goto tr1083;
	}
	goto tr1063;
tr1096:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st326;
tr1062:
#line 687 "scanner_body.rl"
	{
		size_t len = rdata_tail - s->r_data;
		if (len >= sizeof(s->include_filename)) {
			ERR(ZS_BAD_INCLUDE_FILENAME);
			p--; {goto st269;}
		}

		// Store zero terminated include filename.
		memcpy(s->include_filename, s->r_data, len);
		s->include_filename[len] = '\0';

		// For detection whether origin is not present.
		s->dname = NULL;
	}
#line 53 "scanner_body.rl"
	{
		s->buffer[0] = 0;
		s->buffer_length = 0;
	}
	goto st326;
st326:
	if ( ++p == pe )
		goto _test_eof326;
case 326:
#line 41900 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 778: goto tr1088;
		case 1034: goto tr1097;
	}
	if ( _widec > 895 ) {
		if ( 896 <= _widec && _widec <= 1151 )
			goto tr1096;
	} else if ( _widec >= 640 )
		goto tr1087;
	goto tr85;
tr1097:
	cs = 1155;
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 717 "scanner_body.rl"
	{
		// Extend relative file path.
		if (s->include_filename[0] != '/') {
			ret = snprintf((char *)(s->buffer), sizeof(s->buffer),
			               "%s/%s", s->path, s->include_filename);
			if (ret <= 0 || ret > sizeof(s->buffer)) {
				ERR(ZS_BAD_INCLUDE_FILENAME);
				p--; {goto st269;}
			}
			memcpy(s->include_filename, s->buffer, ret);
		}

		// Origin conversion from wire to text form in \DDD notation.
		if (s->dname == NULL) { // Use current origin.
			wire_dname_to_str(s->zone_origin,
			                  s->zone_origin_length,
			                  (char *)s->buffer);
		} else { // Use specified origin.
			wire_dname_to_str(s->r_data,
			                  s->r_data_length,
			                  (char *)s->buffer);
		}

		// Let the caller to solve the include.
		if (s->process.automatic) {
			// Create new scanner for included zone file.
			zs_scanner_t *ss = malloc(sizeof(zs_scanner_t));
			if (ss == NULL) {
				ERR(ZS_UNPROCESSED_INCLUDE);
				p--; {goto st269;}
			}

			// Parse included zone file.
			if (zs_init(ss, (char *)s->buffer, s->default_class,
			            s->default_ttl) != 0 ||
			    zs_set_input_file(ss, (char *)(s->include_filename)) != 0 ||
			    zs_set_processing(ss, s->process.record, s->process.error,
			                      s->process.data) != 0 ||
			    zs_parse_all(ss) != 0) {
				// File internal errors are handled by error callback.
				if (ss->error.counter > 0) {
					s->error.counter += ss->error.counter;
					ERR(ZS_UNPROCESSED_INCLUDE);
				// General include file error.
				} else {
					ERR(ss->error.code);
				}
				zs_deinit(ss);
				free(ss);
				p--; {goto st269;}
			}
			zs_deinit(ss);
			free(ss);
		} else {
			s->state = ZS_STATE_INCLUDE;
			p--; cs = 1138; {p++; goto _out;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto _again;
st1155:
	if ( ++p == pe )
		goto _test_eof1155;
case 1155:
#line 42010 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st327;
		case 32: goto st327;
		case 40: goto tr1099;
		case 41: goto tr1100;
		case 42: goto tr1067;
		case 46: goto tr1068;
		case 92: goto tr1069;
		case 95: goto tr1067;
		case 1034: goto tr1101;
		case 1083: goto st328;
	}
	if ( _widec < 65 ) {
		if ( 45 <= _widec && _widec <= 57 )
			goto tr1067;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr1067;
	} else
		goto tr1067;
	goto tr1073;
tr1099:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st327;
tr1100:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st327;
tr1101:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st327;
tr1104:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st327;
st327:
	if ( ++p == pe )
		goto _test_eof327;
case 327:
#line 42086 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st327;
		case 32: goto st327;
		case 40: goto tr1099;
		case 41: goto tr1100;
		case 42: goto tr1067;
		case 46: goto tr1068;
		case 92: goto tr1069;
		case 95: goto tr1067;
		case 1034: goto tr1101;
		case 1083: goto st328;
	}
	if ( _widec < 65 ) {
		if ( 45 <= _widec && _widec <= 57 )
			goto tr1067;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr1067;
	} else
		goto tr1067;
	goto tr1073;
tr1103:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st328;
st328:
	if ( ++p == pe )
		goto _test_eof328;
case 328:
#line 42134 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr1104;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr1103;
	goto st0;
tr1105:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st329;
st329:
	if ( ++p == pe )
		goto _test_eof329;
case 329:
#line 42173 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr1106;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr1105;
	goto st0;
st330:
	if ( ++p == pe )
		goto _test_eof330;
case 330:
	if ( (*p) == 43 )
		goto tr1108;
	if ( (*p) < 65 ) {
		if ( 47 <= (*p) && (*p) <= 57 )
			goto tr1108;
	} else if ( (*p) > 90 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto tr1108;
	} else
		goto tr1108;
	goto tr1107;
tr1108:
#line 1008 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_base64_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st331;
st331:
	if ( ++p == pe )
		goto _test_eof331;
case 331:
#line 42230 "scanner.c"
	if ( (*p) == 43 )
		goto tr1109;
	if ( (*p) < 65 ) {
		if ( 47 <= (*p) && (*p) <= 57 )
			goto tr1109;
	} else if ( (*p) > 90 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto tr1109;
	} else
		goto tr1109;
	goto tr1107;
tr1109:
#line 1016 "scanner_body.rl"
	{
		*(rdata_tail++) += second_left_base64_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = second_right_base64_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st332;
st332:
	if ( ++p == pe )
		goto _test_eof332;
case 332:
#line 42259 "scanner.c"
	switch( (*p) ) {
		case 43: goto tr1110;
		case 61: goto st336;
	}
	if ( (*p) < 65 ) {
		if ( 47 <= (*p) && (*p) <= 57 )
			goto tr1110;
	} else if ( (*p) > 90 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto tr1110;
	} else
		goto tr1110;
	goto tr1107;
tr1110:
#line 1026 "scanner_body.rl"
	{
		*(rdata_tail++) += third_left_base64_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = third_right_base64_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st333;
st333:
	if ( ++p == pe )
		goto _test_eof333;
case 333:
#line 42290 "scanner.c"
	switch( (*p) ) {
		case 43: goto tr1112;
		case 61: goto st334;
	}
	if ( (*p) < 65 ) {
		if ( 47 <= (*p) && (*p) <= 57 )
			goto tr1112;
	} else if ( (*p) > 90 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto tr1112;
	} else
		goto tr1112;
	goto tr1107;
tr1114:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st334;
tr1115:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st334;
tr1116:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st334;
tr1122:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st334;
tr1112:
#line 1036 "scanner_body.rl"
	{
		*(rdata_tail++) += fourth_base64_to_num[(uint8_t)(*p)];
	}
	goto st334;
st334:
	if ( ++p == pe )
		goto _test_eof334;
case 334:
#line 42350 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st334;
		case 32: goto st334;
		case 40: goto tr1114;
		case 41: goto tr1115;
		case 43: goto tr1108;
		case 2058: goto tr1116;
		case 2107: goto st335;
		case 2314: goto tr1118;
		case 2363: goto tr1118;
		case 2570: goto tr1119;
		case 2619: goto tr1120;
	}
	if ( _widec < 65 ) {
		if ( 47 <= _widec && _widec <= 57 )
			goto tr1108;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr1108;
	} else
		goto tr1108;
	goto tr1107;
tr1121:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st335;
st335:
	if ( ++p == pe )
		goto _test_eof335;
case 335:
#line 42405 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr1122;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr1121;
	goto tr1107;
tr1118:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1156;
st1156:
	if ( ++p == pe )
		goto _test_eof1156;
case 1156:
#line 42442 "scanner.c"
	goto st0;
tr1119:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1157;
st1157:
	if ( ++p == pe )
		goto _test_eof1157;
case 1157:
#line 42458 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st334;
		case 32: goto st334;
		case 40: goto tr1114;
		case 41: goto tr1115;
		case 43: goto tr1108;
		case 2058: goto tr1116;
		case 2107: goto st335;
		case 2314: goto tr1118;
		case 2363: goto tr1118;
		case 2570: goto tr1119;
		case 2619: goto tr1120;
	}
	if ( _widec < 65 ) {
		if ( 47 <= _widec && _widec <= 57 )
			goto tr1108;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr1108;
	} else
		goto tr1108;
	goto tr1107;
tr1120:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1158;
st1158:
	if ( ++p == pe )
		goto _test_eof1158;
case 1158:
#line 42511 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr1122;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr1121;
	goto tr1107;
st336:
	if ( ++p == pe )
		goto _test_eof336;
case 336:
	if ( (*p) == 61 )
		goto st334;
	goto tr1107;
st337:
	if ( ++p == pe )
		goto _test_eof337;
case 337:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1124;
		case 32: goto tr1124;
		case 40: goto tr1125;
		case 41: goto tr1126;
		case 2058: goto tr1127;
		case 2107: goto tr1128;
		case 2314: goto tr1129;
		case 2363: goto tr1129;
		case 2570: goto tr1130;
		case 2619: goto tr1131;
	}
	goto tr1123;
tr1133:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1134:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1150:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1177:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1124:
#line 1389 "scanner_body.rl"
	{
		memset(s->windows, 0, sizeof(s->windows));
		s->last_window = -1;
	}
	goto st338;
tr1125:
#line 1389 "scanner_body.rl"
	{
		memset(s->windows, 0, sizeof(s->windows));
		s->last_window = -1;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1126:
#line 1389 "scanner_body.rl"
	{
		memset(s->windows, 0, sizeof(s->windows));
		s->last_window = -1;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1127:
#line 1389 "scanner_body.rl"
	{
		memset(s->windows, 0, sizeof(s->windows));
		s->last_window = -1;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1155:
#line 1343 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_A, s); }
	goto st338;
tr1156:
#line 1343 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_A, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1157:
#line 1343 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_A, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1161:
#line 1343 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_A, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1168:
#line 1356 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_AAAA, s); }
	goto st338;
tr1169:
#line 1356 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_AAAA, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1170:
#line 1356 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_AAAA, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1171:
#line 1356 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_AAAA, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1183:
#line 1384 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CAA, s); }
	goto st338;
tr1184:
#line 1384 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CAA, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1185:
#line 1384 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CAA, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1186:
#line 1384 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CAA, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1197:
#line 1375 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CDNSKEY, s); }
	goto st338;
tr1198:
#line 1375 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CDNSKEY, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1199:
#line 1375 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CDNSKEY, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1200:
#line 1375 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CDNSKEY, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1205:
#line 1374 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CDS, s); }
	goto st338;
tr1206:
#line 1374 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CDS, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1207:
#line 1374 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CDS, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1208:
#line 1374 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CDS, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1215:
#line 1361 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CERT, s); }
	goto st338;
tr1216:
#line 1361 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CERT, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1217:
#line 1361 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CERT, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1218:
#line 1361 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CERT, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1226:
#line 1345 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CNAME, s); }
	goto st338;
tr1227:
#line 1345 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CNAME, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1228:
#line 1345 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CNAME, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1229:
#line 1345 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CNAME, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1240:
#line 1370 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DHCID, s); }
	goto st338;
tr1241:
#line 1370 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DHCID, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1242:
#line 1370 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DHCID, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1243:
#line 1370 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DHCID, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1252:
#line 1362 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DNAME, s); }
	goto st338;
tr1253:
#line 1362 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DNAME, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1254:
#line 1362 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DNAME, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1255:
#line 1362 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DNAME, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1263:
#line 1369 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DNSKEY, s); }
	goto st338;
tr1264:
#line 1369 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DNSKEY, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1265:
#line 1369 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DNSKEY, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1266:
#line 1369 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DNSKEY, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1271:
#line 1364 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DS, s); }
	goto st338;
tr1272:
#line 1364 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DS, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1273:
#line 1364 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DS, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1274:
#line 1364 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DS, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1284:
#line 1381 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_EUI48, s); }
	goto st338;
tr1285:
#line 1381 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_EUI48, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1286:
#line 1381 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_EUI48, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1287:
#line 1381 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_EUI48, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1293:
#line 1382 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_EUI64, s); }
	goto st338;
tr1294:
#line 1382 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_EUI64, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1295:
#line 1382 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_EUI64, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1296:
#line 1382 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_EUI64, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1305:
#line 1348 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_HINFO, s); }
	goto st338;
tr1306:
#line 1348 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_HINFO, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1307:
#line 1348 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_HINFO, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1308:
#line 1348 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_HINFO, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1320:
#line 1366 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_IPSECKEY, s); }
	goto st338;
tr1321:
#line 1366 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_IPSECKEY, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1322:
#line 1366 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_IPSECKEY, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1323:
#line 1366 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_IPSECKEY, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1331:
#line 1355 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_KEY, s); }
	goto st338;
tr1332:
#line 1355 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_KEY, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1333:
#line 1355 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_KEY, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1334:
#line 1355 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_KEY, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1339:
#line 1360 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_KX, s); }
	goto st338;
tr1340:
#line 1360 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_KX, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1341:
#line 1360 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_KX, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1342:
#line 1360 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_KX, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1353:
#line 1378 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_L32, s); }
	goto st338;
tr1354:
#line 1378 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_L32, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1355:
#line 1378 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_L32, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1356:
#line 1378 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_L32, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1362:
#line 1379 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_L64, s); }
	goto st338;
tr1363:
#line 1379 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_L64, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1364:
#line 1379 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_L64, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1365:
#line 1379 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_L64, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1370:
#line 1385 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LB, s); }
	goto st338;
tr1371:
#line 1385 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LB, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1372:
#line 1385 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LB, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1373:
#line 1385 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LB, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1379:
#line 1357 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LOC, s); }
	goto st338;
tr1380:
#line 1357 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LOC, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1381:
#line 1357 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LOC, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1382:
#line 1357 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LOC, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1387:
#line 1380 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LP, s); }
	goto st338;
tr1388:
#line 1380 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LP, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1389:
#line 1380 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LP, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1390:
#line 1380 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LP, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1400:
#line 1349 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_MINFO, s); }
	goto st338;
tr1401:
#line 1349 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_MINFO, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1402:
#line 1349 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_MINFO, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1403:
#line 1349 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_MINFO, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1408:
#line 1350 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_MX, s); }
	goto st338;
tr1409:
#line 1350 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_MX, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1410:
#line 1350 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_MX, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1411:
#line 1350 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_MX, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1422:
#line 1359 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NAPTR, s); }
	goto st338;
tr1423:
#line 1359 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NAPTR, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1424:
#line 1359 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NAPTR, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1425:
#line 1359 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NAPTR, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1431:
#line 1377 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NID, s); }
	goto st338;
tr1432:
#line 1377 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NID, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1433:
#line 1377 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NID, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1434:
#line 1377 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NID, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1439:
#line 1344 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NS, s); }
	goto st338;
tr1440:
#line 1344 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NS, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1441:
#line 1344 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NS, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1443:
#line 1344 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NS, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1449:
#line 1368 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC, s); }
	goto st338;
tr1450:
#line 1368 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1451:
#line 1368 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1453:
#line 1368 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1458:
#line 1371 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC3, s); }
	goto st338;
tr1459:
#line 1371 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC3, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1460:
#line 1371 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC3, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1462:
#line 1371 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC3, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1471:
#line 1372 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC3PARAM, s); }
	goto st338;
tr1472:
#line 1372 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC3PARAM, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1473:
#line 1372 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC3PARAM, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1474:
#line 1372 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC3PARAM, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1481:
#line 1347 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_PTR, s); }
	goto st338;
tr1482:
#line 1347 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_PTR, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1483:
#line 1347 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_PTR, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1484:
#line 1347 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_PTR, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1492:
#line 1352 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RP, s); }
	goto st338;
tr1493:
#line 1352 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RP, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1494:
#line 1352 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RP, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1495:
#line 1352 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RP, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1503:
#line 1367 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RRSIG, s); }
	goto st338;
tr1504:
#line 1367 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RRSIG, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1505:
#line 1367 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RRSIG, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1506:
#line 1367 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RRSIG, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1511:
#line 1354 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RT, s); }
	goto st338;
tr1512:
#line 1354 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RT, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1513:
#line 1354 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RT, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1514:
#line 1354 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RT, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1524:
#line 1346 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SOA, s); }
	goto st338;
tr1525:
#line 1346 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SOA, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1526:
#line 1346 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SOA, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1527:
#line 1346 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SOA, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1533:
#line 1376 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SPF, s); }
	goto st338;
tr1534:
#line 1376 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SPF, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1535:
#line 1376 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SPF, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1536:
#line 1376 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SPF, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1542:
#line 1358 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SRV, s); }
	goto st338;
tr1543:
#line 1358 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SRV, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1544:
#line 1358 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SRV, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1545:
#line 1358 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SRV, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1553:
#line 1365 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SSHFP, s); }
	goto st338;
tr1554:
#line 1365 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SSHFP, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1555:
#line 1365 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SSHFP, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1556:
#line 1365 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SSHFP, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1566:
#line 1373 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_TLSA, s); }
	goto st338;
tr1567:
#line 1373 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_TLSA, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1568:
#line 1373 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_TLSA, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1569:
#line 1373 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_TLSA, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1575:
#line 1351 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_TXT, s); }
	goto st338;
tr1576:
#line 1351 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_TXT, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1577:
#line 1351 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_TXT, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1578:
#line 1351 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_TXT, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1586:
#line 1330 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			window_add_bit(s->number64, s);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st338;
tr1587:
#line 1330 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			window_add_bit(s->number64, s);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1588:
#line 1330 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			window_add_bit(s->number64, s);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1590:
#line 1330 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			window_add_bit(s->number64, s);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1597:
#line 1383 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_URI, s); }
	goto st338;
tr1598:
#line 1383 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_URI, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1599:
#line 1383 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_URI, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1600:
#line 1383 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_URI, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1608:
#line 1353 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_AFSDB, s); }
	goto st338;
tr1609:
#line 1353 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_AFSDB, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1610:
#line 1353 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_AFSDB, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1611:
#line 1353 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_AFSDB, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
tr1617:
#line 1363 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_APL, s); }
	goto st338;
tr1618:
#line 1363 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_APL, s); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st338;
tr1619:
#line 1363 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_APL, s); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st338;
tr1620:
#line 1363 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_APL, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st338;
st338:
	if ( ++p == pe )
		goto _test_eof338;
case 338:
#line 44282 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st338;
		case 32: goto st338;
		case 40: goto tr1133;
		case 41: goto tr1134;
		case 65: goto st339;
		case 67: goto st344;
		case 68: goto st361;
		case 69: goto st375;
		case 72: goto st382;
		case 73: goto st387;
		case 75: goto st395;
		case 76: goto st399;
		case 77: goto st408;
		case 78: goto st414;
		case 80: goto st430;
		case 82: goto st433;
		case 83: goto st440;
		case 84: goto st451;
		case 85: goto st461;
		case 97: goto st339;
		case 99: goto st344;
		case 100: goto st361;
		case 101: goto st375;
		case 104: goto st382;
		case 105: goto st387;
		case 107: goto st395;
		case 108: goto st399;
		case 109: goto st408;
		case 110: goto st414;
		case 112: goto st430;
		case 114: goto st433;
		case 115: goto st440;
		case 116: goto st451;
		case 117: goto st461;
		case 2058: goto tr1150;
		case 2107: goto st343;
		case 2314: goto tr1152;
		case 2363: goto tr1152;
		case 2570: goto tr1153;
		case 2619: goto tr1154;
	}
	goto tr1123;
st339:
	if ( ++p == pe )
		goto _test_eof339;
case 339:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1155;
		case 32: goto tr1155;
		case 40: goto tr1156;
		case 41: goto tr1157;
		case 65: goto st340;
		case 70: goto st464;
		case 80: goto st468;
		case 97: goto st340;
		case 102: goto st464;
		case 112: goto st468;
		case 2058: goto tr1161;
		case 2107: goto tr1162;
		case 2314: goto tr1163;
		case 2363: goto tr1163;
		case 2570: goto tr1164;
		case 2619: goto tr1165;
	}
	goto tr1123;
st340:
	if ( ++p == pe )
		goto _test_eof340;
case 340:
	switch( (*p) ) {
		case 65: goto st341;
		case 97: goto st341;
	}
	goto tr1123;
st341:
	if ( ++p == pe )
		goto _test_eof341;
case 341:
	switch( (*p) ) {
		case 65: goto st342;
		case 97: goto st342;
	}
	goto tr1123;
st342:
	if ( ++p == pe )
		goto _test_eof342;
case 342:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1168;
		case 32: goto tr1168;
		case 40: goto tr1169;
		case 41: goto tr1170;
		case 2058: goto tr1171;
		case 2107: goto tr1172;
		case 2314: goto tr1173;
		case 2363: goto tr1173;
		case 2570: goto tr1174;
		case 2619: goto tr1175;
	}
	goto tr1123;
tr1176:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st343;
tr1128:
#line 1389 "scanner_body.rl"
	{
		memset(s->windows, 0, sizeof(s->windows));
		s->last_window = -1;
	}
	goto st343;
tr1162:
#line 1343 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_A, s); }
	goto st343;
tr1172:
#line 1356 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_AAAA, s); }
	goto st343;
tr1187:
#line 1384 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CAA, s); }
	goto st343;
tr1201:
#line 1375 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CDNSKEY, s); }
	goto st343;
tr1209:
#line 1374 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CDS, s); }
	goto st343;
tr1219:
#line 1361 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CERT, s); }
	goto st343;
tr1230:
#line 1345 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CNAME, s); }
	goto st343;
tr1244:
#line 1370 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DHCID, s); }
	goto st343;
tr1256:
#line 1362 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DNAME, s); }
	goto st343;
tr1267:
#line 1369 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DNSKEY, s); }
	goto st343;
tr1275:
#line 1364 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DS, s); }
	goto st343;
tr1288:
#line 1381 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_EUI48, s); }
	goto st343;
tr1297:
#line 1382 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_EUI64, s); }
	goto st343;
tr1309:
#line 1348 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_HINFO, s); }
	goto st343;
tr1324:
#line 1366 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_IPSECKEY, s); }
	goto st343;
tr1335:
#line 1355 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_KEY, s); }
	goto st343;
tr1343:
#line 1360 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_KX, s); }
	goto st343;
tr1357:
#line 1378 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_L32, s); }
	goto st343;
tr1366:
#line 1379 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_L64, s); }
	goto st343;
tr1374:
#line 1385 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LB, s); }
	goto st343;
tr1383:
#line 1357 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LOC, s); }
	goto st343;
tr1391:
#line 1380 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LP, s); }
	goto st343;
tr1404:
#line 1349 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_MINFO, s); }
	goto st343;
tr1412:
#line 1350 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_MX, s); }
	goto st343;
tr1426:
#line 1359 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NAPTR, s); }
	goto st343;
tr1435:
#line 1377 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NID, s); }
	goto st343;
tr1444:
#line 1344 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NS, s); }
	goto st343;
tr1454:
#line 1368 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC, s); }
	goto st343;
tr1463:
#line 1371 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC3, s); }
	goto st343;
tr1475:
#line 1372 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC3PARAM, s); }
	goto st343;
tr1485:
#line 1347 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_PTR, s); }
	goto st343;
tr1496:
#line 1352 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RP, s); }
	goto st343;
tr1507:
#line 1367 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RRSIG, s); }
	goto st343;
tr1515:
#line 1354 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RT, s); }
	goto st343;
tr1528:
#line 1346 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SOA, s); }
	goto st343;
tr1537:
#line 1376 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SPF, s); }
	goto st343;
tr1546:
#line 1358 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SRV, s); }
	goto st343;
tr1557:
#line 1365 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SSHFP, s); }
	goto st343;
tr1570:
#line 1373 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_TLSA, s); }
	goto st343;
tr1579:
#line 1351 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_TXT, s); }
	goto st343;
tr1591:
#line 1330 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			window_add_bit(s->number64, s);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st343;
tr1601:
#line 1383 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_URI, s); }
	goto st343;
tr1612:
#line 1353 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_AFSDB, s); }
	goto st343;
tr1621:
#line 1363 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_APL, s); }
	goto st343;
st343:
	if ( ++p == pe )
		goto _test_eof343;
case 343:
#line 44646 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr1177;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr1176;
	goto tr1123;
tr1129:
#line 1389 "scanner_body.rl"
	{
		memset(s->windows, 0, sizeof(s->windows));
		s->last_window = -1;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1152:
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1163:
#line 1343 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_A, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1173:
#line 1356 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_AAAA, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1188:
#line 1384 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CAA, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1202:
#line 1375 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CDNSKEY, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1210:
#line 1374 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CDS, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1220:
#line 1361 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CERT, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1231:
#line 1345 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CNAME, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1245:
#line 1370 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DHCID, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1257:
#line 1362 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DNAME, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1268:
#line 1369 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DNSKEY, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1276:
#line 1364 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DS, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1289:
#line 1381 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_EUI48, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1298:
#line 1382 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_EUI64, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1310:
#line 1348 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_HINFO, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1325:
#line 1366 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_IPSECKEY, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1336:
#line 1355 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_KEY, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1344:
#line 1360 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_KX, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1358:
#line 1378 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_L32, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1367:
#line 1379 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_L64, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1375:
#line 1385 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LB, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1384:
#line 1357 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LOC, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1392:
#line 1380 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LP, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1405:
#line 1349 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_MINFO, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1413:
#line 1350 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_MX, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1427:
#line 1359 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NAPTR, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1436:
#line 1377 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NID, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1445:
#line 1344 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NS, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1455:
#line 1368 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1464:
#line 1371 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC3, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1476:
#line 1372 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC3PARAM, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1486:
#line 1347 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_PTR, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1497:
#line 1352 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RP, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1508:
#line 1367 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RRSIG, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1516:
#line 1354 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RT, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1529:
#line 1346 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SOA, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1538:
#line 1376 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SPF, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1547:
#line 1358 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SRV, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1558:
#line 1365 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SSHFP, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1571:
#line 1373 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_TLSA, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1580:
#line 1351 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_TXT, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1592:
#line 1330 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			window_add_bit(s->number64, s);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1602:
#line 1383 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_URI, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1613:
#line 1353 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_AFSDB, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
tr1622:
#line 1363 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_APL, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1159;
st1159:
	if ( ++p == pe )
		goto _test_eof1159;
case 1159:
#line 46157 "scanner.c"
	goto st0;
tr1130:
#line 1389 "scanner_body.rl"
	{
		memset(s->windows, 0, sizeof(s->windows));
		s->last_window = -1;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1153:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1164:
#line 1343 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_A, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1174:
#line 1356 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_AAAA, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1189:
#line 1384 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CAA, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1203:
#line 1375 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CDNSKEY, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1211:
#line 1374 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CDS, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1221:
#line 1361 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CERT, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1232:
#line 1345 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CNAME, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1246:
#line 1370 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DHCID, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1258:
#line 1362 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DNAME, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1269:
#line 1369 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DNSKEY, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1277:
#line 1364 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DS, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1290:
#line 1381 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_EUI48, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1299:
#line 1382 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_EUI64, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1311:
#line 1348 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_HINFO, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1326:
#line 1366 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_IPSECKEY, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1337:
#line 1355 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_KEY, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1345:
#line 1360 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_KX, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1359:
#line 1378 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_L32, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1368:
#line 1379 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_L64, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1376:
#line 1385 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LB, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1385:
#line 1357 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LOC, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1393:
#line 1380 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LP, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1406:
#line 1349 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_MINFO, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1414:
#line 1350 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_MX, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1428:
#line 1359 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NAPTR, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1437:
#line 1377 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NID, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1446:
#line 1344 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NS, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1456:
#line 1368 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1465:
#line 1371 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC3, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1477:
#line 1372 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC3PARAM, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1487:
#line 1347 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_PTR, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1498:
#line 1352 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RP, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1509:
#line 1367 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RRSIG, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1517:
#line 1354 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RT, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1530:
#line 1346 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SOA, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1539:
#line 1376 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SPF, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1548:
#line 1358 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SRV, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1559:
#line 1365 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SSHFP, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1572:
#line 1373 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_TLSA, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1581:
#line 1351 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_TXT, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1593:
#line 1330 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			window_add_bit(s->number64, s);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1603:
#line 1383 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_URI, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1614:
#line 1353 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_AFSDB, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
tr1623:
#line 1363 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_APL, s); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1160;
st1160:
	if ( ++p == pe )
		goto _test_eof1160;
case 1160:
#line 47827 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st338;
		case 32: goto st338;
		case 40: goto tr1133;
		case 41: goto tr1134;
		case 65: goto st339;
		case 67: goto st344;
		case 68: goto st361;
		case 69: goto st375;
		case 72: goto st382;
		case 73: goto st387;
		case 75: goto st395;
		case 76: goto st399;
		case 77: goto st408;
		case 78: goto st414;
		case 80: goto st430;
		case 82: goto st433;
		case 83: goto st440;
		case 84: goto st451;
		case 85: goto st461;
		case 97: goto st339;
		case 99: goto st344;
		case 100: goto st361;
		case 101: goto st375;
		case 104: goto st382;
		case 105: goto st387;
		case 107: goto st395;
		case 108: goto st399;
		case 109: goto st408;
		case 110: goto st414;
		case 112: goto st430;
		case 114: goto st433;
		case 115: goto st440;
		case 116: goto st451;
		case 117: goto st461;
		case 2058: goto tr1150;
		case 2107: goto st343;
		case 2314: goto tr1152;
		case 2363: goto tr1152;
		case 2570: goto tr1153;
		case 2619: goto tr1154;
	}
	goto tr1123;
st344:
	if ( ++p == pe )
		goto _test_eof344;
case 344:
	switch( (*p) ) {
		case 65: goto st345;
		case 68: goto st347;
		case 69: goto st354;
		case 78: goto st357;
		case 97: goto st345;
		case 100: goto st347;
		case 101: goto st354;
		case 110: goto st357;
	}
	goto tr1123;
st345:
	if ( ++p == pe )
		goto _test_eof345;
case 345:
	switch( (*p) ) {
		case 65: goto st346;
		case 97: goto st346;
	}
	goto tr1123;
st346:
	if ( ++p == pe )
		goto _test_eof346;
case 346:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1183;
		case 32: goto tr1183;
		case 40: goto tr1184;
		case 41: goto tr1185;
		case 2058: goto tr1186;
		case 2107: goto tr1187;
		case 2314: goto tr1188;
		case 2363: goto tr1188;
		case 2570: goto tr1189;
		case 2619: goto tr1190;
	}
	goto tr1123;
tr1131:
#line 1389 "scanner_body.rl"
	{
		memset(s->windows, 0, sizeof(s->windows));
		s->last_window = -1;
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1154:
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1165:
#line 1343 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_A, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1175:
#line 1356 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_AAAA, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1190:
#line 1384 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CAA, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1204:
#line 1375 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CDNSKEY, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1212:
#line 1374 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CDS, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1222:
#line 1361 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CERT, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1233:
#line 1345 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_CNAME, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1247:
#line 1370 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DHCID, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1259:
#line 1362 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DNAME, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1270:
#line 1369 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DNSKEY, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1278:
#line 1364 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_DS, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1291:
#line 1381 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_EUI48, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1300:
#line 1382 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_EUI64, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1312:
#line 1348 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_HINFO, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1327:
#line 1366 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_IPSECKEY, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1338:
#line 1355 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_KEY, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1346:
#line 1360 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_KX, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1360:
#line 1378 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_L32, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1369:
#line 1379 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_L64, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1377:
#line 1385 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LB, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1386:
#line 1357 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LOC, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1394:
#line 1380 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_LP, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1407:
#line 1349 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_MINFO, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1415:
#line 1350 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_MX, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1429:
#line 1359 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NAPTR, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1438:
#line 1377 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NID, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1447:
#line 1344 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NS, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1457:
#line 1368 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1466:
#line 1371 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC3, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1478:
#line 1372 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_NSEC3PARAM, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1488:
#line 1347 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_PTR, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1499:
#line 1352 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RP, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1510:
#line 1367 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RRSIG, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1518:
#line 1354 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_RT, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1531:
#line 1346 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SOA, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1540:
#line 1376 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SPF, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1549:
#line 1358 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SRV, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1560:
#line 1365 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_SSHFP, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1573:
#line 1373 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_TLSA, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1582:
#line 1351 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_TXT, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1594:
#line 1330 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			window_add_bit(s->number64, s);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1604:
#line 1383 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_URI, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1615:
#line 1353 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_AFSDB, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
tr1624:
#line 1363 "scanner_body.rl"
	{ window_add_bit(KNOT_RRTYPE_APL, s); }
#line 1393 "scanner_body.rl"
	{
		for (window = 0; window <= s->last_window; window++) {
			if ((s->windows[window]).length > 0) {
				if (rdata_tail + 2 + (s->windows[window]).length <= rdata_stop)
				{
					// Window number.
					*rdata_tail = (uint8_t)window;
					rdata_tail += 1;
					// Bitmap length.
					*rdata_tail = (s->windows[window]).length;
					rdata_tail += 1;
					// Copying bitmap.
					memcpy(rdata_tail,
					       (s->windows[window]).bitmap,
					       (s->windows[window]).length);
					rdata_tail += (s->windows[window]).length;
				} else {
					WARN(ZS_RDATA_OVERFLOW);
					p--; {goto st269;}
				}
			}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1161;
st1161:
	if ( ++p == pe )
		goto _test_eof1161;
case 1161:
#line 49436 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr1177;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr1176;
	goto tr1123;
st347:
	if ( ++p == pe )
		goto _test_eof347;
case 347:
	switch( (*p) ) {
		case 78: goto st348;
		case 83: goto st353;
		case 110: goto st348;
		case 115: goto st353;
	}
	goto tr1123;
st348:
	if ( ++p == pe )
		goto _test_eof348;
case 348:
	switch( (*p) ) {
		case 83: goto st349;
		case 115: goto st349;
	}
	goto tr1123;
st349:
	if ( ++p == pe )
		goto _test_eof349;
case 349:
	switch( (*p) ) {
		case 75: goto st350;
		case 107: goto st350;
	}
	goto tr1123;
st350:
	if ( ++p == pe )
		goto _test_eof350;
case 350:
	switch( (*p) ) {
		case 69: goto st351;
		case 101: goto st351;
	}
	goto tr1123;
st351:
	if ( ++p == pe )
		goto _test_eof351;
case 351:
	switch( (*p) ) {
		case 89: goto st352;
		case 121: goto st352;
	}
	goto tr1123;
st352:
	if ( ++p == pe )
		goto _test_eof352;
case 352:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1197;
		case 32: goto tr1197;
		case 40: goto tr1198;
		case 41: goto tr1199;
		case 2058: goto tr1200;
		case 2107: goto tr1201;
		case 2314: goto tr1202;
		case 2363: goto tr1202;
		case 2570: goto tr1203;
		case 2619: goto tr1204;
	}
	goto tr1123;
st353:
	if ( ++p == pe )
		goto _test_eof353;
case 353:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1205;
		case 32: goto tr1205;
		case 40: goto tr1206;
		case 41: goto tr1207;
		case 2058: goto tr1208;
		case 2107: goto tr1209;
		case 2314: goto tr1210;
		case 2363: goto tr1210;
		case 2570: goto tr1211;
		case 2619: goto tr1212;
	}
	goto tr1123;
st354:
	if ( ++p == pe )
		goto _test_eof354;
case 354:
	switch( (*p) ) {
		case 82: goto st355;
		case 114: goto st355;
	}
	goto tr1123;
st355:
	if ( ++p == pe )
		goto _test_eof355;
case 355:
	switch( (*p) ) {
		case 84: goto st356;
		case 116: goto st356;
	}
	goto tr1123;
st356:
	if ( ++p == pe )
		goto _test_eof356;
case 356:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1215;
		case 32: goto tr1215;
		case 40: goto tr1216;
		case 41: goto tr1217;
		case 2058: goto tr1218;
		case 2107: goto tr1219;
		case 2314: goto tr1220;
		case 2363: goto tr1220;
		case 2570: goto tr1221;
		case 2619: goto tr1222;
	}
	goto tr1123;
st357:
	if ( ++p == pe )
		goto _test_eof357;
case 357:
	switch( (*p) ) {
		case 65: goto st358;
		case 97: goto st358;
	}
	goto tr1123;
st358:
	if ( ++p == pe )
		goto _test_eof358;
case 358:
	switch( (*p) ) {
		case 77: goto st359;
		case 109: goto st359;
	}
	goto tr1123;
st359:
	if ( ++p == pe )
		goto _test_eof359;
case 359:
	switch( (*p) ) {
		case 69: goto st360;
		case 101: goto st360;
	}
	goto tr1123;
st360:
	if ( ++p == pe )
		goto _test_eof360;
case 360:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1226;
		case 32: goto tr1226;
		case 40: goto tr1227;
		case 41: goto tr1228;
		case 2058: goto tr1229;
		case 2107: goto tr1230;
		case 2314: goto tr1231;
		case 2363: goto tr1231;
		case 2570: goto tr1232;
		case 2619: goto tr1233;
	}
	goto tr1123;
st361:
	if ( ++p == pe )
		goto _test_eof361;
case 361:
	switch( (*p) ) {
		case 72: goto st362;
		case 78: goto st366;
		case 83: goto st374;
		case 104: goto st362;
		case 110: goto st366;
		case 115: goto st374;
	}
	goto tr1123;
st362:
	if ( ++p == pe )
		goto _test_eof362;
case 362:
	switch( (*p) ) {
		case 67: goto st363;
		case 99: goto st363;
	}
	goto tr1123;
st363:
	if ( ++p == pe )
		goto _test_eof363;
case 363:
	switch( (*p) ) {
		case 73: goto st364;
		case 105: goto st364;
	}
	goto tr1123;
st364:
	if ( ++p == pe )
		goto _test_eof364;
case 364:
	switch( (*p) ) {
		case 68: goto st365;
		case 100: goto st365;
	}
	goto tr1123;
st365:
	if ( ++p == pe )
		goto _test_eof365;
case 365:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1240;
		case 32: goto tr1240;
		case 40: goto tr1241;
		case 41: goto tr1242;
		case 2058: goto tr1243;
		case 2107: goto tr1244;
		case 2314: goto tr1245;
		case 2363: goto tr1245;
		case 2570: goto tr1246;
		case 2619: goto tr1247;
	}
	goto tr1123;
st366:
	if ( ++p == pe )
		goto _test_eof366;
case 366:
	switch( (*p) ) {
		case 65: goto st367;
		case 83: goto st370;
		case 97: goto st367;
		case 115: goto st370;
	}
	goto tr1123;
st367:
	if ( ++p == pe )
		goto _test_eof367;
case 367:
	switch( (*p) ) {
		case 77: goto st368;
		case 109: goto st368;
	}
	goto tr1123;
st368:
	if ( ++p == pe )
		goto _test_eof368;
case 368:
	switch( (*p) ) {
		case 69: goto st369;
		case 101: goto st369;
	}
	goto tr1123;
st369:
	if ( ++p == pe )
		goto _test_eof369;
case 369:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1252;
		case 32: goto tr1252;
		case 40: goto tr1253;
		case 41: goto tr1254;
		case 2058: goto tr1255;
		case 2107: goto tr1256;
		case 2314: goto tr1257;
		case 2363: goto tr1257;
		case 2570: goto tr1258;
		case 2619: goto tr1259;
	}
	goto tr1123;
st370:
	if ( ++p == pe )
		goto _test_eof370;
case 370:
	switch( (*p) ) {
		case 75: goto st371;
		case 107: goto st371;
	}
	goto tr1123;
st371:
	if ( ++p == pe )
		goto _test_eof371;
case 371:
	switch( (*p) ) {
		case 69: goto st372;
		case 101: goto st372;
	}
	goto tr1123;
st372:
	if ( ++p == pe )
		goto _test_eof372;
case 372:
	switch( (*p) ) {
		case 89: goto st373;
		case 121: goto st373;
	}
	goto tr1123;
st373:
	if ( ++p == pe )
		goto _test_eof373;
case 373:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1263;
		case 32: goto tr1263;
		case 40: goto tr1264;
		case 41: goto tr1265;
		case 2058: goto tr1266;
		case 2107: goto tr1267;
		case 2314: goto tr1268;
		case 2363: goto tr1268;
		case 2570: goto tr1269;
		case 2619: goto tr1270;
	}
	goto tr1123;
st374:
	if ( ++p == pe )
		goto _test_eof374;
case 374:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1271;
		case 32: goto tr1271;
		case 40: goto tr1272;
		case 41: goto tr1273;
		case 2058: goto tr1274;
		case 2107: goto tr1275;
		case 2314: goto tr1276;
		case 2363: goto tr1276;
		case 2570: goto tr1277;
		case 2619: goto tr1278;
	}
	goto tr1123;
st375:
	if ( ++p == pe )
		goto _test_eof375;
case 375:
	switch( (*p) ) {
		case 85: goto st376;
		case 117: goto st376;
	}
	goto tr1123;
st376:
	if ( ++p == pe )
		goto _test_eof376;
case 376:
	switch( (*p) ) {
		case 73: goto st377;
		case 105: goto st377;
	}
	goto tr1123;
st377:
	if ( ++p == pe )
		goto _test_eof377;
case 377:
	switch( (*p) ) {
		case 52: goto st378;
		case 54: goto st380;
	}
	goto tr1123;
st378:
	if ( ++p == pe )
		goto _test_eof378;
case 378:
	if ( (*p) == 56 )
		goto st379;
	goto tr1123;
st379:
	if ( ++p == pe )
		goto _test_eof379;
case 379:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1284;
		case 32: goto tr1284;
		case 40: goto tr1285;
		case 41: goto tr1286;
		case 2058: goto tr1287;
		case 2107: goto tr1288;
		case 2314: goto tr1289;
		case 2363: goto tr1289;
		case 2570: goto tr1290;
		case 2619: goto tr1291;
	}
	goto tr1123;
st380:
	if ( ++p == pe )
		goto _test_eof380;
case 380:
	if ( (*p) == 52 )
		goto st381;
	goto tr1123;
st381:
	if ( ++p == pe )
		goto _test_eof381;
case 381:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1293;
		case 32: goto tr1293;
		case 40: goto tr1294;
		case 41: goto tr1295;
		case 2058: goto tr1296;
		case 2107: goto tr1297;
		case 2314: goto tr1298;
		case 2363: goto tr1298;
		case 2570: goto tr1299;
		case 2619: goto tr1300;
	}
	goto tr1123;
st382:
	if ( ++p == pe )
		goto _test_eof382;
case 382:
	switch( (*p) ) {
		case 73: goto st383;
		case 105: goto st383;
	}
	goto tr1123;
st383:
	if ( ++p == pe )
		goto _test_eof383;
case 383:
	switch( (*p) ) {
		case 78: goto st384;
		case 110: goto st384;
	}
	goto tr1123;
st384:
	if ( ++p == pe )
		goto _test_eof384;
case 384:
	switch( (*p) ) {
		case 70: goto st385;
		case 102: goto st385;
	}
	goto tr1123;
st385:
	if ( ++p == pe )
		goto _test_eof385;
case 385:
	switch( (*p) ) {
		case 79: goto st386;
		case 111: goto st386;
	}
	goto tr1123;
st386:
	if ( ++p == pe )
		goto _test_eof386;
case 386:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1305;
		case 32: goto tr1305;
		case 40: goto tr1306;
		case 41: goto tr1307;
		case 2058: goto tr1308;
		case 2107: goto tr1309;
		case 2314: goto tr1310;
		case 2363: goto tr1310;
		case 2570: goto tr1311;
		case 2619: goto tr1312;
	}
	goto tr1123;
st387:
	if ( ++p == pe )
		goto _test_eof387;
case 387:
	switch( (*p) ) {
		case 80: goto st388;
		case 112: goto st388;
	}
	goto tr1123;
st388:
	if ( ++p == pe )
		goto _test_eof388;
case 388:
	switch( (*p) ) {
		case 83: goto st389;
		case 115: goto st389;
	}
	goto tr1123;
st389:
	if ( ++p == pe )
		goto _test_eof389;
case 389:
	switch( (*p) ) {
		case 69: goto st390;
		case 101: goto st390;
	}
	goto tr1123;
st390:
	if ( ++p == pe )
		goto _test_eof390;
case 390:
	switch( (*p) ) {
		case 67: goto st391;
		case 99: goto st391;
	}
	goto tr1123;
st391:
	if ( ++p == pe )
		goto _test_eof391;
case 391:
	switch( (*p) ) {
		case 75: goto st392;
		case 107: goto st392;
	}
	goto tr1123;
st392:
	if ( ++p == pe )
		goto _test_eof392;
case 392:
	switch( (*p) ) {
		case 69: goto st393;
		case 101: goto st393;
	}
	goto tr1123;
st393:
	if ( ++p == pe )
		goto _test_eof393;
case 393:
	switch( (*p) ) {
		case 89: goto st394;
		case 121: goto st394;
	}
	goto tr1123;
st394:
	if ( ++p == pe )
		goto _test_eof394;
case 394:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1320;
		case 32: goto tr1320;
		case 40: goto tr1321;
		case 41: goto tr1322;
		case 2058: goto tr1323;
		case 2107: goto tr1324;
		case 2314: goto tr1325;
		case 2363: goto tr1325;
		case 2570: goto tr1326;
		case 2619: goto tr1327;
	}
	goto tr1123;
st395:
	if ( ++p == pe )
		goto _test_eof395;
case 395:
	switch( (*p) ) {
		case 69: goto st396;
		case 88: goto st398;
		case 101: goto st396;
		case 120: goto st398;
	}
	goto tr1123;
st396:
	if ( ++p == pe )
		goto _test_eof396;
case 396:
	switch( (*p) ) {
		case 89: goto st397;
		case 121: goto st397;
	}
	goto tr1123;
st397:
	if ( ++p == pe )
		goto _test_eof397;
case 397:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1331;
		case 32: goto tr1331;
		case 40: goto tr1332;
		case 41: goto tr1333;
		case 2058: goto tr1334;
		case 2107: goto tr1335;
		case 2314: goto tr1336;
		case 2363: goto tr1336;
		case 2570: goto tr1337;
		case 2619: goto tr1338;
	}
	goto tr1123;
st398:
	if ( ++p == pe )
		goto _test_eof398;
case 398:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1339;
		case 32: goto tr1339;
		case 40: goto tr1340;
		case 41: goto tr1341;
		case 2058: goto tr1342;
		case 2107: goto tr1343;
		case 2314: goto tr1344;
		case 2363: goto tr1344;
		case 2570: goto tr1345;
		case 2619: goto tr1346;
	}
	goto tr1123;
st399:
	if ( ++p == pe )
		goto _test_eof399;
case 399:
	switch( (*p) ) {
		case 51: goto st400;
		case 54: goto st402;
		case 66: goto st404;
		case 79: goto st405;
		case 80: goto st407;
		case 98: goto st404;
		case 111: goto st405;
		case 112: goto st407;
	}
	goto tr1123;
st400:
	if ( ++p == pe )
		goto _test_eof400;
case 400:
	if ( (*p) == 50 )
		goto st401;
	goto tr1123;
st401:
	if ( ++p == pe )
		goto _test_eof401;
case 401:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1353;
		case 32: goto tr1353;
		case 40: goto tr1354;
		case 41: goto tr1355;
		case 2058: goto tr1356;
		case 2107: goto tr1357;
		case 2314: goto tr1358;
		case 2363: goto tr1358;
		case 2570: goto tr1359;
		case 2619: goto tr1360;
	}
	goto tr1123;
st402:
	if ( ++p == pe )
		goto _test_eof402;
case 402:
	if ( (*p) == 52 )
		goto st403;
	goto tr1123;
st403:
	if ( ++p == pe )
		goto _test_eof403;
case 403:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1362;
		case 32: goto tr1362;
		case 40: goto tr1363;
		case 41: goto tr1364;
		case 2058: goto tr1365;
		case 2107: goto tr1366;
		case 2314: goto tr1367;
		case 2363: goto tr1367;
		case 2570: goto tr1368;
		case 2619: goto tr1369;
	}
	goto tr1123;
st404:
	if ( ++p == pe )
		goto _test_eof404;
case 404:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1370;
		case 32: goto tr1370;
		case 40: goto tr1371;
		case 41: goto tr1372;
		case 2058: goto tr1373;
		case 2107: goto tr1374;
		case 2314: goto tr1375;
		case 2363: goto tr1375;
		case 2570: goto tr1376;
		case 2619: goto tr1377;
	}
	goto tr1123;
st405:
	if ( ++p == pe )
		goto _test_eof405;
case 405:
	switch( (*p) ) {
		case 67: goto st406;
		case 99: goto st406;
	}
	goto tr1123;
st406:
	if ( ++p == pe )
		goto _test_eof406;
case 406:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1379;
		case 32: goto tr1379;
		case 40: goto tr1380;
		case 41: goto tr1381;
		case 2058: goto tr1382;
		case 2107: goto tr1383;
		case 2314: goto tr1384;
		case 2363: goto tr1384;
		case 2570: goto tr1385;
		case 2619: goto tr1386;
	}
	goto tr1123;
st407:
	if ( ++p == pe )
		goto _test_eof407;
case 407:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1387;
		case 32: goto tr1387;
		case 40: goto tr1388;
		case 41: goto tr1389;
		case 2058: goto tr1390;
		case 2107: goto tr1391;
		case 2314: goto tr1392;
		case 2363: goto tr1392;
		case 2570: goto tr1393;
		case 2619: goto tr1394;
	}
	goto tr1123;
st408:
	if ( ++p == pe )
		goto _test_eof408;
case 408:
	switch( (*p) ) {
		case 73: goto st409;
		case 88: goto st413;
		case 105: goto st409;
		case 120: goto st413;
	}
	goto tr1123;
st409:
	if ( ++p == pe )
		goto _test_eof409;
case 409:
	switch( (*p) ) {
		case 78: goto st410;
		case 110: goto st410;
	}
	goto tr1123;
st410:
	if ( ++p == pe )
		goto _test_eof410;
case 410:
	switch( (*p) ) {
		case 70: goto st411;
		case 102: goto st411;
	}
	goto tr1123;
st411:
	if ( ++p == pe )
		goto _test_eof411;
case 411:
	switch( (*p) ) {
		case 79: goto st412;
		case 111: goto st412;
	}
	goto tr1123;
st412:
	if ( ++p == pe )
		goto _test_eof412;
case 412:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1400;
		case 32: goto tr1400;
		case 40: goto tr1401;
		case 41: goto tr1402;
		case 2058: goto tr1403;
		case 2107: goto tr1404;
		case 2314: goto tr1405;
		case 2363: goto tr1405;
		case 2570: goto tr1406;
		case 2619: goto tr1407;
	}
	goto tr1123;
st413:
	if ( ++p == pe )
		goto _test_eof413;
case 413:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1408;
		case 32: goto tr1408;
		case 40: goto tr1409;
		case 41: goto tr1410;
		case 2058: goto tr1411;
		case 2107: goto tr1412;
		case 2314: goto tr1413;
		case 2363: goto tr1413;
		case 2570: goto tr1414;
		case 2619: goto tr1415;
	}
	goto tr1123;
st414:
	if ( ++p == pe )
		goto _test_eof414;
case 414:
	switch( (*p) ) {
		case 65: goto st415;
		case 73: goto st419;
		case 83: goto st421;
		case 97: goto st415;
		case 105: goto st419;
		case 115: goto st421;
	}
	goto tr1123;
st415:
	if ( ++p == pe )
		goto _test_eof415;
case 415:
	switch( (*p) ) {
		case 80: goto st416;
		case 112: goto st416;
	}
	goto tr1123;
st416:
	if ( ++p == pe )
		goto _test_eof416;
case 416:
	switch( (*p) ) {
		case 84: goto st417;
		case 116: goto st417;
	}
	goto tr1123;
st417:
	if ( ++p == pe )
		goto _test_eof417;
case 417:
	switch( (*p) ) {
		case 82: goto st418;
		case 114: goto st418;
	}
	goto tr1123;
st418:
	if ( ++p == pe )
		goto _test_eof418;
case 418:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1422;
		case 32: goto tr1422;
		case 40: goto tr1423;
		case 41: goto tr1424;
		case 2058: goto tr1425;
		case 2107: goto tr1426;
		case 2314: goto tr1427;
		case 2363: goto tr1427;
		case 2570: goto tr1428;
		case 2619: goto tr1429;
	}
	goto tr1123;
st419:
	if ( ++p == pe )
		goto _test_eof419;
case 419:
	switch( (*p) ) {
		case 68: goto st420;
		case 100: goto st420;
	}
	goto tr1123;
st420:
	if ( ++p == pe )
		goto _test_eof420;
case 420:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1431;
		case 32: goto tr1431;
		case 40: goto tr1432;
		case 41: goto tr1433;
		case 2058: goto tr1434;
		case 2107: goto tr1435;
		case 2314: goto tr1436;
		case 2363: goto tr1436;
		case 2570: goto tr1437;
		case 2619: goto tr1438;
	}
	goto tr1123;
st421:
	if ( ++p == pe )
		goto _test_eof421;
case 421:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1439;
		case 32: goto tr1439;
		case 40: goto tr1440;
		case 41: goto tr1441;
		case 69: goto st422;
		case 101: goto st422;
		case 2058: goto tr1443;
		case 2107: goto tr1444;
		case 2314: goto tr1445;
		case 2363: goto tr1445;
		case 2570: goto tr1446;
		case 2619: goto tr1447;
	}
	goto tr1123;
st422:
	if ( ++p == pe )
		goto _test_eof422;
case 422:
	switch( (*p) ) {
		case 67: goto st423;
		case 99: goto st423;
	}
	goto tr1123;
st423:
	if ( ++p == pe )
		goto _test_eof423;
case 423:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1449;
		case 32: goto tr1449;
		case 40: goto tr1450;
		case 41: goto tr1451;
		case 51: goto st424;
		case 2058: goto tr1453;
		case 2107: goto tr1454;
		case 2314: goto tr1455;
		case 2363: goto tr1455;
		case 2570: goto tr1456;
		case 2619: goto tr1457;
	}
	goto tr1123;
st424:
	if ( ++p == pe )
		goto _test_eof424;
case 424:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1458;
		case 32: goto tr1458;
		case 40: goto tr1459;
		case 41: goto tr1460;
		case 80: goto st425;
		case 112: goto st425;
		case 2058: goto tr1462;
		case 2107: goto tr1463;
		case 2314: goto tr1464;
		case 2363: goto tr1464;
		case 2570: goto tr1465;
		case 2619: goto tr1466;
	}
	goto tr1123;
st425:
	if ( ++p == pe )
		goto _test_eof425;
case 425:
	switch( (*p) ) {
		case 65: goto st426;
		case 97: goto st426;
	}
	goto tr1123;
st426:
	if ( ++p == pe )
		goto _test_eof426;
case 426:
	switch( (*p) ) {
		case 82: goto st427;
		case 114: goto st427;
	}
	goto tr1123;
st427:
	if ( ++p == pe )
		goto _test_eof427;
case 427:
	switch( (*p) ) {
		case 65: goto st428;
		case 97: goto st428;
	}
	goto tr1123;
st428:
	if ( ++p == pe )
		goto _test_eof428;
case 428:
	switch( (*p) ) {
		case 77: goto st429;
		case 109: goto st429;
	}
	goto tr1123;
st429:
	if ( ++p == pe )
		goto _test_eof429;
case 429:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1471;
		case 32: goto tr1471;
		case 40: goto tr1472;
		case 41: goto tr1473;
		case 2058: goto tr1474;
		case 2107: goto tr1475;
		case 2314: goto tr1476;
		case 2363: goto tr1476;
		case 2570: goto tr1477;
		case 2619: goto tr1478;
	}
	goto tr1123;
st430:
	if ( ++p == pe )
		goto _test_eof430;
case 430:
	switch( (*p) ) {
		case 84: goto st431;
		case 116: goto st431;
	}
	goto tr1123;
st431:
	if ( ++p == pe )
		goto _test_eof431;
case 431:
	switch( (*p) ) {
		case 82: goto st432;
		case 114: goto st432;
	}
	goto tr1123;
st432:
	if ( ++p == pe )
		goto _test_eof432;
case 432:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1481;
		case 32: goto tr1481;
		case 40: goto tr1482;
		case 41: goto tr1483;
		case 2058: goto tr1484;
		case 2107: goto tr1485;
		case 2314: goto tr1486;
		case 2363: goto tr1486;
		case 2570: goto tr1487;
		case 2619: goto tr1488;
	}
	goto tr1123;
st433:
	if ( ++p == pe )
		goto _test_eof433;
case 433:
	switch( (*p) ) {
		case 80: goto st434;
		case 82: goto st435;
		case 84: goto st439;
		case 112: goto st434;
		case 114: goto st435;
		case 116: goto st439;
	}
	goto tr1123;
st434:
	if ( ++p == pe )
		goto _test_eof434;
case 434:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1492;
		case 32: goto tr1492;
		case 40: goto tr1493;
		case 41: goto tr1494;
		case 2058: goto tr1495;
		case 2107: goto tr1496;
		case 2314: goto tr1497;
		case 2363: goto tr1497;
		case 2570: goto tr1498;
		case 2619: goto tr1499;
	}
	goto tr1123;
st435:
	if ( ++p == pe )
		goto _test_eof435;
case 435:
	switch( (*p) ) {
		case 83: goto st436;
		case 115: goto st436;
	}
	goto tr1123;
st436:
	if ( ++p == pe )
		goto _test_eof436;
case 436:
	switch( (*p) ) {
		case 73: goto st437;
		case 105: goto st437;
	}
	goto tr1123;
st437:
	if ( ++p == pe )
		goto _test_eof437;
case 437:
	switch( (*p) ) {
		case 71: goto st438;
		case 103: goto st438;
	}
	goto tr1123;
st438:
	if ( ++p == pe )
		goto _test_eof438;
case 438:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1503;
		case 32: goto tr1503;
		case 40: goto tr1504;
		case 41: goto tr1505;
		case 2058: goto tr1506;
		case 2107: goto tr1507;
		case 2314: goto tr1508;
		case 2363: goto tr1508;
		case 2570: goto tr1509;
		case 2619: goto tr1510;
	}
	goto tr1123;
st439:
	if ( ++p == pe )
		goto _test_eof439;
case 439:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1511;
		case 32: goto tr1511;
		case 40: goto tr1512;
		case 41: goto tr1513;
		case 2058: goto tr1514;
		case 2107: goto tr1515;
		case 2314: goto tr1516;
		case 2363: goto tr1516;
		case 2570: goto tr1517;
		case 2619: goto tr1518;
	}
	goto tr1123;
st440:
	if ( ++p == pe )
		goto _test_eof440;
case 440:
	switch( (*p) ) {
		case 79: goto st441;
		case 80: goto st443;
		case 82: goto st445;
		case 83: goto st447;
		case 111: goto st441;
		case 112: goto st443;
		case 114: goto st445;
		case 115: goto st447;
	}
	goto tr1123;
st441:
	if ( ++p == pe )
		goto _test_eof441;
case 441:
	switch( (*p) ) {
		case 65: goto st442;
		case 97: goto st442;
	}
	goto tr1123;
st442:
	if ( ++p == pe )
		goto _test_eof442;
case 442:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1524;
		case 32: goto tr1524;
		case 40: goto tr1525;
		case 41: goto tr1526;
		case 2058: goto tr1527;
		case 2107: goto tr1528;
		case 2314: goto tr1529;
		case 2363: goto tr1529;
		case 2570: goto tr1530;
		case 2619: goto tr1531;
	}
	goto tr1123;
st443:
	if ( ++p == pe )
		goto _test_eof443;
case 443:
	switch( (*p) ) {
		case 70: goto st444;
		case 102: goto st444;
	}
	goto tr1123;
st444:
	if ( ++p == pe )
		goto _test_eof444;
case 444:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1533;
		case 32: goto tr1533;
		case 40: goto tr1534;
		case 41: goto tr1535;
		case 2058: goto tr1536;
		case 2107: goto tr1537;
		case 2314: goto tr1538;
		case 2363: goto tr1538;
		case 2570: goto tr1539;
		case 2619: goto tr1540;
	}
	goto tr1123;
st445:
	if ( ++p == pe )
		goto _test_eof445;
case 445:
	switch( (*p) ) {
		case 86: goto st446;
		case 118: goto st446;
	}
	goto tr1123;
st446:
	if ( ++p == pe )
		goto _test_eof446;
case 446:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1542;
		case 32: goto tr1542;
		case 40: goto tr1543;
		case 41: goto tr1544;
		case 2058: goto tr1545;
		case 2107: goto tr1546;
		case 2314: goto tr1547;
		case 2363: goto tr1547;
		case 2570: goto tr1548;
		case 2619: goto tr1549;
	}
	goto tr1123;
st447:
	if ( ++p == pe )
		goto _test_eof447;
case 447:
	switch( (*p) ) {
		case 72: goto st448;
		case 104: goto st448;
	}
	goto tr1123;
st448:
	if ( ++p == pe )
		goto _test_eof448;
case 448:
	switch( (*p) ) {
		case 70: goto st449;
		case 102: goto st449;
	}
	goto tr1123;
st449:
	if ( ++p == pe )
		goto _test_eof449;
case 449:
	switch( (*p) ) {
		case 80: goto st450;
		case 112: goto st450;
	}
	goto tr1123;
st450:
	if ( ++p == pe )
		goto _test_eof450;
case 450:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1553;
		case 32: goto tr1553;
		case 40: goto tr1554;
		case 41: goto tr1555;
		case 2058: goto tr1556;
		case 2107: goto tr1557;
		case 2314: goto tr1558;
		case 2363: goto tr1558;
		case 2570: goto tr1559;
		case 2619: goto tr1560;
	}
	goto tr1123;
st451:
	if ( ++p == pe )
		goto _test_eof451;
case 451:
	switch( (*p) ) {
		case 76: goto st452;
		case 88: goto st455;
		case 89: goto st457;
		case 108: goto st452;
		case 120: goto st455;
		case 121: goto st457;
	}
	goto tr1123;
st452:
	if ( ++p == pe )
		goto _test_eof452;
case 452:
	switch( (*p) ) {
		case 83: goto st453;
		case 115: goto st453;
	}
	goto tr1123;
st453:
	if ( ++p == pe )
		goto _test_eof453;
case 453:
	switch( (*p) ) {
		case 65: goto st454;
		case 97: goto st454;
	}
	goto tr1123;
st454:
	if ( ++p == pe )
		goto _test_eof454;
case 454:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1566;
		case 32: goto tr1566;
		case 40: goto tr1567;
		case 41: goto tr1568;
		case 2058: goto tr1569;
		case 2107: goto tr1570;
		case 2314: goto tr1571;
		case 2363: goto tr1571;
		case 2570: goto tr1572;
		case 2619: goto tr1573;
	}
	goto tr1123;
st455:
	if ( ++p == pe )
		goto _test_eof455;
case 455:
	switch( (*p) ) {
		case 84: goto st456;
		case 116: goto st456;
	}
	goto tr1123;
st456:
	if ( ++p == pe )
		goto _test_eof456;
case 456:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1575;
		case 32: goto tr1575;
		case 40: goto tr1576;
		case 41: goto tr1577;
		case 2058: goto tr1578;
		case 2107: goto tr1579;
		case 2314: goto tr1580;
		case 2363: goto tr1580;
		case 2570: goto tr1581;
		case 2619: goto tr1582;
	}
	goto tr1123;
st457:
	if ( ++p == pe )
		goto _test_eof457;
case 457:
	switch( (*p) ) {
		case 80: goto st458;
		case 112: goto st458;
	}
	goto tr1123;
st458:
	if ( ++p == pe )
		goto _test_eof458;
case 458:
	switch( (*p) ) {
		case 69: goto st459;
		case 101: goto st459;
	}
	goto tr1123;
st459:
	if ( ++p == pe )
		goto _test_eof459;
case 459:
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr1585;
	goto tr1123;
tr1585:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st460;
tr1589:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st460;
st460:
	if ( ++p == pe )
		goto _test_eof460;
case 460:
#line 51589 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1586;
		case 32: goto tr1586;
		case 40: goto tr1587;
		case 41: goto tr1588;
		case 2058: goto tr1590;
		case 2107: goto tr1591;
		case 2314: goto tr1592;
		case 2363: goto tr1592;
		case 2570: goto tr1593;
		case 2619: goto tr1594;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr1589;
	goto tr1123;
st461:
	if ( ++p == pe )
		goto _test_eof461;
case 461:
	switch( (*p) ) {
		case 82: goto st462;
		case 114: goto st462;
	}
	goto tr1123;
st462:
	if ( ++p == pe )
		goto _test_eof462;
case 462:
	switch( (*p) ) {
		case 73: goto st463;
		case 105: goto st463;
	}
	goto tr1123;
st463:
	if ( ++p == pe )
		goto _test_eof463;
case 463:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1597;
		case 32: goto tr1597;
		case 40: goto tr1598;
		case 41: goto tr1599;
		case 2058: goto tr1600;
		case 2107: goto tr1601;
		case 2314: goto tr1602;
		case 2363: goto tr1602;
		case 2570: goto tr1603;
		case 2619: goto tr1604;
	}
	goto tr1123;
st464:
	if ( ++p == pe )
		goto _test_eof464;
case 464:
	switch( (*p) ) {
		case 83: goto st465;
		case 115: goto st465;
	}
	goto tr1123;
st465:
	if ( ++p == pe )
		goto _test_eof465;
case 465:
	switch( (*p) ) {
		case 68: goto st466;
		case 100: goto st466;
	}
	goto tr1123;
st466:
	if ( ++p == pe )
		goto _test_eof466;
case 466:
	switch( (*p) ) {
		case 66: goto st467;
		case 98: goto st467;
	}
	goto tr1123;
st467:
	if ( ++p == pe )
		goto _test_eof467;
case 467:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1608;
		case 32: goto tr1608;
		case 40: goto tr1609;
		case 41: goto tr1610;
		case 2058: goto tr1611;
		case 2107: goto tr1612;
		case 2314: goto tr1613;
		case 2363: goto tr1613;
		case 2570: goto tr1614;
		case 2619: goto tr1615;
	}
	goto tr1123;
st468:
	if ( ++p == pe )
		goto _test_eof468;
case 468:
	switch( (*p) ) {
		case 76: goto st469;
		case 108: goto st469;
	}
	goto tr1123;
st469:
	if ( ++p == pe )
		goto _test_eof469;
case 469:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr1617;
		case 32: goto tr1617;
		case 40: goto tr1618;
		case 41: goto tr1619;
		case 2058: goto tr1620;
		case 2107: goto tr1621;
		case 2314: goto tr1622;
		case 2363: goto tr1622;
		case 2570: goto tr1623;
		case 2619: goto tr1624;
	}
	goto tr1123;
st470:
	if ( ++p == pe )
		goto _test_eof470;
case 470:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st471;
		case 32: goto st471;
		case 40: goto tr1627;
		case 41: goto tr1628;
		case 1034: goto tr1629;
		case 1083: goto st478;
	}
	goto tr1625;
tr1627:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st471;
tr1628:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st471;
tr1629:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st471;
tr1660:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st471;
st471:
	if ( ++p == pe )
		goto _test_eof471;
case 471:
#line 51857 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st471;
		case 32: goto st471;
		case 40: goto tr1627;
		case 41: goto tr1628;
		case 1034: goto tr1629;
		case 1083: goto st478;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr1632;
	goto tr1631;
tr1632:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st472;
tr1636:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st472;
st472:
	if ( ++p == pe )
		goto _test_eof472;
case 472:
#line 51925 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr1633;
		case 32: goto tr1633;
		case 40: goto tr1634;
		case 41: goto tr1635;
		case 1034: goto tr1637;
		case 1083: goto tr1638;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr1636;
	goto tr1631;
tr1641:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st473;
tr1642:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st473;
tr1644:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st473;
tr1658:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st473;
tr1633:
#line 405 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_data_length = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st473;
tr1634:
#line 405 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_data_length = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st473;
tr1635:
#line 405 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_data_length = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st473;
tr1637:
#line 405 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_data_length = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st473;
st473:
	if ( ++p == pe )
		goto _test_eof473;
case 473:
#line 52055 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st473;
		case 32: goto st473;
		case 40: goto tr1641;
		case 41: goto tr1642;
		case 1034: goto tr1644;
		case 1083: goto st477;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr1643;
	} else if ( _widec > 70 ) {
		if ( 97 <= _widec && _widec <= 102 )
			goto tr1643;
	} else
		goto tr1643;
	goto tr1639;
tr1643:
#line 965 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st474;
st474:
	if ( ++p == pe )
		goto _test_eof474;
case 474:
#line 52102 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr1646;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr1646;
	} else
		goto tr1646;
	goto tr1639;
tr1648:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st475;
tr1649:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st475;
tr1650:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st475;
tr1656:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st475;
tr1646:
#line 973 "scanner_body.rl"
	{
		*rdata_tail += second_hex_to_num[(uint8_t)(*p)];
		rdata_tail++;
	}
	goto st475;
st475:
	if ( ++p == pe )
		goto _test_eof475;
case 475:
#line 52159 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st475;
		case 32: goto st475;
		case 40: goto tr1648;
		case 41: goto tr1649;
		case 2058: goto tr1650;
		case 2107: goto st476;
		case 2314: goto tr1652;
		case 2363: goto tr1652;
		case 2570: goto tr1653;
		case 2619: goto tr1654;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr1643;
	} else if ( _widec > 70 ) {
		if ( 97 <= _widec && _widec <= 102 )
			goto tr1643;
	} else
		goto tr1643;
	goto tr1639;
tr1655:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st476;
st476:
	if ( ++p == pe )
		goto _test_eof476;
case 476:
#line 52213 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr1656;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr1655;
	goto tr1639;
tr1652:
#line 991 "scanner_body.rl"
	{
		if ((rdata_tail - s->r_data) != s->r_data_length) {
			WARN(ZS_BAD_RDATA_LENGTH);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1162;
st1162:
	if ( ++p == pe )
		goto _test_eof1162;
case 1162:
#line 52257 "scanner.c"
	goto st0;
tr1653:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 991 "scanner_body.rl"
	{
		if ((rdata_tail - s->r_data) != s->r_data_length) {
			WARN(ZS_BAD_RDATA_LENGTH);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1163;
st1163:
	if ( ++p == pe )
		goto _test_eof1163;
case 1163:
#line 52280 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st475;
		case 32: goto st475;
		case 40: goto tr1648;
		case 41: goto tr1649;
		case 2058: goto tr1650;
		case 2107: goto st476;
		case 2314: goto tr1652;
		case 2363: goto tr1652;
		case 2570: goto tr1653;
		case 2619: goto tr1654;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr1643;
	} else if ( _widec > 70 ) {
		if ( 97 <= _widec && _widec <= 102 )
			goto tr1643;
	} else
		goto tr1643;
	goto tr1639;
tr1654:
#line 991 "scanner_body.rl"
	{
		if ((rdata_tail - s->r_data) != s->r_data_length) {
			WARN(ZS_BAD_RDATA_LENGTH);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1164;
st1164:
	if ( ++p == pe )
		goto _test_eof1164;
case 1164:
#line 52339 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr1656;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr1655;
	goto tr1639;
tr1657:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st477;
tr1638:
#line 405 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_data_length = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st477;
st477:
	if ( ++p == pe )
		goto _test_eof477;
case 477:
#line 52389 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr1658;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr1657;
	goto tr1625;
tr1659:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st478;
st478:
	if ( ++p == pe )
		goto _test_eof478;
case 478:
#line 52428 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr1660;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr1659;
	goto tr1625;
st479:
	if ( ++p == pe )
		goto _test_eof479;
case 479:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st480;
		case 32: goto st480;
		case 40: goto tr1662;
		case 41: goto tr1663;
		case 1034: goto tr1664;
		case 1083: goto st488;
	}
	goto tr1625;
tr1662:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st480;
tr1663:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st480;
tr1664:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st480;
tr1700:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st480;
st480:
	if ( ++p == pe )
		goto _test_eof480;
case 480:
#line 52522 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st480;
		case 32: goto st480;
		case 40: goto tr1662;
		case 41: goto tr1663;
		case 48: goto tr1666;
		case 1034: goto tr1664;
		case 1083: goto st488;
	}
	if ( 49 <= _widec && _widec <= 57 )
		goto tr1667;
	goto tr1631;
tr1666:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st481;
st481:
	if ( ++p == pe )
		goto _test_eof481;
case 481:
#line 52574 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr1668;
		case 32: goto tr1668;
		case 40: goto tr1669;
		case 41: goto tr1670;
		case 778: goto tr1672;
		case 827: goto tr1672;
		case 1034: goto tr1673;
		case 1083: goto tr1674;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr1671;
	goto tr1631;
tr1668:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
#line 405 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_data_length = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1165;
tr1669:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
#line 405 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_data_length = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1165;
tr1670:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
#line 405 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_data_length = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1165;
tr1673:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
#line 405 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_data_length = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1165;
st1165:
	if ( ++p == pe )
		goto _test_eof1165;
case 1165:
#line 52686 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st482;
		case 32: goto st482;
		case 40: goto tr1676;
		case 41: goto tr1677;
		case 1034: goto tr1679;
		case 1083: goto st486;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr1678;
	} else if ( _widec > 70 ) {
		if ( 97 <= _widec && _widec <= 102 )
			goto tr1678;
	} else
		goto tr1678;
	goto tr1639;
tr1676:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st482;
tr1677:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st482;
tr1679:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st482;
tr1693:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st482;
tr1694:
#line 405 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_data_length = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st482;
tr1695:
#line 405 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_data_length = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st482;
tr1696:
#line 405 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_data_length = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st482;
tr1697:
#line 405 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_data_length = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st482;
st482:
	if ( ++p == pe )
		goto _test_eof482;
case 482:
#line 52822 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st482;
		case 32: goto st482;
		case 40: goto tr1676;
		case 41: goto tr1677;
		case 1034: goto tr1679;
		case 1083: goto st486;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr1678;
	} else if ( _widec > 70 ) {
		if ( 97 <= _widec && _widec <= 102 )
			goto tr1678;
	} else
		goto tr1678;
	goto tr1639;
tr1678:
#line 965 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st483;
st483:
	if ( ++p == pe )
		goto _test_eof483;
case 483:
#line 52869 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr1681;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr1681;
	} else
		goto tr1681;
	goto tr1639;
tr1683:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st484;
tr1684:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st484;
tr1685:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st484;
tr1691:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st484;
tr1681:
#line 973 "scanner_body.rl"
	{
		*rdata_tail += second_hex_to_num[(uint8_t)(*p)];
		rdata_tail++;
	}
	goto st484;
st484:
	if ( ++p == pe )
		goto _test_eof484;
case 484:
#line 52926 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st484;
		case 32: goto st484;
		case 40: goto tr1683;
		case 41: goto tr1684;
		case 2058: goto tr1685;
		case 2107: goto st485;
		case 2314: goto tr1687;
		case 2363: goto tr1687;
		case 2570: goto tr1688;
		case 2619: goto tr1689;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr1678;
	} else if ( _widec > 70 ) {
		if ( 97 <= _widec && _widec <= 102 )
			goto tr1678;
	} else
		goto tr1678;
	goto tr1639;
tr1690:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st485;
st485:
	if ( ++p == pe )
		goto _test_eof485;
case 485:
#line 52980 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr1691;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr1690;
	goto tr1639;
tr1672:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1166;
tr1687:
#line 991 "scanner_body.rl"
	{
		if ((rdata_tail - s->r_data) != s->r_data_length) {
			WARN(ZS_BAD_RDATA_LENGTH);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1166;
st1166:
	if ( ++p == pe )
		goto _test_eof1166;
case 1166:
#line 53030 "scanner.c"
	goto tr1625;
tr1688:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 991 "scanner_body.rl"
	{
		if ((rdata_tail - s->r_data) != s->r_data_length) {
			WARN(ZS_BAD_RDATA_LENGTH);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1167;
st1167:
	if ( ++p == pe )
		goto _test_eof1167;
case 1167:
#line 53053 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st484;
		case 32: goto st484;
		case 40: goto tr1683;
		case 41: goto tr1684;
		case 2058: goto tr1685;
		case 2107: goto st485;
		case 2314: goto tr1687;
		case 2363: goto tr1687;
		case 2570: goto tr1688;
		case 2619: goto tr1689;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr1678;
	} else if ( _widec > 70 ) {
		if ( 97 <= _widec && _widec <= 102 )
			goto tr1678;
	} else
		goto tr1678;
	goto tr1639;
tr1689:
#line 991 "scanner_body.rl"
	{
		if ((rdata_tail - s->r_data) != s->r_data_length) {
			WARN(ZS_BAD_RDATA_LENGTH);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1168;
st1168:
	if ( ++p == pe )
		goto _test_eof1168;
case 1168:
#line 53112 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr1691;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr1690;
	goto tr1639;
tr1692:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st486;
tr1698:
#line 405 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_data_length = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st486;
st486:
	if ( ++p == pe )
		goto _test_eof486;
case 486:
#line 53162 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr1693;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr1692;
	goto tr1625;
tr1667:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st487;
tr1671:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st487;
st487:
	if ( ++p == pe )
		goto _test_eof487;
case 487:
#line 53231 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr1694;
		case 32: goto tr1694;
		case 40: goto tr1695;
		case 41: goto tr1696;
		case 1034: goto tr1697;
		case 1083: goto tr1698;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr1671;
	goto tr1631;
tr1674:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
#line 405 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			s->r_data_length = (uint16_t)(s->number64);
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1169;
st1169:
	if ( ++p == pe )
		goto _test_eof1169;
case 1169:
#line 53276 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr1693;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr1692;
	goto tr1625;
tr1699:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st488;
st488:
	if ( ++p == pe )
		goto _test_eof488;
case 488:
#line 53315 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr1700;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr1699;
	goto tr1625;
st489:
	if ( ++p == pe )
		goto _test_eof489;
case 489:
	switch( (*p) ) {
		case 68: goto st491;
		case 69: goto st506;
		case 73: goto st545;
		case 80: goto st553;
		case 82: goto st566;
		case 100: goto st491;
		case 101: goto st506;
		case 105: goto st545;
		case 112: goto st553;
		case 114: goto st566;
	}
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr1702;
	goto tr1701;
tr1702:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st490;
tr1709:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st490;
st490:
	if ( ++p == pe )
		goto _test_eof490;
case 490:
#line 53403 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr1708;
		case 59: goto tr1708;
	}
	if ( (*p) < 40 ) {
		if ( 9 <= (*p) && (*p) <= 10 )
			goto tr1708;
	} else if ( (*p) > 41 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr1709;
	} else
		goto tr1708;
	goto tr1701;
tr1708:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1170;
tr1712:
#line 1165 "scanner_body.rl"
	{
		*(rdata_tail++) = 2;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1170;
tr1714:
#line 1168 "scanner_body.rl"
	{
		*(rdata_tail++) = 3;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1170;
tr1726:
#line 1174 "scanner_body.rl"
	{
		*(rdata_tail++) = 6;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1170;
tr1736:
#line 1186 "scanner_body.rl"
	{
		*(rdata_tail++) = 12;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1170;
tr1750:
#line 1189 "scanner_body.rl"
	{
		*(rdata_tail++) = 13;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1170;
tr1759:
#line 1192 "scanner_body.rl"
	{
		*(rdata_tail++) = 14;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1170;
tr1766:
#line 1195 "scanner_body.rl"
	{
		*(rdata_tail++) = 15;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1170;
tr1769:
#line 1198 "scanner_body.rl"
	{
		*(rdata_tail++) = 16;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1170;
tr1777:
#line 1201 "scanner_body.rl"
	{
		*(rdata_tail++) = 252;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1170;
tr1788:
#line 1204 "scanner_body.rl"
	{
		*(rdata_tail++) = 253;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1170;
tr1791:
#line 1207 "scanner_body.rl"
	{
		*(rdata_tail++) = 254;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1170;
tr1798:
#line 1162 "scanner_body.rl"
	{
		*(rdata_tail++) = 1;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1170;
tr1804:
#line 1171 "scanner_body.rl"
	{
		*(rdata_tail++) = 5;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1170;
tr1816:
#line 1177 "scanner_body.rl"
	{
		*(rdata_tail++) = 7;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1170;
tr1819:
#line 1180 "scanner_body.rl"
	{
		*(rdata_tail++) = 8;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1170;
tr1822:
#line 1183 "scanner_body.rl"
	{
		*(rdata_tail++) = 10;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1170;
st1170:
	if ( ++p == pe )
		goto _test_eof1170;
case 1170:
#line 53597 "scanner.c"
	goto st0;
st491:
	if ( ++p == pe )
		goto _test_eof491;
case 491:
	switch( (*p) ) {
		case 72: goto st492;
		case 83: goto st493;
		case 104: goto st492;
		case 115: goto st493;
	}
	goto tr1701;
st492:
	if ( ++p == pe )
		goto _test_eof492;
case 492:
	switch( (*p) ) {
		case 32: goto tr1712;
		case 59: goto tr1712;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1712;
	} else if ( (*p) >= 9 )
		goto tr1712;
	goto tr1701;
st493:
	if ( ++p == pe )
		goto _test_eof493;
case 493:
	switch( (*p) ) {
		case 65: goto st494;
		case 97: goto st494;
	}
	goto tr1701;
st494:
	if ( ++p == pe )
		goto _test_eof494;
case 494:
	switch( (*p) ) {
		case 32: goto tr1714;
		case 45: goto st495;
		case 59: goto tr1714;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1714;
	} else if ( (*p) >= 9 )
		goto tr1714;
	goto tr1701;
st495:
	if ( ++p == pe )
		goto _test_eof495;
case 495:
	switch( (*p) ) {
		case 78: goto st496;
		case 110: goto st496;
	}
	goto tr1701;
st496:
	if ( ++p == pe )
		goto _test_eof496;
case 496:
	switch( (*p) ) {
		case 83: goto st497;
		case 115: goto st497;
	}
	goto tr1701;
st497:
	if ( ++p == pe )
		goto _test_eof497;
case 497:
	switch( (*p) ) {
		case 69: goto st498;
		case 101: goto st498;
	}
	goto tr1701;
st498:
	if ( ++p == pe )
		goto _test_eof498;
case 498:
	switch( (*p) ) {
		case 67: goto st499;
		case 99: goto st499;
	}
	goto tr1701;
st499:
	if ( ++p == pe )
		goto _test_eof499;
case 499:
	if ( (*p) == 51 )
		goto st500;
	goto tr1701;
st500:
	if ( ++p == pe )
		goto _test_eof500;
case 500:
	if ( (*p) == 45 )
		goto st501;
	goto tr1701;
st501:
	if ( ++p == pe )
		goto _test_eof501;
case 501:
	switch( (*p) ) {
		case 83: goto st502;
		case 115: goto st502;
	}
	goto tr1701;
st502:
	if ( ++p == pe )
		goto _test_eof502;
case 502:
	switch( (*p) ) {
		case 72: goto st503;
		case 104: goto st503;
	}
	goto tr1701;
st503:
	if ( ++p == pe )
		goto _test_eof503;
case 503:
	switch( (*p) ) {
		case 65: goto st504;
		case 97: goto st504;
	}
	goto tr1701;
st504:
	if ( ++p == pe )
		goto _test_eof504;
case 504:
	if ( (*p) == 49 )
		goto st505;
	goto tr1701;
st505:
	if ( ++p == pe )
		goto _test_eof505;
case 505:
	switch( (*p) ) {
		case 32: goto tr1726;
		case 59: goto tr1726;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1726;
	} else if ( (*p) >= 9 )
		goto tr1726;
	goto tr1701;
st506:
	if ( ++p == pe )
		goto _test_eof506;
case 506:
	switch( (*p) ) {
		case 67: goto st507;
		case 68: goto st536;
		case 99: goto st507;
		case 100: goto st536;
	}
	goto tr1701;
st507:
	if ( ++p == pe )
		goto _test_eof507;
case 507:
	switch( (*p) ) {
		case 67: goto st508;
		case 68: goto st514;
		case 99: goto st508;
		case 100: goto st514;
	}
	goto tr1701;
st508:
	if ( ++p == pe )
		goto _test_eof508;
case 508:
	if ( (*p) == 45 )
		goto st509;
	goto tr1701;
st509:
	if ( ++p == pe )
		goto _test_eof509;
case 509:
	switch( (*p) ) {
		case 71: goto st510;
		case 103: goto st510;
	}
	goto tr1701;
st510:
	if ( ++p == pe )
		goto _test_eof510;
case 510:
	switch( (*p) ) {
		case 79: goto st511;
		case 111: goto st511;
	}
	goto tr1701;
st511:
	if ( ++p == pe )
		goto _test_eof511;
case 511:
	switch( (*p) ) {
		case 83: goto st512;
		case 115: goto st512;
	}
	goto tr1701;
st512:
	if ( ++p == pe )
		goto _test_eof512;
case 512:
	switch( (*p) ) {
		case 84: goto st513;
		case 116: goto st513;
	}
	goto tr1701;
st513:
	if ( ++p == pe )
		goto _test_eof513;
case 513:
	switch( (*p) ) {
		case 32: goto tr1736;
		case 59: goto tr1736;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1736;
	} else if ( (*p) >= 9 )
		goto tr1736;
	goto tr1701;
st514:
	if ( ++p == pe )
		goto _test_eof514;
case 514:
	switch( (*p) ) {
		case 83: goto st515;
		case 115: goto st515;
	}
	goto tr1701;
st515:
	if ( ++p == pe )
		goto _test_eof515;
case 515:
	switch( (*p) ) {
		case 65: goto st516;
		case 97: goto st516;
	}
	goto tr1701;
st516:
	if ( ++p == pe )
		goto _test_eof516;
case 516:
	switch( (*p) ) {
		case 80: goto st517;
		case 112: goto st517;
	}
	goto tr1701;
st517:
	if ( ++p == pe )
		goto _test_eof517;
case 517:
	switch( (*p) ) {
		case 50: goto st518;
		case 51: goto st527;
	}
	goto tr1701;
st518:
	if ( ++p == pe )
		goto _test_eof518;
case 518:
	if ( (*p) == 53 )
		goto st519;
	goto tr1701;
st519:
	if ( ++p == pe )
		goto _test_eof519;
case 519:
	if ( (*p) == 54 )
		goto st520;
	goto tr1701;
st520:
	if ( ++p == pe )
		goto _test_eof520;
case 520:
	switch( (*p) ) {
		case 83: goto st521;
		case 115: goto st521;
	}
	goto tr1701;
st521:
	if ( ++p == pe )
		goto _test_eof521;
case 521:
	switch( (*p) ) {
		case 72: goto st522;
		case 104: goto st522;
	}
	goto tr1701;
st522:
	if ( ++p == pe )
		goto _test_eof522;
case 522:
	switch( (*p) ) {
		case 65: goto st523;
		case 97: goto st523;
	}
	goto tr1701;
st523:
	if ( ++p == pe )
		goto _test_eof523;
case 523:
	if ( (*p) == 50 )
		goto st524;
	goto tr1701;
st524:
	if ( ++p == pe )
		goto _test_eof524;
case 524:
	if ( (*p) == 53 )
		goto st525;
	goto tr1701;
st525:
	if ( ++p == pe )
		goto _test_eof525;
case 525:
	if ( (*p) == 54 )
		goto st526;
	goto tr1701;
st526:
	if ( ++p == pe )
		goto _test_eof526;
case 526:
	switch( (*p) ) {
		case 32: goto tr1750;
		case 59: goto tr1750;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1750;
	} else if ( (*p) >= 9 )
		goto tr1750;
	goto tr1701;
st527:
	if ( ++p == pe )
		goto _test_eof527;
case 527:
	if ( (*p) == 56 )
		goto st528;
	goto tr1701;
st528:
	if ( ++p == pe )
		goto _test_eof528;
case 528:
	if ( (*p) == 52 )
		goto st529;
	goto tr1701;
st529:
	if ( ++p == pe )
		goto _test_eof529;
case 529:
	switch( (*p) ) {
		case 83: goto st530;
		case 115: goto st530;
	}
	goto tr1701;
st530:
	if ( ++p == pe )
		goto _test_eof530;
case 530:
	switch( (*p) ) {
		case 72: goto st531;
		case 104: goto st531;
	}
	goto tr1701;
st531:
	if ( ++p == pe )
		goto _test_eof531;
case 531:
	switch( (*p) ) {
		case 65: goto st532;
		case 97: goto st532;
	}
	goto tr1701;
st532:
	if ( ++p == pe )
		goto _test_eof532;
case 532:
	if ( (*p) == 51 )
		goto st533;
	goto tr1701;
st533:
	if ( ++p == pe )
		goto _test_eof533;
case 533:
	if ( (*p) == 56 )
		goto st534;
	goto tr1701;
st534:
	if ( ++p == pe )
		goto _test_eof534;
case 534:
	if ( (*p) == 52 )
		goto st535;
	goto tr1701;
st535:
	if ( ++p == pe )
		goto _test_eof535;
case 535:
	switch( (*p) ) {
		case 32: goto tr1759;
		case 59: goto tr1759;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1759;
	} else if ( (*p) >= 9 )
		goto tr1759;
	goto tr1701;
st536:
	if ( ++p == pe )
		goto _test_eof536;
case 536:
	switch( (*p) ) {
		case 50: goto st537;
		case 52: goto st542;
	}
	goto tr1701;
st537:
	if ( ++p == pe )
		goto _test_eof537;
case 537:
	if ( (*p) == 53 )
		goto st538;
	goto tr1701;
st538:
	if ( ++p == pe )
		goto _test_eof538;
case 538:
	if ( (*p) == 53 )
		goto st539;
	goto tr1701;
st539:
	if ( ++p == pe )
		goto _test_eof539;
case 539:
	if ( (*p) == 49 )
		goto st540;
	goto tr1701;
st540:
	if ( ++p == pe )
		goto _test_eof540;
case 540:
	if ( (*p) == 57 )
		goto st541;
	goto tr1701;
st541:
	if ( ++p == pe )
		goto _test_eof541;
case 541:
	switch( (*p) ) {
		case 32: goto tr1766;
		case 59: goto tr1766;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1766;
	} else if ( (*p) >= 9 )
		goto tr1766;
	goto tr1701;
st542:
	if ( ++p == pe )
		goto _test_eof542;
case 542:
	if ( (*p) == 52 )
		goto st543;
	goto tr1701;
st543:
	if ( ++p == pe )
		goto _test_eof543;
case 543:
	if ( (*p) == 56 )
		goto st544;
	goto tr1701;
st544:
	if ( ++p == pe )
		goto _test_eof544;
case 544:
	switch( (*p) ) {
		case 32: goto tr1769;
		case 59: goto tr1769;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1769;
	} else if ( (*p) >= 9 )
		goto tr1769;
	goto tr1701;
st545:
	if ( ++p == pe )
		goto _test_eof545;
case 545:
	switch( (*p) ) {
		case 78: goto st546;
		case 110: goto st546;
	}
	goto tr1701;
st546:
	if ( ++p == pe )
		goto _test_eof546;
case 546:
	switch( (*p) ) {
		case 68: goto st547;
		case 100: goto st547;
	}
	goto tr1701;
st547:
	if ( ++p == pe )
		goto _test_eof547;
case 547:
	switch( (*p) ) {
		case 73: goto st548;
		case 105: goto st548;
	}
	goto tr1701;
st548:
	if ( ++p == pe )
		goto _test_eof548;
case 548:
	switch( (*p) ) {
		case 82: goto st549;
		case 114: goto st549;
	}
	goto tr1701;
st549:
	if ( ++p == pe )
		goto _test_eof549;
case 549:
	switch( (*p) ) {
		case 69: goto st550;
		case 101: goto st550;
	}
	goto tr1701;
st550:
	if ( ++p == pe )
		goto _test_eof550;
case 550:
	switch( (*p) ) {
		case 67: goto st551;
		case 99: goto st551;
	}
	goto tr1701;
st551:
	if ( ++p == pe )
		goto _test_eof551;
case 551:
	switch( (*p) ) {
		case 84: goto st552;
		case 116: goto st552;
	}
	goto tr1701;
st552:
	if ( ++p == pe )
		goto _test_eof552;
case 552:
	switch( (*p) ) {
		case 32: goto tr1777;
		case 59: goto tr1777;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1777;
	} else if ( (*p) >= 9 )
		goto tr1777;
	goto tr1701;
st553:
	if ( ++p == pe )
		goto _test_eof553;
case 553:
	switch( (*p) ) {
		case 82: goto st554;
		case 114: goto st554;
	}
	goto tr1701;
st554:
	if ( ++p == pe )
		goto _test_eof554;
case 554:
	switch( (*p) ) {
		case 73: goto st555;
		case 105: goto st555;
	}
	goto tr1701;
st555:
	if ( ++p == pe )
		goto _test_eof555;
case 555:
	switch( (*p) ) {
		case 86: goto st556;
		case 118: goto st556;
	}
	goto tr1701;
st556:
	if ( ++p == pe )
		goto _test_eof556;
case 556:
	switch( (*p) ) {
		case 65: goto st557;
		case 97: goto st557;
	}
	goto tr1701;
st557:
	if ( ++p == pe )
		goto _test_eof557;
case 557:
	switch( (*p) ) {
		case 84: goto st558;
		case 116: goto st558;
	}
	goto tr1701;
st558:
	if ( ++p == pe )
		goto _test_eof558;
case 558:
	switch( (*p) ) {
		case 69: goto st559;
		case 101: goto st559;
	}
	goto tr1701;
st559:
	if ( ++p == pe )
		goto _test_eof559;
case 559:
	switch( (*p) ) {
		case 68: goto st560;
		case 79: goto st563;
		case 100: goto st560;
		case 111: goto st563;
	}
	goto tr1701;
st560:
	if ( ++p == pe )
		goto _test_eof560;
case 560:
	switch( (*p) ) {
		case 78: goto st561;
		case 110: goto st561;
	}
	goto tr1701;
st561:
	if ( ++p == pe )
		goto _test_eof561;
case 561:
	switch( (*p) ) {
		case 83: goto st562;
		case 115: goto st562;
	}
	goto tr1701;
st562:
	if ( ++p == pe )
		goto _test_eof562;
case 562:
	switch( (*p) ) {
		case 32: goto tr1788;
		case 59: goto tr1788;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1788;
	} else if ( (*p) >= 9 )
		goto tr1788;
	goto tr1701;
st563:
	if ( ++p == pe )
		goto _test_eof563;
case 563:
	switch( (*p) ) {
		case 73: goto st564;
		case 105: goto st564;
	}
	goto tr1701;
st564:
	if ( ++p == pe )
		goto _test_eof564;
case 564:
	switch( (*p) ) {
		case 68: goto st565;
		case 100: goto st565;
	}
	goto tr1701;
st565:
	if ( ++p == pe )
		goto _test_eof565;
case 565:
	switch( (*p) ) {
		case 32: goto tr1791;
		case 59: goto tr1791;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1791;
	} else if ( (*p) >= 9 )
		goto tr1791;
	goto tr1701;
st566:
	if ( ++p == pe )
		goto _test_eof566;
case 566:
	switch( (*p) ) {
		case 83: goto st567;
		case 115: goto st567;
	}
	goto tr1701;
st567:
	if ( ++p == pe )
		goto _test_eof567;
case 567:
	switch( (*p) ) {
		case 65: goto st568;
		case 97: goto st568;
	}
	goto tr1701;
st568:
	if ( ++p == pe )
		goto _test_eof568;
case 568:
	switch( (*p) ) {
		case 77: goto st569;
		case 83: goto st572;
		case 109: goto st569;
		case 115: goto st572;
	}
	goto tr1701;
st569:
	if ( ++p == pe )
		goto _test_eof569;
case 569:
	switch( (*p) ) {
		case 68: goto st570;
		case 100: goto st570;
	}
	goto tr1701;
st570:
	if ( ++p == pe )
		goto _test_eof570;
case 570:
	if ( (*p) == 53 )
		goto st571;
	goto tr1701;
st571:
	if ( ++p == pe )
		goto _test_eof571;
case 571:
	switch( (*p) ) {
		case 32: goto tr1798;
		case 59: goto tr1798;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1798;
	} else if ( (*p) >= 9 )
		goto tr1798;
	goto tr1701;
st572:
	if ( ++p == pe )
		goto _test_eof572;
case 572:
	switch( (*p) ) {
		case 72: goto st573;
		case 104: goto st573;
	}
	goto tr1701;
st573:
	if ( ++p == pe )
		goto _test_eof573;
case 573:
	switch( (*p) ) {
		case 65: goto st574;
		case 97: goto st574;
	}
	goto tr1701;
st574:
	if ( ++p == pe )
		goto _test_eof574;
case 574:
	switch( (*p) ) {
		case 49: goto st575;
		case 50: goto st587;
		case 53: goto st590;
	}
	goto tr1701;
st575:
	if ( ++p == pe )
		goto _test_eof575;
case 575:
	switch( (*p) ) {
		case 32: goto tr1804;
		case 45: goto st576;
		case 59: goto tr1804;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1804;
	} else if ( (*p) >= 9 )
		goto tr1804;
	goto tr1701;
st576:
	if ( ++p == pe )
		goto _test_eof576;
case 576:
	switch( (*p) ) {
		case 78: goto st577;
		case 110: goto st577;
	}
	goto tr1701;
st577:
	if ( ++p == pe )
		goto _test_eof577;
case 577:
	switch( (*p) ) {
		case 83: goto st578;
		case 115: goto st578;
	}
	goto tr1701;
st578:
	if ( ++p == pe )
		goto _test_eof578;
case 578:
	switch( (*p) ) {
		case 69: goto st579;
		case 101: goto st579;
	}
	goto tr1701;
st579:
	if ( ++p == pe )
		goto _test_eof579;
case 579:
	switch( (*p) ) {
		case 67: goto st580;
		case 99: goto st580;
	}
	goto tr1701;
st580:
	if ( ++p == pe )
		goto _test_eof580;
case 580:
	if ( (*p) == 51 )
		goto st581;
	goto tr1701;
st581:
	if ( ++p == pe )
		goto _test_eof581;
case 581:
	if ( (*p) == 45 )
		goto st582;
	goto tr1701;
st582:
	if ( ++p == pe )
		goto _test_eof582;
case 582:
	switch( (*p) ) {
		case 83: goto st583;
		case 115: goto st583;
	}
	goto tr1701;
st583:
	if ( ++p == pe )
		goto _test_eof583;
case 583:
	switch( (*p) ) {
		case 72: goto st584;
		case 104: goto st584;
	}
	goto tr1701;
st584:
	if ( ++p == pe )
		goto _test_eof584;
case 584:
	switch( (*p) ) {
		case 65: goto st585;
		case 97: goto st585;
	}
	goto tr1701;
st585:
	if ( ++p == pe )
		goto _test_eof585;
case 585:
	if ( (*p) == 49 )
		goto st586;
	goto tr1701;
st586:
	if ( ++p == pe )
		goto _test_eof586;
case 586:
	switch( (*p) ) {
		case 32: goto tr1816;
		case 59: goto tr1816;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1816;
	} else if ( (*p) >= 9 )
		goto tr1816;
	goto tr1701;
st587:
	if ( ++p == pe )
		goto _test_eof587;
case 587:
	if ( (*p) == 53 )
		goto st588;
	goto tr1701;
st588:
	if ( ++p == pe )
		goto _test_eof588;
case 588:
	if ( (*p) == 54 )
		goto st589;
	goto tr1701;
st589:
	if ( ++p == pe )
		goto _test_eof589;
case 589:
	switch( (*p) ) {
		case 32: goto tr1819;
		case 59: goto tr1819;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1819;
	} else if ( (*p) >= 9 )
		goto tr1819;
	goto tr1701;
st590:
	if ( ++p == pe )
		goto _test_eof590;
case 590:
	if ( (*p) == 49 )
		goto st591;
	goto tr1701;
st591:
	if ( ++p == pe )
		goto _test_eof591;
case 591:
	if ( (*p) == 50 )
		goto st592;
	goto tr1701;
st592:
	if ( ++p == pe )
		goto _test_eof592;
case 592:
	switch( (*p) ) {
		case 32: goto tr1822;
		case 59: goto tr1822;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1822;
	} else if ( (*p) >= 9 )
		goto tr1822;
	goto tr1701;
st593:
	if ( ++p == pe )
		goto _test_eof593;
case 593:
	switch( (*p) ) {
		case 65: goto st595;
		case 73: goto st601;
		case 79: goto st618;
		case 80: goto st621;
		case 83: goto st627;
		case 85: goto st631;
		case 97: goto st595;
		case 105: goto st601;
		case 111: goto st618;
		case 112: goto st621;
		case 115: goto st627;
		case 117: goto st631;
	}
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr1824;
	goto tr1823;
tr1824:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st594;
tr1832:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st594;
st594:
	if ( ++p == pe )
		goto _test_eof594;
case 594:
#line 54617 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr1831;
		case 59: goto tr1831;
	}
	if ( (*p) < 40 ) {
		if ( 9 <= (*p) && (*p) <= 10 )
			goto tr1831;
	} else if ( (*p) > 41 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr1832;
	} else
		goto tr1831;
	goto tr1823;
tr1831:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1171;
tr1838:
#line 1235 "scanner_body.rl"
	{
		*((uint16_t *)rdata_tail) = htons(7);
		rdata_tail += 2;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1171;
tr1847:
#line 1239 "scanner_body.rl"
	{
		*((uint16_t *)rdata_tail) = htons(8);
		rdata_tail += 2;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1171;
tr1851:
#line 1231 "scanner_body.rl"
	{
		*((uint16_t *)rdata_tail) = htons(6);
		rdata_tail += 2;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1171;
tr1854:
#line 1223 "scanner_body.rl"
	{
		*((uint16_t *)rdata_tail) = htons(4);
		rdata_tail += 2;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1171;
tr1858:
#line 1227 "scanner_body.rl"
	{
		*((uint16_t *)rdata_tail) = htons(5);
		rdata_tail += 2;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1171;
tr1861:
#line 1247 "scanner_body.rl"
	{
		*((uint16_t *)rdata_tail) = htons(254);
		rdata_tail += 2;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1171;
tr1865:
#line 1219 "scanner_body.rl"
	{
		*((uint16_t *)rdata_tail) = htons(3);
		rdata_tail += 2;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1171;
tr1868:
#line 1211 "scanner_body.rl"
	{
		*((uint16_t *)rdata_tail) = htons(1);
		rdata_tail += 2;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1171;
tr1872:
#line 1215 "scanner_body.rl"
	{
		*((uint16_t *)rdata_tail) = htons(2);
		rdata_tail += 2;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1171;
tr1875:
#line 1243 "scanner_body.rl"
	{
		*((uint16_t *)rdata_tail) = htons(253);
		rdata_tail += 2;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1171;
st1171:
	if ( ++p == pe )
		goto _test_eof1171;
case 1171:
#line 54762 "scanner.c"
	goto st0;
st595:
	if ( ++p == pe )
		goto _test_eof595;
case 595:
	switch( (*p) ) {
		case 67: goto st596;
		case 99: goto st596;
	}
	goto tr1823;
st596:
	if ( ++p == pe )
		goto _test_eof596;
case 596:
	switch( (*p) ) {
		case 80: goto st597;
		case 112: goto st597;
	}
	goto tr1823;
st597:
	if ( ++p == pe )
		goto _test_eof597;
case 597:
	switch( (*p) ) {
		case 75: goto st598;
		case 107: goto st598;
	}
	goto tr1823;
st598:
	if ( ++p == pe )
		goto _test_eof598;
case 598:
	switch( (*p) ) {
		case 73: goto st599;
		case 105: goto st599;
	}
	goto tr1823;
st599:
	if ( ++p == pe )
		goto _test_eof599;
case 599:
	switch( (*p) ) {
		case 88: goto st600;
		case 120: goto st600;
	}
	goto tr1823;
st600:
	if ( ++p == pe )
		goto _test_eof600;
case 600:
	switch( (*p) ) {
		case 32: goto tr1838;
		case 59: goto tr1838;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1838;
	} else if ( (*p) >= 9 )
		goto tr1838;
	goto tr1823;
st601:
	if ( ++p == pe )
		goto _test_eof601;
case 601:
	switch( (*p) ) {
		case 65: goto st602;
		case 80: goto st608;
		case 83: goto st614;
		case 97: goto st602;
		case 112: goto st608;
		case 115: goto st614;
	}
	goto tr1823;
st602:
	if ( ++p == pe )
		goto _test_eof602;
case 602:
	switch( (*p) ) {
		case 67: goto st603;
		case 99: goto st603;
	}
	goto tr1823;
st603:
	if ( ++p == pe )
		goto _test_eof603;
case 603:
	switch( (*p) ) {
		case 80: goto st604;
		case 112: goto st604;
	}
	goto tr1823;
st604:
	if ( ++p == pe )
		goto _test_eof604;
case 604:
	switch( (*p) ) {
		case 75: goto st605;
		case 107: goto st605;
	}
	goto tr1823;
st605:
	if ( ++p == pe )
		goto _test_eof605;
case 605:
	switch( (*p) ) {
		case 73: goto st606;
		case 105: goto st606;
	}
	goto tr1823;
st606:
	if ( ++p == pe )
		goto _test_eof606;
case 606:
	switch( (*p) ) {
		case 88: goto st607;
		case 120: goto st607;
	}
	goto tr1823;
st607:
	if ( ++p == pe )
		goto _test_eof607;
case 607:
	switch( (*p) ) {
		case 32: goto tr1847;
		case 59: goto tr1847;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1847;
	} else if ( (*p) >= 9 )
		goto tr1847;
	goto tr1823;
st608:
	if ( ++p == pe )
		goto _test_eof608;
case 608:
	switch( (*p) ) {
		case 71: goto st609;
		case 75: goto st611;
		case 103: goto st609;
		case 107: goto st611;
	}
	goto tr1823;
st609:
	if ( ++p == pe )
		goto _test_eof609;
case 609:
	switch( (*p) ) {
		case 80: goto st610;
		case 112: goto st610;
	}
	goto tr1823;
st610:
	if ( ++p == pe )
		goto _test_eof610;
case 610:
	switch( (*p) ) {
		case 32: goto tr1851;
		case 59: goto tr1851;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1851;
	} else if ( (*p) >= 9 )
		goto tr1851;
	goto tr1823;
st611:
	if ( ++p == pe )
		goto _test_eof611;
case 611:
	switch( (*p) ) {
		case 73: goto st612;
		case 105: goto st612;
	}
	goto tr1823;
st612:
	if ( ++p == pe )
		goto _test_eof612;
case 612:
	switch( (*p) ) {
		case 88: goto st613;
		case 120: goto st613;
	}
	goto tr1823;
st613:
	if ( ++p == pe )
		goto _test_eof613;
case 613:
	switch( (*p) ) {
		case 32: goto tr1854;
		case 59: goto tr1854;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1854;
	} else if ( (*p) >= 9 )
		goto tr1854;
	goto tr1823;
st614:
	if ( ++p == pe )
		goto _test_eof614;
case 614:
	switch( (*p) ) {
		case 80: goto st615;
		case 112: goto st615;
	}
	goto tr1823;
st615:
	if ( ++p == pe )
		goto _test_eof615;
case 615:
	switch( (*p) ) {
		case 75: goto st616;
		case 107: goto st616;
	}
	goto tr1823;
st616:
	if ( ++p == pe )
		goto _test_eof616;
case 616:
	switch( (*p) ) {
		case 73: goto st617;
		case 105: goto st617;
	}
	goto tr1823;
st617:
	if ( ++p == pe )
		goto _test_eof617;
case 617:
	switch( (*p) ) {
		case 32: goto tr1858;
		case 59: goto tr1858;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1858;
	} else if ( (*p) >= 9 )
		goto tr1858;
	goto tr1823;
st618:
	if ( ++p == pe )
		goto _test_eof618;
case 618:
	switch( (*p) ) {
		case 73: goto st619;
		case 105: goto st619;
	}
	goto tr1823;
st619:
	if ( ++p == pe )
		goto _test_eof619;
case 619:
	switch( (*p) ) {
		case 68: goto st620;
		case 100: goto st620;
	}
	goto tr1823;
st620:
	if ( ++p == pe )
		goto _test_eof620;
case 620:
	switch( (*p) ) {
		case 32: goto tr1861;
		case 59: goto tr1861;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1861;
	} else if ( (*p) >= 9 )
		goto tr1861;
	goto tr1823;
st621:
	if ( ++p == pe )
		goto _test_eof621;
case 621:
	switch( (*p) ) {
		case 71: goto st622;
		case 75: goto st624;
		case 103: goto st622;
		case 107: goto st624;
	}
	goto tr1823;
st622:
	if ( ++p == pe )
		goto _test_eof622;
case 622:
	switch( (*p) ) {
		case 80: goto st623;
		case 112: goto st623;
	}
	goto tr1823;
st623:
	if ( ++p == pe )
		goto _test_eof623;
case 623:
	switch( (*p) ) {
		case 32: goto tr1865;
		case 59: goto tr1865;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1865;
	} else if ( (*p) >= 9 )
		goto tr1865;
	goto tr1823;
st624:
	if ( ++p == pe )
		goto _test_eof624;
case 624:
	switch( (*p) ) {
		case 73: goto st625;
		case 105: goto st625;
	}
	goto tr1823;
st625:
	if ( ++p == pe )
		goto _test_eof625;
case 625:
	switch( (*p) ) {
		case 88: goto st626;
		case 120: goto st626;
	}
	goto tr1823;
st626:
	if ( ++p == pe )
		goto _test_eof626;
case 626:
	switch( (*p) ) {
		case 32: goto tr1868;
		case 59: goto tr1868;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1868;
	} else if ( (*p) >= 9 )
		goto tr1868;
	goto tr1823;
st627:
	if ( ++p == pe )
		goto _test_eof627;
case 627:
	switch( (*p) ) {
		case 80: goto st628;
		case 112: goto st628;
	}
	goto tr1823;
st628:
	if ( ++p == pe )
		goto _test_eof628;
case 628:
	switch( (*p) ) {
		case 75: goto st629;
		case 107: goto st629;
	}
	goto tr1823;
st629:
	if ( ++p == pe )
		goto _test_eof629;
case 629:
	switch( (*p) ) {
		case 73: goto st630;
		case 105: goto st630;
	}
	goto tr1823;
st630:
	if ( ++p == pe )
		goto _test_eof630;
case 630:
	switch( (*p) ) {
		case 32: goto tr1872;
		case 59: goto tr1872;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1872;
	} else if ( (*p) >= 9 )
		goto tr1872;
	goto tr1823;
st631:
	if ( ++p == pe )
		goto _test_eof631;
case 631:
	switch( (*p) ) {
		case 82: goto st632;
		case 114: goto st632;
	}
	goto tr1823;
st632:
	if ( ++p == pe )
		goto _test_eof632;
case 632:
	switch( (*p) ) {
		case 73: goto st633;
		case 105: goto st633;
	}
	goto tr1823;
st633:
	if ( ++p == pe )
		goto _test_eof633;
case 633:
	switch( (*p) ) {
		case 32: goto tr1875;
		case 59: goto tr1875;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1875;
	} else if ( (*p) >= 9 )
		goto tr1875;
	goto tr1823;
st634:
	if ( ++p == pe )
		goto _test_eof634;
case 634:
	if ( (*p) == 46 )
		goto tr1877;
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr1877;
	goto tr1876;
tr1877:
#line 835 "scanner_body.rl"
	{
		s->buffer_length = 0;
	}
#line 838 "scanner_body.rl"
	{
		if (s->buffer_length < MAX_RDATA_LENGTH) {
			s->buffer[s->buffer_length++] = (*p);
		}
		else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st635;
tr1879:
#line 838 "scanner_body.rl"
	{
		if (s->buffer_length < MAX_RDATA_LENGTH) {
			s->buffer[s->buffer_length++] = (*p);
		}
		else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st635;
st635:
	if ( ++p == pe )
		goto _test_eof635;
case 635:
#line 55214 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr1878;
		case 46: goto tr1879;
		case 59: goto tr1878;
	}
	if ( (*p) < 40 ) {
		if ( 9 <= (*p) && (*p) <= 10 )
			goto tr1878;
	} else if ( (*p) > 41 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr1879;
	} else
		goto tr1878;
	goto tr1876;
tr1878:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1172;
st1172:
	if ( ++p == pe )
		goto _test_eof1172;
case 1172:
#line 55253 "scanner.c"
	goto st0;
st636:
	if ( ++p == pe )
		goto _test_eof636;
case 636:
	switch( (*p) ) {
		case 42: goto tr1880;
		case 92: goto tr1880;
		case 95: goto tr1880;
	}
	if ( (*p) < 64 ) {
		if ( 45 <= (*p) && (*p) <= 57 )
			goto tr1880;
	} else if ( (*p) > 90 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto tr1880;
	} else
		goto tr1880;
	goto tr71;
tr1880:
#line 288 "scanner_body.rl"
	{
		s->dname = rdata_tail;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 637;goto st271;} }
	goto st637;
st637:
	if ( ++p == pe )
		goto _test_eof637;
case 637:
#line 55285 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr1881;
		case 59: goto tr1881;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr1881;
	} else if ( (*p) >= 9 )
		goto tr1881;
	goto tr71;
tr1881:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1173;
st1173:
	if ( ++p == pe )
		goto _test_eof1173;
case 1173:
#line 55310 "scanner.c"
	goto st0;
st638:
	if ( ++p == pe )
		goto _test_eof638;
case 638:
	switch( (*p) ) {
		case 42: goto tr1882;
		case 92: goto tr1882;
		case 95: goto tr1882;
	}
	if ( (*p) < 64 ) {
		if ( 45 <= (*p) && (*p) <= 57 )
			goto tr1882;
	} else if ( (*p) > 90 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto tr1882;
	} else
		goto tr1882;
	goto tr71;
tr1882:
#line 288 "scanner_body.rl"
	{
		s->dname = rdata_tail;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 639;goto st271;} }
	goto st639;
st639:
	if ( ++p == pe )
		goto _test_eof639;
case 639:
#line 55342 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr1883;
		case 32: goto tr1883;
		case 40: goto tr1884;
		case 41: goto tr1885;
		case 1034: goto tr1886;
		case 1083: goto tr1887;
	}
	goto tr71;
tr1889:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st640;
tr1890:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st640;
tr1892:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st640;
tr2036:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st640;
tr1883:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
	goto st640;
tr1884:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st640;
tr1885:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st640;
tr1886:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st640;
st640:
	if ( ++p == pe )
		goto _test_eof640;
case 640:
#line 55450 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st640;
		case 32: goto st640;
		case 40: goto tr1889;
		case 41: goto tr1890;
		case 42: goto tr1891;
		case 92: goto tr1891;
		case 95: goto tr1891;
		case 1034: goto tr1892;
		case 1083: goto st669;
	}
	if ( _widec < 64 ) {
		if ( 45 <= _widec && _widec <= 57 )
			goto tr1891;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr1891;
	} else
		goto tr1891;
	goto tr71;
tr1891:
#line 288 "scanner_body.rl"
	{
		s->dname = rdata_tail;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 641;goto st271;} }
	goto st641;
st641:
	if ( ++p == pe )
		goto _test_eof641;
case 641:
#line 55497 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr1894;
		case 32: goto tr1894;
		case 40: goto tr1895;
		case 41: goto tr1896;
		case 1034: goto tr1897;
		case 1083: goto tr1898;
	}
	goto tr71;
tr1901:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st642;
tr1902:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st642;
tr1904:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st642;
tr2034:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st642;
tr1894:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
	goto st642;
tr1895:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st642;
tr1896:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st642;
tr1897:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st642;
st642:
	if ( ++p == pe )
		goto _test_eof642;
case 642:
#line 55605 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st642;
		case 32: goto st642;
		case 40: goto tr1901;
		case 41: goto tr1902;
		case 1034: goto tr1904;
		case 1083: goto st668;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr1903;
	goto tr1899;
tr1903:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st643;
tr1909:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st643;
st643:
	if ( ++p == pe )
		goto _test_eof643;
case 643:
#line 55673 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr1906;
		case 32: goto tr1906;
		case 40: goto tr1907;
		case 41: goto tr1908;
		case 1034: goto tr1910;
		case 1083: goto tr1911;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr1909;
	goto tr1899;
tr1913:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st644;
tr1914:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st644;
tr1916:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st644;
tr2032:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st644;
tr1906:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st644;
tr1907:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st644;
tr1908:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st644;
tr1910:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st644;
st644:
	if ( ++p == pe )
		goto _test_eof644;
case 644:
#line 55811 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st644;
		case 32: goto st644;
		case 40: goto tr1913;
		case 41: goto tr1914;
		case 1034: goto tr1916;
		case 1083: goto st667;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr1915;
	goto tr1899;
tr1915:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st645;
tr1922:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st645;
st645:
	if ( ++p == pe )
		goto _test_eof645;
case 645:
#line 55879 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr1919;
		case 32: goto tr1919;
		case 40: goto tr1920;
		case 41: goto tr1921;
		case 68: goto tr1923;
		case 72: goto tr1924;
		case 77: goto tr1925;
		case 83: goto st664;
		case 87: goto tr1927;
		case 100: goto tr1923;
		case 104: goto tr1924;
		case 109: goto tr1925;
		case 115: goto st664;
		case 119: goto tr1927;
		case 1034: goto tr1928;
		case 1083: goto tr1929;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr1922;
	goto tr1918;
tr1931:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st646;
tr1932:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st646;
tr1934:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st646;
tr2017:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st646;
tr1919:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st646;
tr1920:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st646;
tr1921:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st646;
tr1928:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st646;
tr2025:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st646;
tr2026:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st646;
tr2027:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st646;
tr2029:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st646;
st646:
	if ( ++p == pe )
		goto _test_eof646;
case 646:
#line 56135 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st646;
		case 32: goto st646;
		case 40: goto tr1931;
		case 41: goto tr1932;
		case 1034: goto tr1934;
		case 1083: goto st663;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr1933;
	goto tr1899;
tr1933:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st647;
tr1939:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st647;
st647:
	if ( ++p == pe )
		goto _test_eof647;
case 647:
#line 56203 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr1936;
		case 32: goto tr1936;
		case 40: goto tr1937;
		case 41: goto tr1938;
		case 68: goto tr1940;
		case 72: goto tr1941;
		case 77: goto tr1942;
		case 83: goto st660;
		case 87: goto tr1944;
		case 100: goto tr1940;
		case 104: goto tr1941;
		case 109: goto tr1942;
		case 115: goto st660;
		case 119: goto tr1944;
		case 1034: goto tr1945;
		case 1083: goto tr1946;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr1939;
	goto tr1918;
tr1948:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st648;
tr1949:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st648;
tr1951:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st648;
tr2002:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st648;
tr1936:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st648;
tr1937:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st648;
tr1938:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st648;
tr1945:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st648;
tr2010:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st648;
tr2011:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st648;
tr2012:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st648;
tr2014:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st648;
st648:
	if ( ++p == pe )
		goto _test_eof648;
case 648:
#line 56459 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st648;
		case 32: goto st648;
		case 40: goto tr1948;
		case 41: goto tr1949;
		case 1034: goto tr1951;
		case 1083: goto st659;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr1950;
	goto tr1899;
tr1950:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st649;
tr1956:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st649;
st649:
	if ( ++p == pe )
		goto _test_eof649;
case 649:
#line 56527 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr1953;
		case 32: goto tr1953;
		case 40: goto tr1954;
		case 41: goto tr1955;
		case 68: goto tr1957;
		case 72: goto tr1958;
		case 77: goto tr1959;
		case 83: goto st656;
		case 87: goto tr1961;
		case 100: goto tr1957;
		case 104: goto tr1958;
		case 109: goto tr1959;
		case 115: goto st656;
		case 119: goto tr1961;
		case 1034: goto tr1962;
		case 1083: goto tr1963;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr1956;
	goto tr1918;
tr1965:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st650;
tr1966:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st650;
tr1968:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st650;
tr1987:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st650;
tr1953:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st650;
tr1954:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st650;
tr1955:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st650;
tr1962:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st650;
tr1995:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st650;
tr1996:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st650;
tr1997:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st650;
tr1999:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st650;
st650:
	if ( ++p == pe )
		goto _test_eof650;
case 650:
#line 56783 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st650;
		case 32: goto st650;
		case 40: goto tr1965;
		case 41: goto tr1966;
		case 1034: goto tr1968;
		case 1083: goto st655;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr1967;
	goto tr1899;
tr1967:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st651;
tr1971:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st651;
st651:
	if ( ++p == pe )
		goto _test_eof651;
case 651:
#line 56851 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr1970;
		case 59: goto tr1970;
		case 68: goto tr1972;
		case 72: goto tr1973;
		case 77: goto tr1974;
		case 83: goto st652;
		case 87: goto tr1976;
		case 100: goto tr1972;
		case 104: goto tr1973;
		case 109: goto tr1974;
		case 115: goto st652;
		case 119: goto tr1976;
	}
	if ( (*p) < 40 ) {
		if ( 9 <= (*p) && (*p) <= 10 )
			goto tr1970;
	} else if ( (*p) > 41 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr1971;
	} else
		goto tr1970;
	goto tr1918;
tr1970:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1174;
tr1984:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1174;
st1174:
	if ( ++p == pe )
		goto _test_eof1174;
case 1174:
#line 56922 "scanner.c"
	goto st0;
tr1972:
#line 443 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 86400)) {
	                  s->number64 *= 86400;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st652;
tr1973:
#line 436 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 3600)) {
	                  s->number64 *= 3600;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st652;
tr1974:
#line 429 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 60)) {
	                  s->number64 *= 60;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st652;
tr1976:
#line 450 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 604800)) {
	                  s->number64 *= 604800;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st652;
st652:
	if ( ++p == pe )
		goto _test_eof652;
case 652:
#line 56968 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr1970;
		case 59: goto tr1970;
	}
	if ( (*p) < 40 ) {
		if ( 9 <= (*p) && (*p) <= 10 )
			goto tr1970;
	} else if ( (*p) > 41 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr1977;
	} else
		goto tr1970;
	goto tr1918;
tr1978:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st653;
tr1977:
#line 460 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st653;
tr1985:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 460 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st653;
st653:
	if ( ++p == pe )
		goto _test_eof653;
case 653:
#line 57062 "scanner.c"
	switch( (*p) ) {
		case 68: goto tr1979;
		case 72: goto tr1980;
		case 77: goto tr1981;
		case 83: goto st654;
		case 87: goto tr1983;
		case 100: goto tr1979;
		case 104: goto tr1980;
		case 109: goto tr1981;
		case 115: goto st654;
		case 119: goto tr1983;
	}
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr1978;
	goto tr1918;
tr1979:
#line 443 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 86400)) {
	                  s->number64 *= 86400;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st654;
tr1980:
#line 436 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 3600)) {
	                  s->number64 *= 3600;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st654;
tr1981:
#line 429 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 60)) {
	                  s->number64 *= 60;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st654;
tr1983:
#line 450 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 604800)) {
	                  s->number64 *= 604800;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st654;
st654:
	if ( ++p == pe )
		goto _test_eof654;
case 654:
#line 57122 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr1984;
		case 59: goto tr1984;
	}
	if ( (*p) < 40 ) {
		if ( 9 <= (*p) && (*p) <= 10 )
			goto tr1984;
	} else if ( (*p) > 41 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr1985;
	} else
		goto tr1984;
	goto tr1918;
tr1986:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st655;
tr1963:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st655;
tr2000:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st655;
st655:
	if ( ++p == pe )
		goto _test_eof655;
case 655:
#line 57183 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr1987;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr1986;
	goto tr71;
tr1957:
#line 443 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 86400)) {
	                  s->number64 *= 86400;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st656;
tr1958:
#line 436 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 3600)) {
	                  s->number64 *= 3600;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st656;
tr1959:
#line 429 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 60)) {
	                  s->number64 *= 60;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st656;
tr1961:
#line 450 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 604800)) {
	                  s->number64 *= 604800;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st656;
st656:
	if ( ++p == pe )
		goto _test_eof656;
case 656:
#line 57254 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr1953;
		case 32: goto tr1953;
		case 40: goto tr1954;
		case 41: goto tr1955;
		case 1034: goto tr1962;
		case 1083: goto tr1963;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr1988;
	goto tr1918;
tr1989:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st657;
tr1988:
#line 460 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st657;
tr1998:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 460 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st657;
st657:
	if ( ++p == pe )
		goto _test_eof657;
case 657:
#line 57360 "scanner.c"
	switch( (*p) ) {
		case 68: goto tr1990;
		case 72: goto tr1991;
		case 77: goto tr1992;
		case 83: goto st658;
		case 87: goto tr1994;
		case 100: goto tr1990;
		case 104: goto tr1991;
		case 109: goto tr1992;
		case 115: goto st658;
		case 119: goto tr1994;
	}
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr1989;
	goto tr1918;
tr1990:
#line 443 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 86400)) {
	                  s->number64 *= 86400;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st658;
tr1991:
#line 436 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 3600)) {
	                  s->number64 *= 3600;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st658;
tr1992:
#line 429 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 60)) {
	                  s->number64 *= 60;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st658;
tr1994:
#line 450 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 604800)) {
	                  s->number64 *= 604800;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st658;
st658:
	if ( ++p == pe )
		goto _test_eof658;
case 658:
#line 57420 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr1995;
		case 32: goto tr1995;
		case 40: goto tr1996;
		case 41: goto tr1997;
		case 1034: goto tr1999;
		case 1083: goto tr2000;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr1998;
	goto tr1918;
tr2001:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st659;
tr1946:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st659;
tr2015:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st659;
st659:
	if ( ++p == pe )
		goto _test_eof659;
case 659:
#line 57493 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2002;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2001;
	goto tr71;
tr1940:
#line 443 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 86400)) {
	                  s->number64 *= 86400;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st660;
tr1941:
#line 436 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 3600)) {
	                  s->number64 *= 3600;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st660;
tr1942:
#line 429 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 60)) {
	                  s->number64 *= 60;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st660;
tr1944:
#line 450 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 604800)) {
	                  s->number64 *= 604800;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st660;
st660:
	if ( ++p == pe )
		goto _test_eof660;
case 660:
#line 57564 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr1936;
		case 32: goto tr1936;
		case 40: goto tr1937;
		case 41: goto tr1938;
		case 1034: goto tr1945;
		case 1083: goto tr1946;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2003;
	goto tr1918;
tr2004:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st661;
tr2003:
#line 460 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st661;
tr2013:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 460 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st661;
st661:
	if ( ++p == pe )
		goto _test_eof661;
case 661:
#line 57670 "scanner.c"
	switch( (*p) ) {
		case 68: goto tr2005;
		case 72: goto tr2006;
		case 77: goto tr2007;
		case 83: goto st662;
		case 87: goto tr2009;
		case 100: goto tr2005;
		case 104: goto tr2006;
		case 109: goto tr2007;
		case 115: goto st662;
		case 119: goto tr2009;
	}
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr2004;
	goto tr1918;
tr2005:
#line 443 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 86400)) {
	                  s->number64 *= 86400;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st662;
tr2006:
#line 436 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 3600)) {
	                  s->number64 *= 3600;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st662;
tr2007:
#line 429 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 60)) {
	                  s->number64 *= 60;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st662;
tr2009:
#line 450 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 604800)) {
	                  s->number64 *= 604800;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st662;
st662:
	if ( ++p == pe )
		goto _test_eof662;
case 662:
#line 57730 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2010;
		case 32: goto tr2010;
		case 40: goto tr2011;
		case 41: goto tr2012;
		case 1034: goto tr2014;
		case 1083: goto tr2015;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2013;
	goto tr1918;
tr2016:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st663;
tr1929:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st663;
tr2030:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st663;
st663:
	if ( ++p == pe )
		goto _test_eof663;
case 663:
#line 57803 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2017;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2016;
	goto tr71;
tr1923:
#line 443 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 86400)) {
	                  s->number64 *= 86400;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st664;
tr1924:
#line 436 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 3600)) {
	                  s->number64 *= 3600;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st664;
tr1925:
#line 429 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 60)) {
	                  s->number64 *= 60;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st664;
tr1927:
#line 450 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 604800)) {
	                  s->number64 *= 604800;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st664;
st664:
	if ( ++p == pe )
		goto _test_eof664;
case 664:
#line 57874 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr1919;
		case 32: goto tr1919;
		case 40: goto tr1920;
		case 41: goto tr1921;
		case 1034: goto tr1928;
		case 1083: goto tr1929;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2018;
	goto tr1918;
tr2019:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st665;
tr2018:
#line 460 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st665;
tr2028:
#line 463 "scanner_body.rl"
	{
		if (s->number64 + s->number64_tmp < UINT32_MAX) {
			s->number64 += s->number64_tmp;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 460 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st665;
st665:
	if ( ++p == pe )
		goto _test_eof665;
case 665:
#line 57980 "scanner.c"
	switch( (*p) ) {
		case 68: goto tr2020;
		case 72: goto tr2021;
		case 77: goto tr2022;
		case 83: goto st666;
		case 87: goto tr2024;
		case 100: goto tr2020;
		case 104: goto tr2021;
		case 109: goto tr2022;
		case 115: goto st666;
		case 119: goto tr2024;
	}
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr2019;
	goto tr1918;
tr2020:
#line 443 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 86400)) {
	                  s->number64 *= 86400;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st666;
tr2021:
#line 436 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 3600)) {
	                  s->number64 *= 3600;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st666;
tr2022:
#line 429 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 60)) {
	                  s->number64 *= 60;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st666;
tr2024:
#line 450 "scanner_body.rl"
	{ if (s->number64 <= (UINT32_MAX / 604800)) {
	                  s->number64 *= 604800;
	              } else {
	                  WARN(ZS_NUMBER32_OVERFLOW);
	                  p--; {goto st269;}
	              }
	            }
	goto st666;
st666:
	if ( ++p == pe )
		goto _test_eof666;
case 666:
#line 58040 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2025;
		case 32: goto tr2025;
		case 40: goto tr2026;
		case 41: goto tr2027;
		case 1034: goto tr2029;
		case 1083: goto tr2030;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2028;
	goto tr1918;
tr2031:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st667;
tr1911:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st667;
st667:
	if ( ++p == pe )
		goto _test_eof667;
case 667:
#line 58091 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2032;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2031;
	goto tr71;
tr2033:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st668;
tr1898:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
	goto st668;
st668:
	if ( ++p == pe )
		goto _test_eof668;
case 668:
#line 58136 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2034;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2033;
	goto tr71;
tr2035:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st669;
tr1887:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
	goto st669;
st669:
	if ( ++p == pe )
		goto _test_eof669;
case 669:
#line 58181 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2036;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2035;
	goto tr71;
st670:
	if ( ++p == pe )
		goto _test_eof670;
case 670:
	switch( (*p) ) {
		case 32: goto tr71;
		case 59: goto tr71;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr71;
	} else if ( (*p) >= 9 )
		goto tr71;
	goto tr2037;
tr2037:
#line 242 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			s->item_length_location = rdata_tail++;
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 629 "scanner_body.rl"
	{ p--; {stack[top++] = 671;goto st280;} }
	goto st671;
st671:
	if ( ++p == pe )
		goto _test_eof671;
case 671:
#line 58239 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2038;
		case 32: goto tr2038;
		case 40: goto tr2039;
		case 41: goto tr2040;
		case 1034: goto tr2041;
		case 1083: goto tr2042;
	}
	goto tr71;
tr2045:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st672;
tr2046:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st672;
tr2047:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st672;
tr2051:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st672;
tr2038:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st672;
tr2039:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st672;
tr2040:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st672;
tr2041:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st672;
st672:
	if ( ++p == pe )
		goto _test_eof672;
case 672:
#line 58375 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st672;
		case 32: goto st672;
		case 40: goto tr2045;
		case 41: goto tr2046;
		case 1034: goto tr2047;
		case 1083: goto st674;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr2043;
	} else if ( _widec > 58 ) {
		if ( 60 <= _widec )
			goto tr2043;
	} else
		goto tr2043;
	goto tr71;
tr2043:
#line 242 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			s->item_length_location = rdata_tail++;
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 629 "scanner_body.rl"
	{ p--; {stack[top++] = 673;goto st280;} }
	goto st673;
st673:
	if ( ++p == pe )
		goto _test_eof673;
case 673:
#line 58424 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr2049;
		case 59: goto tr2049;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr2049;
	} else if ( (*p) >= 9 )
		goto tr2049;
	goto tr71;
tr2049:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1175;
st1175:
	if ( ++p == pe )
		goto _test_eof1175;
case 1175:
#line 58456 "scanner.c"
	goto st0;
tr2050:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st674;
tr2042:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st674;
st674:
	if ( ++p == pe )
		goto _test_eof674;
case 674:
#line 58483 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2051;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2050;
	goto tr71;
st675:
	if ( ++p == pe )
		goto _test_eof675;
case 675:
	switch( (*p) ) {
		case 42: goto tr2052;
		case 92: goto tr2052;
		case 95: goto tr2052;
	}
	if ( (*p) < 64 ) {
		if ( 45 <= (*p) && (*p) <= 57 )
			goto tr2052;
	} else if ( (*p) > 90 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto tr2052;
	} else
		goto tr2052;
	goto tr71;
tr2052:
#line 288 "scanner_body.rl"
	{
		s->dname = rdata_tail;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 676;goto st271;} }
	goto st676;
st676:
	if ( ++p == pe )
		goto _test_eof676;
case 676:
#line 58540 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2053;
		case 32: goto tr2053;
		case 40: goto tr2054;
		case 41: goto tr2055;
		case 1034: goto tr2056;
		case 1083: goto tr2057;
	}
	goto tr71;
tr2059:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st677;
tr2060:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st677;
tr2062:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st677;
tr2066:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st677;
tr2053:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
	goto st677;
tr2054:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st677;
tr2055:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st677;
tr2056:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st677;
st677:
	if ( ++p == pe )
		goto _test_eof677;
case 677:
#line 58648 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st677;
		case 32: goto st677;
		case 40: goto tr2059;
		case 41: goto tr2060;
		case 42: goto tr2061;
		case 92: goto tr2061;
		case 95: goto tr2061;
		case 1034: goto tr2062;
		case 1083: goto st679;
	}
	if ( _widec < 64 ) {
		if ( 45 <= _widec && _widec <= 57 )
			goto tr2061;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr2061;
	} else
		goto tr2061;
	goto tr71;
tr2061:
#line 288 "scanner_body.rl"
	{
		s->dname = rdata_tail;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 678;goto st271;} }
	goto st678;
st678:
	if ( ++p == pe )
		goto _test_eof678;
case 678:
#line 58695 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr2064;
		case 59: goto tr2064;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr2064;
	} else if ( (*p) >= 9 )
		goto tr2064;
	goto tr71;
tr2064:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1176;
st1176:
	if ( ++p == pe )
		goto _test_eof1176;
case 1176:
#line 58720 "scanner.c"
	goto st0;
tr2065:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st679;
tr2057:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
	goto st679;
st679:
	if ( ++p == pe )
		goto _test_eof679;
case 679:
#line 58740 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2066;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2065;
	goto tr71;
st680:
	if ( ++p == pe )
		goto _test_eof680;
case 680:
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr2067;
	goto tr1899;
tr2067:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st681;
tr2071:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st681;
st681:
	if ( ++p == pe )
		goto _test_eof681;
case 681:
#line 58816 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2068;
		case 32: goto tr2068;
		case 40: goto tr2069;
		case 41: goto tr2070;
		case 1034: goto tr2072;
		case 1083: goto tr2073;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2071;
	goto tr1899;
tr2075:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st682;
tr2076:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st682;
tr2078:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st682;
tr2082:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st682;
tr2068:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st682;
tr2069:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st682;
tr2070:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st682;
tr2072:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st682;
st682:
	if ( ++p == pe )
		goto _test_eof682;
case 682:
#line 58954 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st682;
		case 32: goto st682;
		case 40: goto tr2075;
		case 41: goto tr2076;
		case 42: goto tr2077;
		case 92: goto tr2077;
		case 95: goto tr2077;
		case 1034: goto tr2078;
		case 1083: goto st684;
	}
	if ( _widec < 64 ) {
		if ( 45 <= _widec && _widec <= 57 )
			goto tr2077;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr2077;
	} else
		goto tr2077;
	goto tr71;
tr2077:
#line 288 "scanner_body.rl"
	{
		s->dname = rdata_tail;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 683;goto st271;} }
	goto st683;
st683:
	if ( ++p == pe )
		goto _test_eof683;
case 683:
#line 59001 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr2080;
		case 59: goto tr2080;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr2080;
	} else if ( (*p) >= 9 )
		goto tr2080;
	goto tr71;
tr2080:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1177;
st1177:
	if ( ++p == pe )
		goto _test_eof1177;
case 1177:
#line 59026 "scanner.c"
	goto st0;
tr2081:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st684;
tr2073:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st684;
st684:
	if ( ++p == pe )
		goto _test_eof684;
case 684:
#line 59053 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2082;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2081;
	goto tr71;
st685:
	if ( ++p == pe )
		goto _test_eof685;
case 685:
	switch( (*p) ) {
		case 32: goto tr2084;
		case 59: goto tr2084;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr2084;
	} else if ( (*p) >= 9 )
		goto tr2084;
	goto tr2083;
tr2093:
#line 242 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			s->item_length_location = rdata_tail++;
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 629 "scanner_body.rl"
	{ p--; {stack[top++] = 686;goto st280;} }
	goto st686;
tr2083:
#line 634 "scanner_body.rl"
	{
		s->long_string = true;
	}
#line 242 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			s->item_length_location = rdata_tail++;
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 629 "scanner_body.rl"
	{ p--; {stack[top++] = 686;goto st280;} }
	goto st686;
st686:
	if ( ++p == pe )
		goto _test_eof686;
case 686:
#line 59128 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr2085;
		case 32: goto tr2085;
		case 40: goto tr2086;
		case 41: goto tr2087;
		case 2058: goto tr2088;
		case 2107: goto tr2089;
		case 2314: goto tr2090;
		case 2363: goto tr2090;
		case 2570: goto tr2091;
		case 2619: goto tr2092;
	}
	goto tr2084;
tr2095:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st687;
tr2096:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st687;
tr2097:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st687;
tr2103:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st687;
tr2085:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st687;
tr2086:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st687;
tr2087:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st687;
tr2088:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st687;
st687:
	if ( ++p == pe )
		goto _test_eof687;
case 687:
#line 59274 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st687;
		case 32: goto st687;
		case 40: goto tr2095;
		case 41: goto tr2096;
		case 2058: goto tr2097;
		case 2107: goto st688;
		case 2314: goto tr2099;
		case 2363: goto tr2099;
		case 2570: goto tr2100;
		case 2619: goto tr2101;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr2093;
	} else if ( _widec > 58 ) {
		if ( 60 <= _widec )
			goto tr2093;
	} else
		goto tr2093;
	goto tr2084;
tr2102:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st688;
tr2089:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st688;
st688:
	if ( ++p == pe )
		goto _test_eof688;
case 688:
#line 59341 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2103;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2102;
	goto tr2084;
tr2090:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 637 "scanner_body.rl"
	{
		s->long_string = false;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1178;
tr2099:
#line 637 "scanner_body.rl"
	{
		s->long_string = false;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1178;
st1178:
	if ( ++p == pe )
		goto _test_eof1178;
case 1178:
#line 59403 "scanner.c"
	goto st0;
tr2091:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 637 "scanner_body.rl"
	{
		s->long_string = false;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1179;
tr2100:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 637 "scanner_body.rl"
	{
		s->long_string = false;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1179;
st1179:
	if ( ++p == pe )
		goto _test_eof1179;
case 1179:
#line 59448 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st687;
		case 32: goto st687;
		case 40: goto tr2095;
		case 41: goto tr2096;
		case 2058: goto tr2097;
		case 2107: goto st688;
		case 2314: goto tr2099;
		case 2363: goto tr2099;
		case 2570: goto tr2100;
		case 2619: goto tr2101;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr2093;
	} else if ( _widec > 58 ) {
		if ( 60 <= _widec )
			goto tr2093;
	} else
		goto tr2093;
	goto tr2084;
tr2092:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 637 "scanner_body.rl"
	{
		s->long_string = false;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1180;
tr2101:
#line 637 "scanner_body.rl"
	{
		s->long_string = false;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1180;
st1180:
	if ( ++p == pe )
		goto _test_eof1180;
case 1180:
#line 59525 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2103;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2102;
	goto tr2084;
st689:
	if ( ++p == pe )
		goto _test_eof689;
case 689:
	if ( (*p) == 46 )
		goto tr2104;
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 58 )
			goto tr2104;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr2104;
	} else
		goto tr2104;
	goto tr1876;
tr2104:
#line 835 "scanner_body.rl"
	{
		s->buffer_length = 0;
	}
#line 838 "scanner_body.rl"
	{
		if (s->buffer_length < MAX_RDATA_LENGTH) {
			s->buffer[s->buffer_length++] = (*p);
		}
		else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st690;
tr2106:
#line 838 "scanner_body.rl"
	{
		if (s->buffer_length < MAX_RDATA_LENGTH) {
			s->buffer[s->buffer_length++] = (*p);
		}
		else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st690;
st690:
	if ( ++p == pe )
		goto _test_eof690;
case 690:
#line 59599 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr2105;
		case 46: goto tr2106;
		case 59: goto tr2105;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 10 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr2105;
		} else if ( (*p) >= 9 )
			goto tr2105;
	} else if ( (*p) > 58 ) {
		if ( (*p) > 70 ) {
			if ( 97 <= (*p) && (*p) <= 102 )
				goto tr2106;
		} else if ( (*p) >= 65 )
			goto tr2106;
	} else
		goto tr2106;
	goto tr1876;
tr2105:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1181;
st1181:
	if ( ++p == pe )
		goto _test_eof1181;
case 1181:
#line 59644 "scanner.c"
	goto st0;
st691:
	if ( ++p == pe )
		goto _test_eof691;
case 691:
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr2108;
	goto tr2107;
tr2112:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st692;
tr2108:
#line 1533 "scanner_body.rl"
	{
		memset(&(s->loc), 0, sizeof(s->loc));
		// Defaults.
		s->loc.siz = 100;
		s->loc.vp  = 1000;
		s->loc.hp  = 1000000;
		s->loc.lat_sign  = 1;
		s->loc.long_sign = 1;
		s->loc.alt_sign  = 1;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st692;
st692:
	if ( ++p == pe )
		goto _test_eof692;
case 692:
#line 59706 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2109;
		case 32: goto tr2109;
		case 40: goto tr2110;
		case 41: goto tr2111;
		case 1034: goto tr2113;
		case 1083: goto tr2114;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2112;
	goto tr2107;
tr2116:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st693;
tr2117:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st693;
tr2121:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st693;
tr2364:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st693;
tr2109:
#line 1428 "scanner_body.rl"
	{
		if (s->number64 <= 90) {
			s->loc.d1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st693;
tr2110:
#line 1428 "scanner_body.rl"
	{
		if (s->number64 <= 90) {
			s->loc.d1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st693;
tr2111:
#line 1428 "scanner_body.rl"
	{
		if (s->number64 <= 90) {
			s->loc.d1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st693;
tr2113:
#line 1428 "scanner_body.rl"
	{
		if (s->number64 <= 90) {
			s->loc.d1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st693;
st693:
	if ( ++p == pe )
		goto _test_eof693;
case 693:
#line 59836 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st693;
		case 32: goto st693;
		case 40: goto tr2116;
		case 41: goto tr2117;
		case 78: goto st698;
		case 83: goto st740;
		case 1034: goto tr2121;
		case 1083: goto st745;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2118;
	goto tr2107;
tr2118:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st694;
tr2126:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st694;
st694:
	if ( ++p == pe )
		goto _test_eof694;
case 694:
#line 59906 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2123;
		case 32: goto tr2123;
		case 40: goto tr2124;
		case 41: goto tr2125;
		case 1034: goto tr2127;
		case 1083: goto tr2128;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2126;
	goto tr2107;
tr2130:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st695;
tr2131:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st695;
tr2133:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st695;
tr2362:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st695;
tr2123:
#line 1444 "scanner_body.rl"
	{
		if (s->number64 <= 59) {
			s->loc.m1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st695;
tr2124:
#line 1444 "scanner_body.rl"
	{
		if (s->number64 <= 59) {
			s->loc.m1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st695;
tr2125:
#line 1444 "scanner_body.rl"
	{
		if (s->number64 <= 59) {
			s->loc.m1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st695;
tr2127:
#line 1444 "scanner_body.rl"
	{
		if (s->number64 <= 59) {
			s->loc.m1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st695;
st695:
	if ( ++p == pe )
		goto _test_eof695;
case 695:
#line 60036 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st695;
		case 32: goto st695;
		case 40: goto tr2130;
		case 41: goto tr2131;
		case 78: goto st698;
		case 83: goto st740;
		case 1034: goto tr2133;
		case 1083: goto st744;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2132;
	goto tr2107;
tr2139:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st696;
tr2132:
#line 357 "scanner_body.rl"
	{
		s->decimals = 3;
	}
#line 327 "scanner_body.rl"
	{
		s->decimal_counter = 0;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st696;
st696:
	if ( ++p == pe )
		goto _test_eof696;
case 696:
#line 60114 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2135;
		case 32: goto tr2135;
		case 40: goto tr2136;
		case 41: goto tr2137;
		case 46: goto st742;
		case 1034: goto tr2140;
		case 1083: goto tr2141;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2139;
	goto tr2107;
tr2143:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st697;
tr2144:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st697;
tr2145:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st697;
tr2353:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st697;
tr2135:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1460 "scanner_body.rl"
	{
		if (s->number64 <= 59999) {
			s->loc.s1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st697;
tr2136:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1460 "scanner_body.rl"
	{
		if (s->number64 <= 59999) {
			s->loc.s1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st697;
tr2137:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1460 "scanner_body.rl"
	{
		if (s->number64 <= 59999) {
			s->loc.s1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st697;
tr2140:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1460 "scanner_body.rl"
	{
		if (s->number64 <= 59999) {
			s->loc.s1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st697;
tr2354:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1460 "scanner_body.rl"
	{
		if (s->number64 <= 59999) {
			s->loc.s1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st697;
tr2355:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1460 "scanner_body.rl"
	{
		if (s->number64 <= 59999) {
			s->loc.s1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st697;
tr2356:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1460 "scanner_body.rl"
	{
		if (s->number64 <= 59999) {
			s->loc.s1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st697;
tr2358:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1460 "scanner_body.rl"
	{
		if (s->number64 <= 59999) {
			s->loc.s1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st697;
st697:
	if ( ++p == pe )
		goto _test_eof697;
case 697:
#line 60429 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st697;
		case 32: goto st697;
		case 40: goto tr2143;
		case 41: goto tr2144;
		case 78: goto st698;
		case 83: goto st740;
		case 1034: goto tr2145;
		case 1083: goto st741;
	}
	goto tr2107;
st698:
	if ( ++p == pe )
		goto _test_eof698;
case 698:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st699;
		case 32: goto st699;
		case 40: goto tr2148;
		case 41: goto tr2149;
		case 1034: goto tr2150;
		case 1083: goto st739;
	}
	goto tr2107;
tr2148:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st699;
tr2149:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st699;
tr2150:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st699;
tr2346:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st699;
tr2347:
#line 1510 "scanner_body.rl"
	{
		s->loc.lat_sign = -1;
	}
	goto st699;
tr2348:
#line 1510 "scanner_body.rl"
	{
		s->loc.lat_sign = -1;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st699;
tr2349:
#line 1510 "scanner_body.rl"
	{
		s->loc.lat_sign = -1;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st699;
tr2350:
#line 1510 "scanner_body.rl"
	{
		s->loc.lat_sign = -1;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st699;
st699:
	if ( ++p == pe )
		goto _test_eof699;
case 699:
#line 60566 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st699;
		case 32: goto st699;
		case 40: goto tr2148;
		case 41: goto tr2149;
		case 1034: goto tr2150;
		case 1083: goto st739;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2152;
	goto tr2107;
tr2152:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st700;
tr2156:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st700;
st700:
	if ( ++p == pe )
		goto _test_eof700;
case 700:
#line 60634 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2153;
		case 32: goto tr2153;
		case 40: goto tr2154;
		case 41: goto tr2155;
		case 1034: goto tr2157;
		case 1083: goto tr2158;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2156;
	goto tr2107;
tr2160:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st701;
tr2161:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st701;
tr2165:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st701;
tr2344:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st701;
tr2153:
#line 1436 "scanner_body.rl"
	{
		if (s->number64 <= 180) {
			s->loc.d2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st701;
tr2154:
#line 1436 "scanner_body.rl"
	{
		if (s->number64 <= 180) {
			s->loc.d2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st701;
tr2155:
#line 1436 "scanner_body.rl"
	{
		if (s->number64 <= 180) {
			s->loc.d2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st701;
tr2157:
#line 1436 "scanner_body.rl"
	{
		if (s->number64 <= 180) {
			s->loc.d2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st701;
st701:
	if ( ++p == pe )
		goto _test_eof701;
case 701:
#line 60764 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st701;
		case 32: goto st701;
		case 40: goto tr2160;
		case 41: goto tr2161;
		case 69: goto st706;
		case 87: goto st733;
		case 1034: goto tr2165;
		case 1083: goto st738;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2162;
	goto tr2107;
tr2162:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st702;
tr2170:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st702;
st702:
	if ( ++p == pe )
		goto _test_eof702;
case 702:
#line 60834 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2167;
		case 32: goto tr2167;
		case 40: goto tr2168;
		case 41: goto tr2169;
		case 1034: goto tr2171;
		case 1083: goto tr2172;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2170;
	goto tr2107;
tr2174:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st703;
tr2175:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st703;
tr2177:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st703;
tr2342:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st703;
tr2167:
#line 1452 "scanner_body.rl"
	{
		if (s->number64 <= 59) {
			s->loc.m2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st703;
tr2168:
#line 1452 "scanner_body.rl"
	{
		if (s->number64 <= 59) {
			s->loc.m2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st703;
tr2169:
#line 1452 "scanner_body.rl"
	{
		if (s->number64 <= 59) {
			s->loc.m2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st703;
tr2171:
#line 1452 "scanner_body.rl"
	{
		if (s->number64 <= 59) {
			s->loc.m2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st703;
st703:
	if ( ++p == pe )
		goto _test_eof703;
case 703:
#line 60964 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st703;
		case 32: goto st703;
		case 40: goto tr2174;
		case 41: goto tr2175;
		case 69: goto st706;
		case 87: goto st733;
		case 1034: goto tr2177;
		case 1083: goto st737;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2176;
	goto tr2107;
tr2183:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st704;
tr2176:
#line 357 "scanner_body.rl"
	{
		s->decimals = 3;
	}
#line 327 "scanner_body.rl"
	{
		s->decimal_counter = 0;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st704;
st704:
	if ( ++p == pe )
		goto _test_eof704;
case 704:
#line 61042 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2179;
		case 32: goto tr2179;
		case 40: goto tr2180;
		case 41: goto tr2181;
		case 46: goto st735;
		case 1034: goto tr2184;
		case 1083: goto tr2185;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2183;
	goto tr2107;
tr2187:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st705;
tr2188:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st705;
tr2189:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st705;
tr2333:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st705;
tr2179:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1468 "scanner_body.rl"
	{
		if (s->number64 <= 59999) {
			s->loc.s2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st705;
tr2180:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1468 "scanner_body.rl"
	{
		if (s->number64 <= 59999) {
			s->loc.s2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st705;
tr2181:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1468 "scanner_body.rl"
	{
		if (s->number64 <= 59999) {
			s->loc.s2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st705;
tr2184:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1468 "scanner_body.rl"
	{
		if (s->number64 <= 59999) {
			s->loc.s2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st705;
tr2334:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1468 "scanner_body.rl"
	{
		if (s->number64 <= 59999) {
			s->loc.s2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st705;
tr2335:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1468 "scanner_body.rl"
	{
		if (s->number64 <= 59999) {
			s->loc.s2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st705;
tr2336:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1468 "scanner_body.rl"
	{
		if (s->number64 <= 59999) {
			s->loc.s2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st705;
tr2338:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1468 "scanner_body.rl"
	{
		if (s->number64 <= 59999) {
			s->loc.s2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st705;
st705:
	if ( ++p == pe )
		goto _test_eof705;
case 705:
#line 61357 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st705;
		case 32: goto st705;
		case 40: goto tr2187;
		case 41: goto tr2188;
		case 69: goto st706;
		case 87: goto st733;
		case 1034: goto tr2189;
		case 1083: goto st734;
	}
	goto tr2107;
st706:
	if ( ++p == pe )
		goto _test_eof706;
case 706:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st707;
		case 32: goto st707;
		case 40: goto tr2192;
		case 41: goto tr2193;
		case 1034: goto tr2194;
		case 1083: goto st732;
	}
	goto tr2107;
tr2192:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st707;
tr2193:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st707;
tr2194:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st707;
tr2326:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st707;
tr2327:
#line 1513 "scanner_body.rl"
	{
		s->loc.long_sign = -1;
	}
	goto st707;
tr2328:
#line 1513 "scanner_body.rl"
	{
		s->loc.long_sign = -1;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st707;
tr2329:
#line 1513 "scanner_body.rl"
	{
		s->loc.long_sign = -1;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st707;
tr2330:
#line 1513 "scanner_body.rl"
	{
		s->loc.long_sign = -1;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st707;
st707:
	if ( ++p == pe )
		goto _test_eof707;
case 707:
#line 61494 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st707;
		case 32: goto st707;
		case 40: goto tr2192;
		case 41: goto tr2193;
		case 45: goto st708;
		case 1034: goto tr2194;
		case 1083: goto st732;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2197;
	goto tr2107;
st708:
	if ( ++p == pe )
		goto _test_eof708;
case 708:
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr2198;
	goto tr2107;
tr2203:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st709;
tr2197:
#line 354 "scanner_body.rl"
	{
		s->decimals = 2;
	}
#line 327 "scanner_body.rl"
	{
		s->decimal_counter = 0;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st709;
tr2198:
#line 1516 "scanner_body.rl"
	{
		s->loc.alt_sign = -1;
	}
#line 354 "scanner_body.rl"
	{
		s->decimals = 2;
	}
#line 327 "scanner_body.rl"
	{
		s->decimal_counter = 0;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st709;
st709:
	if ( ++p == pe )
		goto _test_eof709;
case 709:
#line 61611 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr2199;
		case 32: goto tr2199;
		case 40: goto tr2200;
		case 41: goto tr2201;
		case 46: goto st729;
		case 109: goto tr2204;
		case 2058: goto tr2205;
		case 2107: goto tr2206;
		case 2314: goto tr2207;
		case 2363: goto tr2207;
		case 2570: goto tr2208;
		case 2619: goto tr2209;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2203;
	goto tr2107;
tr2211:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st710;
tr2212:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st710;
tr2214:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st710;
tr2313:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st710;
tr2199:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1476 "scanner_body.rl"
	{
		if ((s->loc.alt_sign ==  1 && s->number64 <= 4284967295) ||
		    (s->loc.alt_sign == -1 && s->number64 <=   10000000))
		{
			s->loc.alt = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st710;
tr2200:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1476 "scanner_body.rl"
	{
		if ((s->loc.alt_sign ==  1 && s->number64 <= 4284967295) ||
		    (s->loc.alt_sign == -1 && s->number64 <=   10000000))
		{
			s->loc.alt = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st710;
tr2201:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1476 "scanner_body.rl"
	{
		if ((s->loc.alt_sign ==  1 && s->number64 <= 4284967295) ||
		    (s->loc.alt_sign == -1 && s->number64 <=   10000000))
		{
			s->loc.alt = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st710;
tr2205:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1476 "scanner_body.rl"
	{
		if ((s->loc.alt_sign ==  1 && s->number64 <= 4284967295) ||
		    (s->loc.alt_sign == -1 && s->number64 <=   10000000))
		{
			s->loc.alt = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st710;
tr2314:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1476 "scanner_body.rl"
	{
		if ((s->loc.alt_sign ==  1 && s->number64 <= 4284967295) ||
		    (s->loc.alt_sign == -1 && s->number64 <=   10000000))
		{
			s->loc.alt = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st710;
tr2315:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1476 "scanner_body.rl"
	{
		if ((s->loc.alt_sign ==  1 && s->number64 <= 4284967295) ||
		    (s->loc.alt_sign == -1 && s->number64 <=   10000000))
		{
			s->loc.alt = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st710;
tr2316:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1476 "scanner_body.rl"
	{
		if ((s->loc.alt_sign ==  1 && s->number64 <= 4284967295) ||
		    (s->loc.alt_sign == -1 && s->number64 <=   10000000))
		{
			s->loc.alt = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st710;
tr2319:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1476 "scanner_body.rl"
	{
		if ((s->loc.alt_sign ==  1 && s->number64 <= 4284967295) ||
		    (s->loc.alt_sign == -1 && s->number64 <=   10000000))
		{
			s->loc.alt = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st710;
st710:
	if ( ++p == pe )
		goto _test_eof710;
case 710:
#line 61953 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st710;
		case 32: goto st710;
		case 40: goto tr2211;
		case 41: goto tr2212;
		case 2058: goto tr2214;
		case 2107: goto st728;
		case 2314: goto tr2216;
		case 2363: goto tr2216;
		case 2570: goto tr2217;
		case 2619: goto tr2218;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2213;
	goto tr2107;
tr2223:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st711;
tr2213:
#line 354 "scanner_body.rl"
	{
		s->decimals = 2;
	}
#line 327 "scanner_body.rl"
	{
		s->decimal_counter = 0;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st711;
st711:
	if ( ++p == pe )
		goto _test_eof711;
case 711:
#line 62039 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr2219;
		case 32: goto tr2219;
		case 40: goto tr2220;
		case 41: goto tr2221;
		case 46: goto st725;
		case 109: goto tr2224;
		case 2058: goto tr2225;
		case 2107: goto tr2226;
		case 2314: goto tr2227;
		case 2363: goto tr2227;
		case 2570: goto tr2228;
		case 2619: goto tr2229;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2223;
	goto tr2107;
tr2231:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st712;
tr2232:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st712;
tr2234:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st712;
tr2300:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st712;
tr2219:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1486 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.siz = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st712;
tr2220:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1486 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.siz = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st712;
tr2221:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1486 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.siz = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st712;
tr2225:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1486 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.siz = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st712;
tr2301:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1486 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.siz = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st712;
tr2302:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1486 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.siz = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st712;
tr2303:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1486 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.siz = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st712;
tr2306:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1486 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.siz = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st712;
st712:
	if ( ++p == pe )
		goto _test_eof712;
case 712:
#line 62365 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st712;
		case 32: goto st712;
		case 40: goto tr2231;
		case 41: goto tr2232;
		case 2058: goto tr2234;
		case 2107: goto st724;
		case 2314: goto tr2216;
		case 2363: goto tr2216;
		case 2570: goto tr2236;
		case 2619: goto tr2237;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2233;
	goto tr2107;
tr2242:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st713;
tr2233:
#line 354 "scanner_body.rl"
	{
		s->decimals = 2;
	}
#line 327 "scanner_body.rl"
	{
		s->decimal_counter = 0;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st713;
st713:
	if ( ++p == pe )
		goto _test_eof713;
case 713:
#line 62451 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr2238;
		case 32: goto tr2238;
		case 40: goto tr2239;
		case 41: goto tr2240;
		case 46: goto st721;
		case 109: goto tr2243;
		case 2058: goto tr2244;
		case 2107: goto tr2245;
		case 2314: goto tr2246;
		case 2363: goto tr2246;
		case 2570: goto tr2247;
		case 2619: goto tr2248;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2242;
	goto tr2107;
tr2250:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st714;
tr2251:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st714;
tr2253:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st714;
tr2287:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st714;
tr2238:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1494 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.hp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st714;
tr2239:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1494 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.hp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st714;
tr2240:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1494 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.hp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st714;
tr2244:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1494 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.hp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st714;
tr2288:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1494 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.hp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st714;
tr2289:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1494 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.hp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st714;
tr2290:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1494 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.hp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st714;
tr2293:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1494 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.hp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st714;
st714:
	if ( ++p == pe )
		goto _test_eof714;
case 714:
#line 62777 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st714;
		case 32: goto st714;
		case 40: goto tr2250;
		case 41: goto tr2251;
		case 2058: goto tr2253;
		case 2107: goto st720;
		case 2314: goto tr2216;
		case 2363: goto tr2216;
		case 2570: goto tr2255;
		case 2619: goto tr2256;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2252;
	goto tr2107;
tr2261:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st715;
tr2252:
#line 354 "scanner_body.rl"
	{
		s->decimals = 2;
	}
#line 327 "scanner_body.rl"
	{
		s->decimal_counter = 0;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st715;
st715:
	if ( ++p == pe )
		goto _test_eof715;
case 715:
#line 62863 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr2257;
		case 32: goto tr2257;
		case 40: goto tr2258;
		case 41: goto tr2259;
		case 46: goto st718;
		case 109: goto tr2257;
		case 2058: goto tr2262;
		case 2107: goto tr2263;
		case 2314: goto tr2264;
		case 2363: goto tr2264;
		case 2570: goto tr2265;
		case 2619: goto tr2266;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2261;
	goto tr2107;
tr2268:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st716;
tr2269:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st716;
tr2270:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st716;
tr2275:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st716;
tr2257:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1502 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.vp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st716;
tr2258:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1502 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.vp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st716;
tr2259:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1502 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.vp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st716;
tr2262:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1502 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.vp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st716;
tr2276:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1502 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.vp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st716;
tr2277:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1502 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.vp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st716;
tr2278:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1502 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.vp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st716;
tr2280:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1502 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.vp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st716;
st716:
	if ( ++p == pe )
		goto _test_eof716;
case 716:
#line 63189 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st716;
		case 32: goto st716;
		case 40: goto tr2268;
		case 41: goto tr2269;
		case 2058: goto tr2270;
		case 2107: goto st717;
		case 2314: goto tr2216;
		case 2363: goto tr2216;
		case 2570: goto tr2272;
		case 2619: goto tr2273;
	}
	goto tr2107;
tr2274:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st717;
tr2263:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1502 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.vp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st717;
tr2281:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1502 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.vp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st717;
st717:
	if ( ++p == pe )
		goto _test_eof717;
case 717:
#line 63287 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2275;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2274;
	goto tr2107;
tr2207:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1476 "scanner_body.rl"
	{
		if ((s->loc.alt_sign ==  1 && s->number64 <= 4284967295) ||
		    (s->loc.alt_sign == -1 && s->number64 <=   10000000))
		{
			s->loc.alt = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1182;
tr2216:
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1182;
tr2227:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1486 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.siz = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1182;
tr2246:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1494 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.hp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1182;
tr2264:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1502 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.vp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1182;
tr2282:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1502 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.vp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1182;
tr2295:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1494 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.hp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1182;
tr2308:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1486 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.siz = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1182;
tr2321:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1476 "scanner_body.rl"
	{
		if ((s->loc.alt_sign ==  1 && s->number64 <= 4284967295) ||
		    (s->loc.alt_sign == -1 && s->number64 <=   10000000))
		{
			s->loc.alt = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1182;
st1182:
	if ( ++p == pe )
		goto _test_eof1182;
case 1182:
#line 63811 "scanner.c"
	goto st0;
tr2272:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1183;
tr2265:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1502 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.vp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1183;
tr2283:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1502 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.vp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1183;
st1183:
	if ( ++p == pe )
		goto _test_eof1183;
case 1183:
#line 63976 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st716;
		case 32: goto st716;
		case 40: goto tr2268;
		case 41: goto tr2269;
		case 2058: goto tr2270;
		case 2107: goto st717;
		case 2314: goto tr2216;
		case 2363: goto tr2216;
		case 2570: goto tr2272;
		case 2619: goto tr2273;
	}
	goto tr2107;
tr2273:
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1184;
tr2266:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1502 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.vp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1184;
tr2284:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1502 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.vp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1184;
st1184:
	if ( ++p == pe )
		goto _test_eof1184;
case 1184:
#line 64161 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2275;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2274;
	goto tr2107;
st718:
	if ( ++p == pe )
		goto _test_eof718;
case 718:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr2276;
		case 32: goto tr2276;
		case 40: goto tr2277;
		case 41: goto tr2278;
		case 109: goto tr2276;
		case 2058: goto tr2280;
		case 2107: goto tr2281;
		case 2314: goto tr2282;
		case 2363: goto tr2282;
		case 2570: goto tr2283;
		case 2619: goto tr2284;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2279;
	goto tr2107;
tr2279:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 333 "scanner_body.rl"
	{
		s->decimal_counter++;
	}
	goto st719;
tr2285:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 333 "scanner_body.rl"
	{
		s->decimal_counter++;
	}
	goto st719;
st719:
	if ( ++p == pe )
		goto _test_eof719;
case 719:
#line 64282 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr2257;
		case 32: goto tr2257;
		case 40: goto tr2258;
		case 41: goto tr2259;
		case 109: goto tr2257;
		case 2058: goto tr2262;
		case 2107: goto tr2263;
		case 2314: goto tr2264;
		case 2363: goto tr2264;
		case 2570: goto tr2265;
		case 2619: goto tr2266;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2285;
	goto tr2107;
tr2286:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st720;
tr2245:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1494 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.hp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st720;
tr2294:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1494 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.hp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st720;
st720:
	if ( ++p == pe )
		goto _test_eof720;
case 720:
#line 64383 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2287;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2286;
	goto tr2107;
tr2255:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1185;
tr2247:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1494 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.hp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1185;
tr2296:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1494 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.hp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1185;
st1185:
	if ( ++p == pe )
		goto _test_eof1185;
case 1185:
#line 64573 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st714;
		case 32: goto st714;
		case 40: goto tr2250;
		case 41: goto tr2251;
		case 2058: goto tr2253;
		case 2107: goto st720;
		case 2314: goto tr2216;
		case 2363: goto tr2216;
		case 2570: goto tr2255;
		case 2619: goto tr2256;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2252;
	goto tr2107;
tr2256:
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1186;
tr2248:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1494 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.hp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1186;
tr2297:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1494 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.hp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1186;
st1186:
	if ( ++p == pe )
		goto _test_eof1186;
case 1186:
#line 64760 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2287;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2286;
	goto tr2107;
st721:
	if ( ++p == pe )
		goto _test_eof721;
case 721:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr2288;
		case 32: goto tr2288;
		case 40: goto tr2289;
		case 41: goto tr2290;
		case 109: goto tr2292;
		case 2058: goto tr2293;
		case 2107: goto tr2294;
		case 2314: goto tr2295;
		case 2363: goto tr2295;
		case 2570: goto tr2296;
		case 2619: goto tr2297;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2291;
	goto tr2107;
tr2291:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 333 "scanner_body.rl"
	{
		s->decimal_counter++;
	}
	goto st722;
tr2298:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 333 "scanner_body.rl"
	{
		s->decimal_counter++;
	}
	goto st722;
st722:
	if ( ++p == pe )
		goto _test_eof722;
case 722:
#line 64881 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr2238;
		case 32: goto tr2238;
		case 40: goto tr2239;
		case 41: goto tr2240;
		case 109: goto tr2243;
		case 2058: goto tr2244;
		case 2107: goto tr2245;
		case 2314: goto tr2246;
		case 2363: goto tr2246;
		case 2570: goto tr2247;
		case 2619: goto tr2248;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2298;
	goto tr2107;
tr2243:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1494 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.hp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st723;
tr2292:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1494 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.hp = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st723;
st723:
	if ( ++p == pe )
		goto _test_eof723;
case 723:
#line 64974 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st714;
		case 32: goto st714;
		case 40: goto tr2250;
		case 41: goto tr2251;
		case 2058: goto tr2253;
		case 2107: goto st720;
		case 2314: goto tr2216;
		case 2363: goto tr2216;
		case 2570: goto tr2255;
		case 2619: goto tr2256;
	}
	goto tr2107;
tr2299:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st724;
tr2226:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1486 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.siz = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st724;
tr2307:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1486 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.siz = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st724;
st724:
	if ( ++p == pe )
		goto _test_eof724;
case 724:
#line 65072 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2300;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2299;
	goto tr2107;
tr2236:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1187;
tr2228:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1486 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.siz = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1187;
tr2309:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1486 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.siz = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1187;
st1187:
	if ( ++p == pe )
		goto _test_eof1187;
case 1187:
#line 65262 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st712;
		case 32: goto st712;
		case 40: goto tr2231;
		case 41: goto tr2232;
		case 2058: goto tr2234;
		case 2107: goto st724;
		case 2314: goto tr2216;
		case 2363: goto tr2216;
		case 2570: goto tr2236;
		case 2619: goto tr2237;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2233;
	goto tr2107;
tr2237:
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1188;
tr2229:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1486 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.siz = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1188;
tr2310:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1486 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.siz = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1188;
st1188:
	if ( ++p == pe )
		goto _test_eof1188;
case 1188:
#line 65449 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2300;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2299;
	goto tr2107;
st725:
	if ( ++p == pe )
		goto _test_eof725;
case 725:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr2301;
		case 32: goto tr2301;
		case 40: goto tr2302;
		case 41: goto tr2303;
		case 109: goto tr2305;
		case 2058: goto tr2306;
		case 2107: goto tr2307;
		case 2314: goto tr2308;
		case 2363: goto tr2308;
		case 2570: goto tr2309;
		case 2619: goto tr2310;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2304;
	goto tr2107;
tr2304:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 333 "scanner_body.rl"
	{
		s->decimal_counter++;
	}
	goto st726;
tr2311:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 333 "scanner_body.rl"
	{
		s->decimal_counter++;
	}
	goto st726;
st726:
	if ( ++p == pe )
		goto _test_eof726;
case 726:
#line 65570 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr2219;
		case 32: goto tr2219;
		case 40: goto tr2220;
		case 41: goto tr2221;
		case 109: goto tr2224;
		case 2058: goto tr2225;
		case 2107: goto tr2226;
		case 2314: goto tr2227;
		case 2363: goto tr2227;
		case 2570: goto tr2228;
		case 2619: goto tr2229;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2311;
	goto tr2107;
tr2224:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1486 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.siz = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st727;
tr2305:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1486 "scanner_body.rl"
	{
		if (s->number64 <= 9000000000ULL) {
			s->loc.siz = s->number64;
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st727;
st727:
	if ( ++p == pe )
		goto _test_eof727;
case 727:
#line 65663 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st712;
		case 32: goto st712;
		case 40: goto tr2231;
		case 41: goto tr2232;
		case 2058: goto tr2234;
		case 2107: goto st724;
		case 2314: goto tr2216;
		case 2363: goto tr2216;
		case 2570: goto tr2236;
		case 2619: goto tr2237;
	}
	goto tr2107;
tr2312:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st728;
tr2206:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1476 "scanner_body.rl"
	{
		if ((s->loc.alt_sign ==  1 && s->number64 <= 4284967295) ||
		    (s->loc.alt_sign == -1 && s->number64 <=   10000000))
		{
			s->loc.alt = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st728;
tr2320:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1476 "scanner_body.rl"
	{
		if ((s->loc.alt_sign ==  1 && s->number64 <= 4284967295) ||
		    (s->loc.alt_sign == -1 && s->number64 <=   10000000))
		{
			s->loc.alt = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st728;
st728:
	if ( ++p == pe )
		goto _test_eof728;
case 728:
#line 65765 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2313;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2312;
	goto tr2107;
tr2208:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1476 "scanner_body.rl"
	{
		if ((s->loc.alt_sign ==  1 && s->number64 <= 4284967295) ||
		    (s->loc.alt_sign == -1 && s->number64 <=   10000000))
		{
			s->loc.alt = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1189;
tr2217:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1189;
tr2322:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1476 "scanner_body.rl"
	{
		if ((s->loc.alt_sign ==  1 && s->number64 <= 4284967295) ||
		    (s->loc.alt_sign == -1 && s->number64 <=   10000000))
		{
			s->loc.alt = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1189;
st1189:
	if ( ++p == pe )
		goto _test_eof1189;
case 1189:
#line 65959 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st710;
		case 32: goto st710;
		case 40: goto tr2211;
		case 41: goto tr2212;
		case 2058: goto tr2214;
		case 2107: goto st728;
		case 2314: goto tr2216;
		case 2363: goto tr2216;
		case 2570: goto tr2217;
		case 2619: goto tr2218;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2213;
	goto tr2107;
tr2209:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1476 "scanner_body.rl"
	{
		if ((s->loc.alt_sign ==  1 && s->number64 <= 4284967295) ||
		    (s->loc.alt_sign == -1 && s->number64 <=   10000000))
		{
			s->loc.alt = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1190;
tr2218:
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1190;
tr2323:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1476 "scanner_body.rl"
	{
		if ((s->loc.alt_sign ==  1 && s->number64 <= 4284967295) ||
		    (s->loc.alt_sign == -1 && s->number64 <=   10000000))
		{
			s->loc.alt = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
#line 1543 "scanner_body.rl"
	{
		// Write version.
		*(rdata_tail) = 0;
		rdata_tail += 1;
		// Write size.
		*(rdata_tail) = loc64to8(s->loc.siz);
		rdata_tail += 1;
		// Write horizontal precision.
		*(rdata_tail) = loc64to8(s->loc.hp);
		rdata_tail += 1;
		// Write vertical precision.
		*(rdata_tail) = loc64to8(s->loc.vp);
		rdata_tail += 1;
		// Write latitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LAT_ZERO + s->loc.lat_sign *
			(3600000 * s->loc.d1 + 60000 * s->loc.m1 + s->loc.s1));
		rdata_tail += 4;
		// Write longitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_LONG_ZERO + s->loc.long_sign *
			(3600000 * s->loc.d2 + 60000 * s->loc.m2 + s->loc.s2));
		rdata_tail += 4;
		// Write altitude.
		*((uint32_t *)rdata_tail) = htonl(LOC_ALT_ZERO + s->loc.alt_sign *
			(s->loc.alt));
		rdata_tail += 4;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1190;
st1190:
	if ( ++p == pe )
		goto _test_eof1190;
case 1190:
#line 66150 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2313;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2312;
	goto tr2107;
st729:
	if ( ++p == pe )
		goto _test_eof729;
case 729:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr2314;
		case 32: goto tr2314;
		case 40: goto tr2315;
		case 41: goto tr2316;
		case 109: goto tr2318;
		case 2058: goto tr2319;
		case 2107: goto tr2320;
		case 2314: goto tr2321;
		case 2363: goto tr2321;
		case 2570: goto tr2322;
		case 2619: goto tr2323;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2317;
	goto tr2107;
tr2317:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 333 "scanner_body.rl"
	{
		s->decimal_counter++;
	}
	goto st730;
tr2324:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 333 "scanner_body.rl"
	{
		s->decimal_counter++;
	}
	goto st730;
st730:
	if ( ++p == pe )
		goto _test_eof730;
case 730:
#line 66271 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr2199;
		case 32: goto tr2199;
		case 40: goto tr2200;
		case 41: goto tr2201;
		case 109: goto tr2204;
		case 2058: goto tr2205;
		case 2107: goto tr2206;
		case 2314: goto tr2207;
		case 2363: goto tr2207;
		case 2570: goto tr2208;
		case 2619: goto tr2209;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2324;
	goto tr2107;
tr2204:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1476 "scanner_body.rl"
	{
		if ((s->loc.alt_sign ==  1 && s->number64 <= 4284967295) ||
		    (s->loc.alt_sign == -1 && s->number64 <=   10000000))
		{
			s->loc.alt = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st731;
tr2318:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1476 "scanner_body.rl"
	{
		if ((s->loc.alt_sign ==  1 && s->number64 <= 4284967295) ||
		    (s->loc.alt_sign == -1 && s->number64 <=   10000000))
		{
			s->loc.alt = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st731;
st731:
	if ( ++p == pe )
		goto _test_eof731;
case 731:
#line 66368 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st710;
		case 32: goto st710;
		case 40: goto tr2211;
		case 41: goto tr2212;
		case 2058: goto tr2214;
		case 2107: goto st728;
		case 2314: goto tr2216;
		case 2363: goto tr2216;
		case 2570: goto tr2217;
		case 2619: goto tr2218;
	}
	goto tr2107;
tr2325:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st732;
tr2331:
#line 1513 "scanner_body.rl"
	{
		s->loc.long_sign = -1;
	}
	goto st732;
st732:
	if ( ++p == pe )
		goto _test_eof732;
case 732:
#line 66420 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2326;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2325;
	goto tr2107;
st733:
	if ( ++p == pe )
		goto _test_eof733;
case 733:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2327;
		case 32: goto tr2327;
		case 40: goto tr2328;
		case 41: goto tr2329;
		case 1034: goto tr2330;
		case 1083: goto tr2331;
	}
	goto tr2107;
tr2332:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st734;
tr2185:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1468 "scanner_body.rl"
	{
		if (s->number64 <= 59999) {
			s->loc.s2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st734;
tr2339:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1468 "scanner_body.rl"
	{
		if (s->number64 <= 59999) {
			s->loc.s2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st734;
st734:
	if ( ++p == pe )
		goto _test_eof734;
case 734:
#line 66538 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2333;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2332;
	goto tr2107;
st735:
	if ( ++p == pe )
		goto _test_eof735;
case 735:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2334;
		case 32: goto tr2334;
		case 40: goto tr2335;
		case 41: goto tr2336;
		case 1034: goto tr2338;
		case 1083: goto tr2339;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2337;
	goto tr2107;
tr2337:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 333 "scanner_body.rl"
	{
		s->decimal_counter++;
	}
	goto st736;
tr2340:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 333 "scanner_body.rl"
	{
		s->decimal_counter++;
	}
	goto st736;
st736:
	if ( ++p == pe )
		goto _test_eof736;
case 736:
#line 66648 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2179;
		case 32: goto tr2179;
		case 40: goto tr2180;
		case 41: goto tr2181;
		case 1034: goto tr2184;
		case 1083: goto tr2185;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2340;
	goto tr2107;
tr2341:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st737;
tr2172:
#line 1452 "scanner_body.rl"
	{
		if (s->number64 <= 59) {
			s->loc.m2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st737;
st737:
	if ( ++p == pe )
		goto _test_eof737;
case 737:
#line 66697 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2342;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2341;
	goto tr2107;
tr2343:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st738;
tr2158:
#line 1436 "scanner_body.rl"
	{
		if (s->number64 <= 180) {
			s->loc.d2 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st738;
st738:
	if ( ++p == pe )
		goto _test_eof738;
case 738:
#line 66747 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2344;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2343;
	goto tr2107;
tr2345:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st739;
tr2351:
#line 1510 "scanner_body.rl"
	{
		s->loc.lat_sign = -1;
	}
	goto st739;
st739:
	if ( ++p == pe )
		goto _test_eof739;
case 739:
#line 66792 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2346;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2345;
	goto tr2107;
st740:
	if ( ++p == pe )
		goto _test_eof740;
case 740:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2347;
		case 32: goto tr2347;
		case 40: goto tr2348;
		case 41: goto tr2349;
		case 1034: goto tr2350;
		case 1083: goto tr2351;
	}
	goto tr2107;
tr2352:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st741;
tr2141:
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1460 "scanner_body.rl"
	{
		if (s->number64 <= 59999) {
			s->loc.s1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st741;
tr2359:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 337 "scanner_body.rl"
	{
		if (s->decimal_counter == 0 && s->number64 < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals);
		} else if (s->decimal_counter <= s->decimals &&
				 s->number64_tmp < UINT32_MAX) {
			s->number64 *= pow(10, s->decimals - s->decimal_counter);
			s->number64 += s->number64_tmp * pow(10, s->decimals);
		} else {
			WARN(ZS_FLOAT_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1460 "scanner_body.rl"
	{
		if (s->number64 <= 59999) {
			s->loc.s1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st741;
st741:
	if ( ++p == pe )
		goto _test_eof741;
case 741:
#line 66910 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2353;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2352;
	goto tr2107;
st742:
	if ( ++p == pe )
		goto _test_eof742;
case 742:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2354;
		case 32: goto tr2354;
		case 40: goto tr2355;
		case 41: goto tr2356;
		case 1034: goto tr2358;
		case 1083: goto tr2359;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2357;
	goto tr2107;
tr2357:
#line 330 "scanner_body.rl"
	{
		s->number64_tmp = s->number64;
	}
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 333 "scanner_body.rl"
	{
		s->decimal_counter++;
	}
	goto st743;
tr2360:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 333 "scanner_body.rl"
	{
		s->decimal_counter++;
	}
	goto st743;
st743:
	if ( ++p == pe )
		goto _test_eof743;
case 743:
#line 67020 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2135;
		case 32: goto tr2135;
		case 40: goto tr2136;
		case 41: goto tr2137;
		case 1034: goto tr2140;
		case 1083: goto tr2141;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2360;
	goto tr2107;
tr2361:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st744;
tr2128:
#line 1444 "scanner_body.rl"
	{
		if (s->number64 <= 59) {
			s->loc.m1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st744;
st744:
	if ( ++p == pe )
		goto _test_eof744;
case 744:
#line 67069 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2362;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2361;
	goto tr2107;
tr2363:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st745;
tr2114:
#line 1428 "scanner_body.rl"
	{
		if (s->number64 <= 90) {
			s->loc.d1 = (uint32_t)(s->number64);
		} else {
			WARN(ZS_BAD_NUMBER);
			p--; {goto st269;}
		}
	}
	goto st745;
st745:
	if ( ++p == pe )
		goto _test_eof745;
case 745:
#line 67119 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2364;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2363;
	goto tr2107;
st746:
	if ( ++p == pe )
		goto _test_eof746;
case 746:
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr2365;
	goto tr1899;
tr2365:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st747;
tr2369:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st747;
st747:
	if ( ++p == pe )
		goto _test_eof747;
case 747:
#line 67195 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2366;
		case 32: goto tr2366;
		case 40: goto tr2367;
		case 41: goto tr2368;
		case 1034: goto tr2370;
		case 1083: goto tr2371;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2369;
	goto tr1899;
tr2373:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st748;
tr2374:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st748;
tr2376:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st748;
tr2408:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st748;
tr2366:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st748;
tr2367:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st748;
tr2368:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st748;
tr2370:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st748;
st748:
	if ( ++p == pe )
		goto _test_eof748;
case 748:
#line 67333 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st748;
		case 32: goto st748;
		case 40: goto tr2373;
		case 41: goto tr2374;
		case 1034: goto tr2376;
		case 1083: goto st756;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2375;
	goto tr1899;
tr2375:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st749;
tr2381:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st749;
st749:
	if ( ++p == pe )
		goto _test_eof749;
case 749:
#line 67401 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2378;
		case 32: goto tr2378;
		case 40: goto tr2379;
		case 41: goto tr2380;
		case 1034: goto tr2382;
		case 1083: goto tr2383;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2381;
	goto tr1899;
tr2385:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st750;
tr2386:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st750;
tr2388:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st750;
tr2406:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st750;
tr2378:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st750;
tr2379:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st750;
tr2380:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st750;
tr2382:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st750;
st750:
	if ( ++p == pe )
		goto _test_eof750;
case 750:
#line 67539 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st750;
		case 32: goto st750;
		case 40: goto tr2385;
		case 41: goto tr2386;
		case 1034: goto tr2388;
		case 1083: goto st755;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2387;
	goto tr1899;
tr2387:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st751;
tr2393:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st751;
st751:
	if ( ++p == pe )
		goto _test_eof751;
case 751:
#line 67607 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2390;
		case 32: goto tr2390;
		case 40: goto tr2391;
		case 41: goto tr2392;
		case 1034: goto tr2394;
		case 1083: goto tr2395;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2393;
	goto tr1899;
tr2397:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st752;
tr2398:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st752;
tr2400:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st752;
tr2404:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st752;
tr2390:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st752;
tr2391:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st752;
tr2392:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st752;
tr2394:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st752;
st752:
	if ( ++p == pe )
		goto _test_eof752;
case 752:
#line 67745 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st752;
		case 32: goto st752;
		case 40: goto tr2397;
		case 41: goto tr2398;
		case 42: goto tr2399;
		case 92: goto tr2399;
		case 95: goto tr2399;
		case 1034: goto tr2400;
		case 1083: goto st754;
	}
	if ( _widec < 64 ) {
		if ( 45 <= _widec && _widec <= 57 )
			goto tr2399;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr2399;
	} else
		goto tr2399;
	goto tr71;
tr2399:
#line 288 "scanner_body.rl"
	{
		s->dname = rdata_tail;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 753;goto st271;} }
	goto st753;
st753:
	if ( ++p == pe )
		goto _test_eof753;
case 753:
#line 67792 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr2402;
		case 59: goto tr2402;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr2402;
	} else if ( (*p) >= 9 )
		goto tr2402;
	goto tr71;
tr2402:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1191;
st1191:
	if ( ++p == pe )
		goto _test_eof1191;
case 1191:
#line 67817 "scanner.c"
	goto st0;
tr2403:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st754;
tr2395:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st754;
st754:
	if ( ++p == pe )
		goto _test_eof754;
case 754:
#line 67844 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2404;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2403;
	goto tr71;
tr2405:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st755;
tr2383:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st755;
st755:
	if ( ++p == pe )
		goto _test_eof755;
case 755:
#line 67896 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2406;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2405;
	goto tr71;
tr2407:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st756;
tr2371:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st756;
st756:
	if ( ++p == pe )
		goto _test_eof756;
case 756:
#line 67948 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2408;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2407;
	goto tr71;
st757:
	if ( ++p == pe )
		goto _test_eof757;
case 757:
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr2409;
	goto tr1899;
tr2409:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st758;
tr2413:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st758;
st758:
	if ( ++p == pe )
		goto _test_eof758;
case 758:
#line 68024 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2410;
		case 32: goto tr2410;
		case 40: goto tr2411;
		case 41: goto tr2412;
		case 1034: goto tr2414;
		case 1083: goto tr2415;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2413;
	goto tr1899;
tr2417:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st759;
tr2418:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st759;
tr2420:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st759;
tr2477:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st759;
tr2410:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st759;
tr2411:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st759;
tr2412:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st759;
tr2414:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st759;
st759:
	if ( ++p == pe )
		goto _test_eof759;
case 759:
#line 68162 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st759;
		case 32: goto st759;
		case 40: goto tr2417;
		case 41: goto tr2418;
		case 1034: goto tr2420;
		case 1083: goto st773;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2419;
	goto tr1899;
tr2419:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st760;
tr2425:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st760;
st760:
	if ( ++p == pe )
		goto _test_eof760;
case 760:
#line 68230 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2422;
		case 32: goto tr2422;
		case 40: goto tr2423;
		case 41: goto tr2424;
		case 1034: goto tr2426;
		case 1083: goto tr2427;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2425;
	goto tr1899;
tr2430:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st761;
tr2431:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st761;
tr2432:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st761;
tr2475:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st761;
tr2422:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st761;
tr2423:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st761;
tr2424:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st761;
tr2426:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st761;
st761:
	if ( ++p == pe )
		goto _test_eof761;
case 761:
#line 68368 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st761;
		case 32: goto st761;
		case 40: goto tr2430;
		case 41: goto tr2431;
		case 1034: goto tr2432;
		case 1083: goto st772;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr2428;
	} else if ( _widec > 58 ) {
		if ( 60 <= _widec )
			goto tr2428;
	} else
		goto tr2428;
	goto tr71;
tr2428:
#line 242 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			s->item_length_location = rdata_tail++;
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 629 "scanner_body.rl"
	{ p--; {stack[top++] = 762;goto st280;} }
	goto st762;
st762:
	if ( ++p == pe )
		goto _test_eof762;
case 762:
#line 68417 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2434;
		case 32: goto tr2434;
		case 40: goto tr2435;
		case 41: goto tr2436;
		case 1034: goto tr2437;
		case 1083: goto tr2438;
	}
	goto tr71;
tr2441:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st763;
tr2442:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st763;
tr2443:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st763;
tr2473:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st763;
tr2434:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st763;
tr2435:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st763;
tr2436:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st763;
tr2437:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st763;
st763:
	if ( ++p == pe )
		goto _test_eof763;
case 763:
#line 68553 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st763;
		case 32: goto st763;
		case 40: goto tr2441;
		case 41: goto tr2442;
		case 1034: goto tr2443;
		case 1083: goto st771;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr2439;
	} else if ( _widec > 58 ) {
		if ( 60 <= _widec )
			goto tr2439;
	} else
		goto tr2439;
	goto tr71;
tr2439:
#line 242 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			s->item_length_location = rdata_tail++;
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 629 "scanner_body.rl"
	{ p--; {stack[top++] = 764;goto st280;} }
	goto st764;
st764:
	if ( ++p == pe )
		goto _test_eof764;
case 764:
#line 68602 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2445;
		case 32: goto tr2445;
		case 40: goto tr2446;
		case 41: goto tr2447;
		case 1034: goto tr2448;
		case 1083: goto tr2449;
	}
	goto tr71;
tr2452:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st765;
tr2453:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st765;
tr2454:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st765;
tr2471:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st765;
tr2445:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st765;
tr2446:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st765;
tr2447:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st765;
tr2448:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st765;
st765:
	if ( ++p == pe )
		goto _test_eof765;
case 765:
#line 68738 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st765;
		case 32: goto st765;
		case 40: goto tr2452;
		case 41: goto tr2453;
		case 1034: goto tr2454;
		case 1083: goto st770;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr2450;
	} else if ( _widec > 58 ) {
		if ( 60 <= _widec )
			goto tr2450;
	} else
		goto tr2450;
	goto tr71;
tr2450:
#line 242 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			s->item_length_location = rdata_tail++;
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 629 "scanner_body.rl"
	{ p--; {stack[top++] = 766;goto st280;} }
	goto st766;
st766:
	if ( ++p == pe )
		goto _test_eof766;
case 766:
#line 68787 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2456;
		case 32: goto tr2456;
		case 40: goto tr2457;
		case 41: goto tr2458;
		case 1034: goto tr2459;
		case 1083: goto tr2460;
	}
	goto tr71;
tr2462:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st767;
tr2463:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st767;
tr2465:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st767;
tr2469:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st767;
tr2456:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st767;
tr2457:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st767;
tr2458:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st767;
tr2459:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st767;
st767:
	if ( ++p == pe )
		goto _test_eof767;
case 767:
#line 68923 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st767;
		case 32: goto st767;
		case 40: goto tr2462;
		case 41: goto tr2463;
		case 42: goto tr2464;
		case 92: goto tr2464;
		case 95: goto tr2464;
		case 1034: goto tr2465;
		case 1083: goto st769;
	}
	if ( _widec < 64 ) {
		if ( 45 <= _widec && _widec <= 57 )
			goto tr2464;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr2464;
	} else
		goto tr2464;
	goto tr71;
tr2464:
#line 288 "scanner_body.rl"
	{
		s->dname = rdata_tail;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 768;goto st271;} }
	goto st768;
st768:
	if ( ++p == pe )
		goto _test_eof768;
case 768:
#line 68970 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr2467;
		case 59: goto tr2467;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr2467;
	} else if ( (*p) >= 9 )
		goto tr2467;
	goto tr71;
tr2467:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1192;
st1192:
	if ( ++p == pe )
		goto _test_eof1192;
case 1192:
#line 68995 "scanner.c"
	goto st0;
tr2468:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st769;
tr2460:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st769;
st769:
	if ( ++p == pe )
		goto _test_eof769;
case 769:
#line 69022 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2469;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2468;
	goto tr71;
tr2470:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st770;
tr2449:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st770;
st770:
	if ( ++p == pe )
		goto _test_eof770;
case 770:
#line 69074 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2471;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2470;
	goto tr71;
tr2472:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st771;
tr2438:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st771;
st771:
	if ( ++p == pe )
		goto _test_eof771;
case 771:
#line 69126 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2473;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2472;
	goto tr71;
tr2474:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st772;
tr2427:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st772;
st772:
	if ( ++p == pe )
		goto _test_eof772;
case 772:
#line 69178 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2475;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2474;
	goto tr71;
tr2476:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st773;
tr2415:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st773;
st773:
	if ( ++p == pe )
		goto _test_eof773;
case 773:
#line 69230 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2477;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2476;
	goto tr71;
st774:
	if ( ++p == pe )
		goto _test_eof774;
case 774:
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr2478;
	} else if ( (*p) > 90 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto tr2478;
	} else
		goto tr2478;
	goto tr71;
tr2478:
#line 1701 "scanner_body.rl"
	{ p--; {stack[top++] = 775;goto st593;} }
	goto st775;
st775:
	if ( ++p == pe )
		goto _test_eof775;
case 775:
#line 69278 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st776;
		case 32: goto st776;
		case 40: goto tr2480;
		case 41: goto tr2481;
		case 1034: goto tr2482;
		case 1083: goto st784;
	}
	goto tr71;
tr2480:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st776;
tr2481:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st776;
tr2482:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st776;
tr2509:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st776;
st776:
	if ( ++p == pe )
		goto _test_eof776;
case 776:
#line 69342 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st776;
		case 32: goto st776;
		case 40: goto tr2480;
		case 41: goto tr2481;
		case 1034: goto tr2482;
		case 1083: goto st784;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2484;
	goto tr1899;
tr2484:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st777;
tr2488:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st777;
st777:
	if ( ++p == pe )
		goto _test_eof777;
case 777:
#line 69410 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2485;
		case 32: goto tr2485;
		case 40: goto tr2486;
		case 41: goto tr2487;
		case 1034: goto tr2489;
		case 1083: goto tr2490;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2488;
	goto tr1899;
tr2492:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st778;
tr2493:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st778;
tr2495:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st778;
tr2507:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st778;
tr2485:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st778;
tr2486:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st778;
tr2487:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st778;
tr2489:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st778;
st778:
	if ( ++p == pe )
		goto _test_eof778;
case 778:
#line 69548 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st778;
		case 32: goto st778;
		case 40: goto tr2492;
		case 41: goto tr2493;
		case 1034: goto tr2495;
		case 1083: goto st783;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr2494;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr2494;
	} else
		goto tr2494;
	goto tr71;
tr2494:
#line 1686 "scanner_body.rl"
	{ p--; {stack[top++] = 779;goto st489;} }
	goto st779;
st779:
	if ( ++p == pe )
		goto _test_eof779;
case 779:
#line 69588 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st780;
		case 32: goto st780;
		case 40: goto tr2498;
		case 41: goto tr2499;
		case 1034: goto tr2500;
		case 1083: goto st782;
	}
	goto tr71;
tr2498:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st780;
tr2499:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st780;
tr2500:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st780;
tr2505:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st780;
st780:
	if ( ++p == pe )
		goto _test_eof780;
case 780:
#line 69652 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st780;
		case 32: goto st780;
		case 40: goto tr2498;
		case 41: goto tr2499;
		case 43: goto tr2502;
		case 1034: goto tr2500;
		case 1083: goto st782;
	}
	if ( _widec < 65 ) {
		if ( 47 <= _widec && _widec <= 57 )
			goto tr2502;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr2502;
	} else
		goto tr2502;
	goto tr71;
tr2502:
#line 1062 "scanner_body.rl"
	{ p--; {stack[top++] = 781;goto st330;} }
	goto st781;
st781:
	if ( ++p == pe )
		goto _test_eof781;
case 781:
#line 69693 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1152 + ((*p) - -128));
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1152 + ((*p) - -128));
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 1546: goto tr2503;
		case 1595: goto tr2503;
	}
	goto tr71;
tr2503:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1193;
st1193:
	if ( ++p == pe )
		goto _test_eof1193;
case 1193:
#line 69723 "scanner.c"
	goto st0;
tr2504:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st782;
st782:
	if ( ++p == pe )
		goto _test_eof782;
case 782:
#line 69737 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2505;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2504;
	goto tr71;
tr2506:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st783;
tr2490:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st783;
st783:
	if ( ++p == pe )
		goto _test_eof783;
case 783:
#line 69789 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2507;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2506;
	goto tr71;
tr2508:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st784;
st784:
	if ( ++p == pe )
		goto _test_eof784;
case 784:
#line 69828 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2509;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2508;
	goto tr71;
tr2513:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st785;
tr2514:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st785;
tr2517:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st785;
tr2540:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st785;
tr2530:
#line 902 "scanner_body.rl"
	{
		if ((s->apl.addr_family == 1 && s->number64 <= 32) ||
		    (s->apl.addr_family == 2 && s->number64 <= 128)) {
			s->apl.prefix_length = (uint8_t)(s->number64);
		} else {
			WARN(ZS_BAD_APL);
			p--; {goto st269;}
		}
	}
#line 911 "scanner_body.rl"
	{
		// Write address family.
		*((uint16_t *)rdata_tail) = htons(s->apl.addr_family);
		rdata_tail += 2;
		// Write prefix length in bites.
		*(rdata_tail) = s->apl.prefix_length;
		rdata_tail += 1;
		// Copy address to buffer.
		uint8_t len;
		switch (s->apl.addr_family) {
		case 1:
			len = INET4_ADDR_LENGTH;
			memcpy(s->buffer, &(addr4.s_addr), len);
			break;
		case 2:
			len = INET6_ADDR_LENGTH;
			memcpy(s->buffer, &(addr6.s6_addr), len);
			break;
		default:
			WARN(ZS_BAD_APL);
			p--; {goto st269;}
		}
		// Find prefix without trailing zeroes.
		while (len > 0) {
			if ((s->buffer[len - 1] & 255) != 0) {
				break;
			}
			len--;
		}
		// Write negation flag + prefix length in bytes.
		*(rdata_tail) = len + s->apl.excl_flag;
		rdata_tail += 1;
		// Write address prefix non-null data.
		memcpy(rdata_tail, s->buffer, len);
		rdata_tail += len;
	}
	goto st785;
tr2531:
#line 902 "scanner_body.rl"
	{
		if ((s->apl.addr_family == 1 && s->number64 <= 32) ||
		    (s->apl.addr_family == 2 && s->number64 <= 128)) {
			s->apl.prefix_length = (uint8_t)(s->number64);
		} else {
			WARN(ZS_BAD_APL);
			p--; {goto st269;}
		}
	}
#line 911 "scanner_body.rl"
	{
		// Write address family.
		*((uint16_t *)rdata_tail) = htons(s->apl.addr_family);
		rdata_tail += 2;
		// Write prefix length in bites.
		*(rdata_tail) = s->apl.prefix_length;
		rdata_tail += 1;
		// Copy address to buffer.
		uint8_t len;
		switch (s->apl.addr_family) {
		case 1:
			len = INET4_ADDR_LENGTH;
			memcpy(s->buffer, &(addr4.s_addr), len);
			break;
		case 2:
			len = INET6_ADDR_LENGTH;
			memcpy(s->buffer, &(addr6.s6_addr), len);
			break;
		default:
			WARN(ZS_BAD_APL);
			p--; {goto st269;}
		}
		// Find prefix without trailing zeroes.
		while (len > 0) {
			if ((s->buffer[len - 1] & 255) != 0) {
				break;
			}
			len--;
		}
		// Write negation flag + prefix length in bytes.
		*(rdata_tail) = len + s->apl.excl_flag;
		rdata_tail += 1;
		// Write address prefix non-null data.
		memcpy(rdata_tail, s->buffer, len);
		rdata_tail += len;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st785;
tr2532:
#line 902 "scanner_body.rl"
	{
		if ((s->apl.addr_family == 1 && s->number64 <= 32) ||
		    (s->apl.addr_family == 2 && s->number64 <= 128)) {
			s->apl.prefix_length = (uint8_t)(s->number64);
		} else {
			WARN(ZS_BAD_APL);
			p--; {goto st269;}
		}
	}
#line 911 "scanner_body.rl"
	{
		// Write address family.
		*((uint16_t *)rdata_tail) = htons(s->apl.addr_family);
		rdata_tail += 2;
		// Write prefix length in bites.
		*(rdata_tail) = s->apl.prefix_length;
		rdata_tail += 1;
		// Copy address to buffer.
		uint8_t len;
		switch (s->apl.addr_family) {
		case 1:
			len = INET4_ADDR_LENGTH;
			memcpy(s->buffer, &(addr4.s_addr), len);
			break;
		case 2:
			len = INET6_ADDR_LENGTH;
			memcpy(s->buffer, &(addr6.s6_addr), len);
			break;
		default:
			WARN(ZS_BAD_APL);
			p--; {goto st269;}
		}
		// Find prefix without trailing zeroes.
		while (len > 0) {
			if ((s->buffer[len - 1] & 255) != 0) {
				break;
			}
			len--;
		}
		// Write negation flag + prefix length in bytes.
		*(rdata_tail) = len + s->apl.excl_flag;
		rdata_tail += 1;
		// Write address prefix non-null data.
		memcpy(rdata_tail, s->buffer, len);
		rdata_tail += len;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st785;
tr2534:
#line 902 "scanner_body.rl"
	{
		if ((s->apl.addr_family == 1 && s->number64 <= 32) ||
		    (s->apl.addr_family == 2 && s->number64 <= 128)) {
			s->apl.prefix_length = (uint8_t)(s->number64);
		} else {
			WARN(ZS_BAD_APL);
			p--; {goto st269;}
		}
	}
#line 911 "scanner_body.rl"
	{
		// Write address family.
		*((uint16_t *)rdata_tail) = htons(s->apl.addr_family);
		rdata_tail += 2;
		// Write prefix length in bites.
		*(rdata_tail) = s->apl.prefix_length;
		rdata_tail += 1;
		// Copy address to buffer.
		uint8_t len;
		switch (s->apl.addr_family) {
		case 1:
			len = INET4_ADDR_LENGTH;
			memcpy(s->buffer, &(addr4.s_addr), len);
			break;
		case 2:
			len = INET6_ADDR_LENGTH;
			memcpy(s->buffer, &(addr6.s6_addr), len);
			break;
		default:
			WARN(ZS_BAD_APL);
			p--; {goto st269;}
		}
		// Find prefix without trailing zeroes.
		while (len > 0) {
			if ((s->buffer[len - 1] & 255) != 0) {
				break;
			}
			len--;
		}
		// Write negation flag + prefix length in bytes.
		*(rdata_tail) = len + s->apl.excl_flag;
		rdata_tail += 1;
		// Write address prefix non-null data.
		memcpy(rdata_tail, s->buffer, len);
		rdata_tail += len;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st785;
st785:
	if ( ++p == pe )
		goto _test_eof785;
case 785:
#line 70111 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st785;
		case 32: goto st785;
		case 33: goto tr2512;
		case 40: goto tr2513;
		case 41: goto tr2514;
		case 49: goto tr2515;
		case 50: goto tr2516;
		case 2058: goto tr2517;
		case 2107: goto st792;
		case 2314: goto tr2519;
		case 2363: goto tr2519;
		case 2570: goto tr2520;
		case 2619: goto tr2521;
	}
	goto tr2510;
tr2512:
#line 890 "scanner_body.rl"
	{
		memset(&(s->apl), 0, sizeof(s->apl));
	}
#line 893 "scanner_body.rl"
	{
		s->apl.excl_flag = 128; // dec 128  = bin 10000000.
	}
	goto st786;
st786:
	if ( ++p == pe )
		goto _test_eof786;
case 786:
#line 70162 "scanner.c"
	switch( (*p) ) {
		case 49: goto tr2522;
		case 50: goto tr2523;
	}
	goto tr2510;
tr2515:
#line 890 "scanner_body.rl"
	{
		memset(&(s->apl), 0, sizeof(s->apl));
	}
#line 896 "scanner_body.rl"
	{
		s->apl.addr_family = 1;
	}
	goto st787;
tr2522:
#line 896 "scanner_body.rl"
	{
		s->apl.addr_family = 1;
	}
	goto st787;
st787:
	if ( ++p == pe )
		goto _test_eof787;
case 787:
#line 70188 "scanner.c"
	if ( (*p) == 58 )
		goto st788;
	goto tr2510;
st788:
	if ( ++p == pe )
		goto _test_eof788;
case 788:
	if ( (*p) == 46 )
		goto tr2526;
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr2526;
	goto tr2525;
tr2526:
#line 835 "scanner_body.rl"
	{
		s->buffer_length = 0;
	}
#line 838 "scanner_body.rl"
	{
		if (s->buffer_length < MAX_RDATA_LENGTH) {
			s->buffer[s->buffer_length++] = (*p);
		}
		else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st789;
tr2527:
#line 838 "scanner_body.rl"
	{
		if (s->buffer_length < MAX_RDATA_LENGTH) {
			s->buffer[s->buffer_length++] = (*p);
		}
		else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st789;
st789:
	if ( ++p == pe )
		goto _test_eof789;
case 789:
#line 70233 "scanner.c"
	if ( (*p) == 47 )
		goto tr2528;
	if ( 46 <= (*p) && (*p) <= 57 )
		goto tr2527;
	goto tr2525;
tr2528:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
	goto st790;
tr2544:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
	goto st790;
st790:
	if ( ++p == pe )
		goto _test_eof790;
case 790:
#line 70265 "scanner.c"
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr2529;
	goto tr2510;
tr2529:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st791;
tr2533:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st791;
st791:
	if ( ++p == pe )
		goto _test_eof791;
case 791:
#line 70311 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto tr2530;
		case 32: goto tr2530;
		case 40: goto tr2531;
		case 41: goto tr2532;
		case 2058: goto tr2534;
		case 2107: goto tr2535;
		case 2314: goto tr2536;
		case 2363: goto tr2536;
		case 2570: goto tr2537;
		case 2619: goto tr2538;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2533;
	goto tr2510;
tr2539:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st792;
tr2535:
#line 902 "scanner_body.rl"
	{
		if ((s->apl.addr_family == 1 && s->number64 <= 32) ||
		    (s->apl.addr_family == 2 && s->number64 <= 128)) {
			s->apl.prefix_length = (uint8_t)(s->number64);
		} else {
			WARN(ZS_BAD_APL);
			p--; {goto st269;}
		}
	}
#line 911 "scanner_body.rl"
	{
		// Write address family.
		*((uint16_t *)rdata_tail) = htons(s->apl.addr_family);
		rdata_tail += 2;
		// Write prefix length in bites.
		*(rdata_tail) = s->apl.prefix_length;
		rdata_tail += 1;
		// Copy address to buffer.
		uint8_t len;
		switch (s->apl.addr_family) {
		case 1:
			len = INET4_ADDR_LENGTH;
			memcpy(s->buffer, &(addr4.s_addr), len);
			break;
		case 2:
			len = INET6_ADDR_LENGTH;
			memcpy(s->buffer, &(addr6.s6_addr), len);
			break;
		default:
			WARN(ZS_BAD_APL);
			p--; {goto st269;}
		}
		// Find prefix without trailing zeroes.
		while (len > 0) {
			if ((s->buffer[len - 1] & 255) != 0) {
				break;
			}
			len--;
		}
		// Write negation flag + prefix length in bytes.
		*(rdata_tail) = len + s->apl.excl_flag;
		rdata_tail += 1;
		// Write address prefix non-null data.
		memcpy(rdata_tail, s->buffer, len);
		rdata_tail += len;
	}
	goto st792;
st792:
	if ( ++p == pe )
		goto _test_eof792;
case 792:
#line 70408 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2540;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2539;
	goto tr71;
tr2519:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1194;
tr2536:
#line 902 "scanner_body.rl"
	{
		if ((s->apl.addr_family == 1 && s->number64 <= 32) ||
		    (s->apl.addr_family == 2 && s->number64 <= 128)) {
			s->apl.prefix_length = (uint8_t)(s->number64);
		} else {
			WARN(ZS_BAD_APL);
			p--; {goto st269;}
		}
	}
#line 911 "scanner_body.rl"
	{
		// Write address family.
		*((uint16_t *)rdata_tail) = htons(s->apl.addr_family);
		rdata_tail += 2;
		// Write prefix length in bites.
		*(rdata_tail) = s->apl.prefix_length;
		rdata_tail += 1;
		// Copy address to buffer.
		uint8_t len;
		switch (s->apl.addr_family) {
		case 1:
			len = INET4_ADDR_LENGTH;
			memcpy(s->buffer, &(addr4.s_addr), len);
			break;
		case 2:
			len = INET6_ADDR_LENGTH;
			memcpy(s->buffer, &(addr6.s6_addr), len);
			break;
		default:
			WARN(ZS_BAD_APL);
			p--; {goto st269;}
		}
		// Find prefix without trailing zeroes.
		while (len > 0) {
			if ((s->buffer[len - 1] & 255) != 0) {
				break;
			}
			len--;
		}
		// Write negation flag + prefix length in bytes.
		*(rdata_tail) = len + s->apl.excl_flag;
		rdata_tail += 1;
		// Write address prefix non-null data.
		memcpy(rdata_tail, s->buffer, len);
		rdata_tail += len;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1194;
st1194:
	if ( ++p == pe )
		goto _test_eof1194;
case 1194:
#line 70498 "scanner.c"
	goto st0;
tr2520:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1195;
tr2537:
#line 902 "scanner_body.rl"
	{
		if ((s->apl.addr_family == 1 && s->number64 <= 32) ||
		    (s->apl.addr_family == 2 && s->number64 <= 128)) {
			s->apl.prefix_length = (uint8_t)(s->number64);
		} else {
			WARN(ZS_BAD_APL);
			p--; {goto st269;}
		}
	}
#line 911 "scanner_body.rl"
	{
		// Write address family.
		*((uint16_t *)rdata_tail) = htons(s->apl.addr_family);
		rdata_tail += 2;
		// Write prefix length in bites.
		*(rdata_tail) = s->apl.prefix_length;
		rdata_tail += 1;
		// Copy address to buffer.
		uint8_t len;
		switch (s->apl.addr_family) {
		case 1:
			len = INET4_ADDR_LENGTH;
			memcpy(s->buffer, &(addr4.s_addr), len);
			break;
		case 2:
			len = INET6_ADDR_LENGTH;
			memcpy(s->buffer, &(addr6.s6_addr), len);
			break;
		default:
			WARN(ZS_BAD_APL);
			p--; {goto st269;}
		}
		// Find prefix without trailing zeroes.
		while (len > 0) {
			if ((s->buffer[len - 1] & 255) != 0) {
				break;
			}
			len--;
		}
		// Write negation flag + prefix length in bytes.
		*(rdata_tail) = len + s->apl.excl_flag;
		rdata_tail += 1;
		// Write address prefix non-null data.
		memcpy(rdata_tail, s->buffer, len);
		rdata_tail += len;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1195;
st1195:
	if ( ++p == pe )
		goto _test_eof1195;
case 1195:
#line 70571 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st785;
		case 32: goto st785;
		case 33: goto tr2512;
		case 40: goto tr2513;
		case 41: goto tr2514;
		case 49: goto tr2515;
		case 50: goto tr2516;
		case 2058: goto tr2517;
		case 2107: goto st792;
		case 2314: goto tr2519;
		case 2363: goto tr2519;
		case 2570: goto tr2520;
		case 2619: goto tr2521;
	}
	goto tr2510;
tr2516:
#line 890 "scanner_body.rl"
	{
		memset(&(s->apl), 0, sizeof(s->apl));
	}
#line 899 "scanner_body.rl"
	{
		s->apl.addr_family = 2;
	}
	goto st793;
tr2523:
#line 899 "scanner_body.rl"
	{
		s->apl.addr_family = 2;
	}
	goto st793;
st793:
	if ( ++p == pe )
		goto _test_eof793;
case 793:
#line 70628 "scanner.c"
	if ( (*p) == 58 )
		goto st794;
	goto tr2510;
st794:
	if ( ++p == pe )
		goto _test_eof794;
case 794:
	if ( (*p) == 46 )
		goto tr2542;
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 58 )
			goto tr2542;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr2542;
	} else
		goto tr2542;
	goto tr2525;
tr2542:
#line 835 "scanner_body.rl"
	{
		s->buffer_length = 0;
	}
#line 838 "scanner_body.rl"
	{
		if (s->buffer_length < MAX_RDATA_LENGTH) {
			s->buffer[s->buffer_length++] = (*p);
		}
		else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st795;
tr2543:
#line 838 "scanner_body.rl"
	{
		if (s->buffer_length < MAX_RDATA_LENGTH) {
			s->buffer[s->buffer_length++] = (*p);
		}
		else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st795;
st795:
	if ( ++p == pe )
		goto _test_eof795;
case 795:
#line 70679 "scanner.c"
	if ( (*p) == 47 )
		goto tr2544;
	if ( (*p) < 65 ) {
		if ( 46 <= (*p) && (*p) <= 58 )
			goto tr2543;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr2543;
	} else
		goto tr2543;
	goto tr2525;
tr2521:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1196;
tr2538:
#line 902 "scanner_body.rl"
	{
		if ((s->apl.addr_family == 1 && s->number64 <= 32) ||
		    (s->apl.addr_family == 2 && s->number64 <= 128)) {
			s->apl.prefix_length = (uint8_t)(s->number64);
		} else {
			WARN(ZS_BAD_APL);
			p--; {goto st269;}
		}
	}
#line 911 "scanner_body.rl"
	{
		// Write address family.
		*((uint16_t *)rdata_tail) = htons(s->apl.addr_family);
		rdata_tail += 2;
		// Write prefix length in bites.
		*(rdata_tail) = s->apl.prefix_length;
		rdata_tail += 1;
		// Copy address to buffer.
		uint8_t len;
		switch (s->apl.addr_family) {
		case 1:
			len = INET4_ADDR_LENGTH;
			memcpy(s->buffer, &(addr4.s_addr), len);
			break;
		case 2:
			len = INET6_ADDR_LENGTH;
			memcpy(s->buffer, &(addr6.s6_addr), len);
			break;
		default:
			WARN(ZS_BAD_APL);
			p--; {goto st269;}
		}
		// Find prefix without trailing zeroes.
		while (len > 0) {
			if ((s->buffer[len - 1] & 255) != 0) {
				break;
			}
			len--;
		}
		// Write negation flag + prefix length in bytes.
		*(rdata_tail) = len + s->apl.excl_flag;
		rdata_tail += 1;
		// Write address prefix non-null data.
		memcpy(rdata_tail, s->buffer, len);
		rdata_tail += len;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1196;
st1196:
	if ( ++p == pe )
		goto _test_eof1196;
case 1196:
#line 70754 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2540;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2539;
	goto tr71;
st796:
	if ( ++p == pe )
		goto _test_eof796;
case 796:
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr2545;
	goto tr1899;
tr2545:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st797;
tr2549:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st797;
st797:
	if ( ++p == pe )
		goto _test_eof797;
case 797:
#line 70830 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2546;
		case 32: goto tr2546;
		case 40: goto tr2547;
		case 41: goto tr2548;
		case 1034: goto tr2550;
		case 1083: goto tr2551;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2549;
	goto tr1899;
tr2553:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st798;
tr2554:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st798;
tr2556:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st798;
tr2593:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st798;
tr2546:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st798;
tr2547:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st798;
tr2548:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st798;
tr2550:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st798;
st798:
	if ( ++p == pe )
		goto _test_eof798;
case 798:
#line 70968 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st798;
		case 32: goto st798;
		case 40: goto tr2553;
		case 41: goto tr2554;
		case 1034: goto tr2556;
		case 1083: goto st808;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr2555;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr2555;
	} else
		goto tr2555;
	goto tr71;
tr2555:
#line 1686 "scanner_body.rl"
	{ p--; {stack[top++] = 799;goto st489;} }
	goto st799;
st799:
	if ( ++p == pe )
		goto _test_eof799;
case 799:
#line 71008 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st800;
		case 32: goto st800;
		case 40: goto tr2559;
		case 41: goto tr2560;
		case 1034: goto tr2561;
		case 1083: goto st807;
	}
	goto tr71;
tr2559:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st800;
tr2560:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st800;
tr2561:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st800;
tr2591:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st800;
st800:
	if ( ++p == pe )
		goto _test_eof800;
case 800:
#line 71072 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st800;
		case 32: goto st800;
		case 40: goto tr2559;
		case 41: goto tr2560;
		case 1034: goto tr2561;
		case 1083: goto st807;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2563;
	goto tr1899;
tr2563:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st801;
tr2567:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st801;
st801:
	if ( ++p == pe )
		goto _test_eof801;
case 801:
#line 71140 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2564;
		case 32: goto tr2564;
		case 40: goto tr2565;
		case 41: goto tr2566;
		case 1034: goto tr2568;
		case 1083: goto tr2569;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2567;
	goto tr1899;
tr2572:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st802;
tr2573:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st802;
tr2575:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st802;
tr2589:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st802;
tr2564:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st802;
tr2565:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st802;
tr2566:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st802;
tr2568:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st802;
st802:
	if ( ++p == pe )
		goto _test_eof802;
case 802:
#line 71274 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st802;
		case 32: goto st802;
		case 40: goto tr2572;
		case 41: goto tr2573;
		case 1034: goto tr2575;
		case 1083: goto st806;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr2574;
	} else if ( _widec > 70 ) {
		if ( 97 <= _widec && _widec <= 102 )
			goto tr2574;
	} else
		goto tr2574;
	goto tr2570;
tr2574:
#line 965 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st803;
st803:
	if ( ++p == pe )
		goto _test_eof803;
case 803:
#line 71321 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr2577;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr2577;
	} else
		goto tr2577;
	goto tr2570;
tr2579:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st804;
tr2580:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st804;
tr2581:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st804;
tr2587:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st804;
tr2577:
#line 973 "scanner_body.rl"
	{
		*rdata_tail += second_hex_to_num[(uint8_t)(*p)];
		rdata_tail++;
	}
	goto st804;
st804:
	if ( ++p == pe )
		goto _test_eof804;
case 804:
#line 71378 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st804;
		case 32: goto st804;
		case 40: goto tr2579;
		case 41: goto tr2580;
		case 2058: goto tr2581;
		case 2107: goto st805;
		case 2314: goto tr2583;
		case 2363: goto tr2583;
		case 2570: goto tr2584;
		case 2619: goto tr2585;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr2574;
	} else if ( _widec > 70 ) {
		if ( 97 <= _widec && _widec <= 102 )
			goto tr2574;
	} else
		goto tr2574;
	goto tr2570;
tr2586:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st805;
st805:
	if ( ++p == pe )
		goto _test_eof805;
case 805:
#line 71432 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2587;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2586;
	goto tr2570;
tr2583:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1197;
st1197:
	if ( ++p == pe )
		goto _test_eof1197;
case 1197:
#line 71469 "scanner.c"
	goto st0;
tr2584:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1198;
st1198:
	if ( ++p == pe )
		goto _test_eof1198;
case 1198:
#line 71485 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st804;
		case 32: goto st804;
		case 40: goto tr2579;
		case 41: goto tr2580;
		case 2058: goto tr2581;
		case 2107: goto st805;
		case 2314: goto tr2583;
		case 2363: goto tr2583;
		case 2570: goto tr2584;
		case 2619: goto tr2585;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr2574;
	} else if ( _widec > 70 ) {
		if ( 97 <= _widec && _widec <= 102 )
			goto tr2574;
	} else
		goto tr2574;
	goto tr2570;
tr2585:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1199;
st1199:
	if ( ++p == pe )
		goto _test_eof1199;
case 1199:
#line 71537 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2587;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2586;
	goto tr2570;
tr2588:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st806;
tr2569:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st806;
st806:
	if ( ++p == pe )
		goto _test_eof806;
case 806:
#line 71588 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2589;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2588;
	goto tr71;
tr2590:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st807;
st807:
	if ( ++p == pe )
		goto _test_eof807;
case 807:
#line 71627 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2591;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2590;
	goto tr71;
tr2592:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st808;
tr2551:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st808;
st808:
	if ( ++p == pe )
		goto _test_eof808;
case 808:
#line 71679 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2593;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2592;
	goto tr71;
st809:
	if ( ++p == pe )
		goto _test_eof809;
case 809:
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr2594;
	goto tr1899;
tr2594:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st810;
tr2598:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st810;
st810:
	if ( ++p == pe )
		goto _test_eof810;
case 810:
#line 71755 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2595;
		case 32: goto tr2595;
		case 40: goto tr2596;
		case 41: goto tr2597;
		case 1034: goto tr2599;
		case 1083: goto tr2600;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2598;
	goto tr1899;
tr2602:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st811;
tr2603:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st811;
tr2605:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st811;
tr2633:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st811;
tr2595:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st811;
tr2596:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st811;
tr2597:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st811;
tr2599:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st811;
st811:
	if ( ++p == pe )
		goto _test_eof811;
case 811:
#line 71889 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st811;
		case 32: goto st811;
		case 40: goto tr2602;
		case 41: goto tr2603;
		case 1034: goto tr2605;
		case 1083: goto st818;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2604;
	goto tr1899;
tr2604:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st812;
tr2610:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st812;
st812:
	if ( ++p == pe )
		goto _test_eof812;
case 812:
#line 71957 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2607;
		case 32: goto tr2607;
		case 40: goto tr2608;
		case 41: goto tr2609;
		case 1034: goto tr2611;
		case 1083: goto tr2612;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2610;
	goto tr1899;
tr2614:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st813;
tr2615:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st813;
tr2617:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st813;
tr2631:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st813;
tr2607:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st813;
tr2608:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st813;
tr2609:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st813;
tr2611:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st813;
st813:
	if ( ++p == pe )
		goto _test_eof813;
case 813:
#line 72091 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st813;
		case 32: goto st813;
		case 40: goto tr2614;
		case 41: goto tr2615;
		case 1034: goto tr2617;
		case 1083: goto st817;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr2616;
	} else if ( _widec > 70 ) {
		if ( 97 <= _widec && _widec <= 102 )
			goto tr2616;
	} else
		goto tr2616;
	goto tr2570;
tr2616:
#line 965 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st814;
st814:
	if ( ++p == pe )
		goto _test_eof814;
case 814:
#line 72138 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr2619;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr2619;
	} else
		goto tr2619;
	goto tr2570;
tr2621:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st815;
tr2622:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st815;
tr2623:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st815;
tr2629:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st815;
tr2619:
#line 973 "scanner_body.rl"
	{
		*rdata_tail += second_hex_to_num[(uint8_t)(*p)];
		rdata_tail++;
	}
	goto st815;
st815:
	if ( ++p == pe )
		goto _test_eof815;
case 815:
#line 72195 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st815;
		case 32: goto st815;
		case 40: goto tr2621;
		case 41: goto tr2622;
		case 2058: goto tr2623;
		case 2107: goto st816;
		case 2314: goto tr2625;
		case 2363: goto tr2625;
		case 2570: goto tr2626;
		case 2619: goto tr2627;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr2616;
	} else if ( _widec > 70 ) {
		if ( 97 <= _widec && _widec <= 102 )
			goto tr2616;
	} else
		goto tr2616;
	goto tr2570;
tr2628:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st816;
st816:
	if ( ++p == pe )
		goto _test_eof816;
case 816:
#line 72249 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2629;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2628;
	goto tr2570;
tr2625:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1200;
st1200:
	if ( ++p == pe )
		goto _test_eof1200;
case 1200:
#line 72286 "scanner.c"
	goto st0;
tr2626:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1201;
st1201:
	if ( ++p == pe )
		goto _test_eof1201;
case 1201:
#line 72302 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st815;
		case 32: goto st815;
		case 40: goto tr2621;
		case 41: goto tr2622;
		case 2058: goto tr2623;
		case 2107: goto st816;
		case 2314: goto tr2625;
		case 2363: goto tr2625;
		case 2570: goto tr2626;
		case 2619: goto tr2627;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr2616;
	} else if ( _widec > 70 ) {
		if ( 97 <= _widec && _widec <= 102 )
			goto tr2616;
	} else
		goto tr2616;
	goto tr2570;
tr2627:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1202;
st1202:
	if ( ++p == pe )
		goto _test_eof1202;
case 1202:
#line 72354 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2629;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2628;
	goto tr2570;
tr2630:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st817;
tr2612:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st817;
st817:
	if ( ++p == pe )
		goto _test_eof817;
case 817:
#line 72405 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2631;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2630;
	goto tr71;
tr2632:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st818;
tr2600:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st818;
st818:
	if ( ++p == pe )
		goto _test_eof818;
case 818:
#line 72456 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2633;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2632;
	goto tr71;
st819:
	if ( ++p == pe )
		goto _test_eof819;
case 819:
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr2634;
	goto tr1899;
tr2634:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st820;
tr2638:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st820;
st820:
	if ( ++p == pe )
		goto _test_eof820;
case 820:
#line 72532 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2635;
		case 32: goto tr2635;
		case 40: goto tr2636;
		case 41: goto tr2637;
		case 1034: goto tr2639;
		case 1083: goto tr2640;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2638;
	goto tr1899;
tr2643:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st821;
tr2644:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st821;
tr2649:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st821;
tr2842:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st821;
tr2635:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st821;
tr2636:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st821;
tr2637:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st821;
tr2639:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st821;
st821:
	if ( ++p == pe )
		goto _test_eof821;
case 821:
#line 72666 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st821;
		case 32: goto st821;
		case 40: goto tr2643;
		case 41: goto tr2644;
		case 48: goto tr2645;
		case 49: goto tr2646;
		case 50: goto tr2647;
		case 51: goto tr2648;
		case 1034: goto tr2649;
		case 1083: goto st857;
	}
	goto tr2641;
tr2645:
#line 1159 "scanner_body.rl"
	{
		*(rdata_tail++) = 0;
	}
	goto st822;
st822:
	if ( ++p == pe )
		goto _test_eof822;
case 822:
#line 72704 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st823;
		case 32: goto st823;
		case 40: goto tr2652;
		case 41: goto tr2653;
		case 1034: goto tr2654;
		case 1083: goto st835;
	}
	goto tr2641;
tr2652:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st823;
tr2653:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st823;
tr2654:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st823;
tr2704:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st823;
st823:
	if ( ++p == pe )
		goto _test_eof823;
case 823:
#line 72768 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st823;
		case 32: goto st823;
		case 40: goto tr2652;
		case 41: goto tr2653;
		case 1034: goto tr2654;
		case 1083: goto st835;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2657;
	goto tr2656;
tr2657:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st824;
tr2661:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st824;
st824:
	if ( ++p == pe )
		goto _test_eof824;
case 824:
#line 72836 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2658;
		case 32: goto tr2658;
		case 40: goto tr2659;
		case 41: goto tr2660;
		case 1034: goto tr2662;
		case 1083: goto tr2663;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2661;
	goto tr2656;
tr2665:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st825;
tr2666:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st825;
tr2668:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st825;
tr2702:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st825;
tr2658:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st825;
tr2659:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st825;
tr2660:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st825;
tr2662:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st825;
st825:
	if ( ++p == pe )
		goto _test_eof825;
case 825:
#line 72970 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st825;
		case 32: goto st825;
		case 40: goto tr2665;
		case 41: goto tr2666;
		case 46: goto st826;
		case 1034: goto tr2668;
		case 1083: goto st834;
	}
	goto tr2641;
st826:
	if ( ++p == pe )
		goto _test_eof826;
case 826:
	_widec = (*p);
	if ( (*p) < 32 ) {
		if ( (*p) > 9 ) {
			if ( 10 <= (*p) && (*p) <= 10 ) {
				_widec = (short)(8832 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
				if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 1024;
				if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 2048;
			}
		} else if ( (*p) >= 9 ) {
			_widec = (short)(5760 + ((*p) - -128));
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
		}
	} else if ( (*p) > 32 ) {
		if ( (*p) < 41 ) {
			if ( 40 <= (*p) && (*p) <= 40 ) {
				_widec = (short)(5760 + ((*p) - -128));
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
				if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
			}
		} else if ( (*p) > 41 ) {
			if ( 59 <= (*p) && (*p) <= 59 ) {
				_widec = (short)(8832 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
				if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 1024;
				if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 2048;
			}
		} else {
			_widec = (short)(5760 + ((*p) - -128));
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
		}
	} else {
		_widec = (short)(5760 + ((*p) - -128));
		if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
		if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
	}
	switch( _widec ) {
		case 6153: goto st827;
		case 6176: goto st827;
		case 6184: goto tr2672;
		case 6185: goto tr2673;
		case 6409: goto st830;
		case 6432: goto st830;
		case 6440: goto tr2675;
		case 6441: goto tr2676;
		case 6665: goto st832;
		case 6688: goto st832;
		case 6696: goto tr2678;
		case 6697: goto tr2679;
		case 9482: goto tr2680;
		case 9531: goto tr2680;
		case 9738: goto tr2680;
		case 9787: goto tr2680;
		case 10250: goto tr2681;
		case 10299: goto st829;
		case 10506: goto tr2680;
		case 10555: goto tr2680;
		case 10762: goto tr2683;
		case 10811: goto tr2684;
		case 11274: goto tr2685;
		case 11323: goto st831;
		case 11530: goto tr2680;
		case 11579: goto tr2680;
		case 11786: goto tr2687;
		case 11835: goto tr2688;
		case 12298: goto tr2689;
		case 12347: goto st833;
		case 12554: goto tr2680;
		case 12603: goto tr2680;
		case 12810: goto tr2691;
		case 12859: goto tr2692;
	}
	goto tr2670;
tr2672:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st827;
tr2673:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st827;
tr2681:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st827;
tr2696:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st827;
tr2815:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
	goto st827;
tr2816:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st827;
tr2817:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st827;
tr2825:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st827;
tr2726:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
	goto st827;
tr2727:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st827;
tr2728:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st827;
tr2736:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st827;
tr2771:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
	goto st827;
tr2772:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st827;
tr2773:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st827;
tr2781:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st827;
st827:
	if ( ++p == pe )
		goto _test_eof827;
case 827:
#line 73360 "scanner.c"
	_widec = (*p);
	if ( (*p) < 43 ) {
		if ( (*p) < 32 ) {
			if ( (*p) > 9 ) {
				if ( 10 <= (*p) && (*p) <= 10 ) {
					_widec = (short)(3200 + ((*p) - -128));
					if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
					if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 512;
				}
			} else if ( (*p) >= 9 ) {
				_widec = (short)(2688 + ((*p) - -128));
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
			}
		} else if ( (*p) > 32 ) {
			if ( (*p) > 40 ) {
				if ( 41 <= (*p) && (*p) <= 41 ) {
					_widec = (short)(2688 + ((*p) - -128));
					if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
				}
			} else if ( (*p) >= 40 ) {
				_widec = (short)(2688 + ((*p) - -128));
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
			}
		} else {
			_widec = (short)(2688 + ((*p) - -128));
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
		}
	} else if ( (*p) > 43 ) {
		if ( (*p) < 59 ) {
			if ( (*p) > 47 ) {
				if ( 48 <= (*p) && (*p) <= 57 ) {
					_widec = (short)(2688 + ((*p) - -128));
					if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
				}
			} else if ( (*p) >= 47 ) {
				_widec = (short)(2688 + ((*p) - -128));
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
			}
		} else if ( (*p) > 59 ) {
			if ( (*p) > 90 ) {
				if ( 97 <= (*p) && (*p) <= 122 ) {
					_widec = (short)(2688 + ((*p) - -128));
					if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
				}
			} else if ( (*p) >= 65 ) {
				_widec = (short)(2688 + ((*p) - -128));
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
			}
		} else {
			_widec = (short)(3200 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 512;
		}
	} else {
		_widec = (short)(2688 + ((*p) - -128));
		if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
	}
	switch( _widec ) {
		case 3081: goto st827;
		case 3104: goto st827;
		case 3112: goto tr2672;
		case 3113: goto tr2673;
		case 3115: goto tr2694;
		case 4106: goto tr2681;
		case 4155: goto st829;
	}
	if ( _widec < 3137 ) {
		if ( 3119 <= _widec && _widec <= 3129 )
			goto tr2694;
	} else if ( _widec > 3162 ) {
		if ( 3169 <= _widec && _widec <= 3194 )
			goto tr2694;
	} else
		goto tr2694;
	goto tr2693;
tr2694:
#line 1062 "scanner_body.rl"
	{ p--; {stack[top++] = 828;goto st330;} }
	goto st828;
st828:
	if ( ++p == pe )
		goto _test_eof828;
case 828:
#line 73470 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1152 + ((*p) - -128));
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1152 + ((*p) - -128));
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 1546: goto tr2680;
		case 1595: goto tr2680;
	}
	goto tr2693;
tr2680:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1203;
tr2735:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1203;
tr2824:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1203;
tr2780:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1203;
st1203:
	if ( ++p == pe )
		goto _test_eof1203;
case 1203:
#line 73550 "scanner.c"
	goto st0;
tr2695:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st829;
tr2826:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
	goto st829;
tr2737:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
	goto st829;
tr2782:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
	goto st829;
st829:
	if ( ++p == pe )
		goto _test_eof829;
case 829:
#line 73602 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(3200 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 512;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(3200 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 512;
		}
	} else {
		_widec = (short)(3200 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 512;
	}
	if ( _widec == 4106 )
		goto tr2696;
	if ( 3968 <= _widec && _widec <= 4223 )
		goto tr2695;
	goto tr2693;
tr2675:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st830;
tr2676:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st830;
tr2685:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st830;
tr2698:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st830;
tr2818:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
	goto st830;
tr2819:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st830;
tr2820:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st830;
tr2829:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st830;
tr2729:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
	goto st830;
tr2730:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st830;
tr2731:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st830;
tr2740:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st830;
tr2774:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
	goto st830;
tr2775:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st830;
tr2776:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st830;
tr2785:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st830;
st830:
	if ( ++p == pe )
		goto _test_eof830;
case 830:
#line 73890 "scanner.c"
	_widec = (*p);
	if ( (*p) < 32 ) {
		if ( (*p) > 9 ) {
			if ( 10 <= (*p) && (*p) <= 10 ) {
				_widec = (short)(12928 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
				if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
				if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 1024;
			}
		} else if ( (*p) >= 9 ) {
			_widec = (short)(4224 + ((*p) - -128));
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 256;
		}
	} else if ( (*p) > 32 ) {
		if ( (*p) < 41 ) {
			if ( 40 <= (*p) && (*p) <= 40 ) {
				_widec = (short)(4224 + ((*p) - -128));
				if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 256;
			}
		} else if ( (*p) > 41 ) {
			if ( 59 <= (*p) && (*p) <= 59 ) {
				_widec = (short)(12928 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
				if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
				if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 1024;
			}
		} else {
			_widec = (short)(4224 + ((*p) - -128));
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 256;
		}
	} else {
		_widec = (short)(4224 + ((*p) - -128));
		if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 256;
	}
	switch( _widec ) {
		case 4617: goto st830;
		case 4640: goto st830;
		case 4648: goto tr2675;
		case 4649: goto tr2676;
		case 13578: goto tr2680;
		case 13627: goto tr2680;
		case 13834: goto tr2680;
		case 13883: goto tr2680;
		case 14346: goto tr2685;
		case 14395: goto st831;
		case 14602: goto tr2680;
		case 14651: goto tr2680;
		case 14858: goto tr2687;
		case 14907: goto tr2688;
	}
	goto tr2693;
tr2697:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st831;
tr2830:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
	goto st831;
tr2741:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
	goto st831;
tr2786:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
	goto st831;
st831:
	if ( ++p == pe )
		goto _test_eof831;
case 831:
#line 74012 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(4736 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(4736 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
		}
	} else {
		_widec = (short)(4736 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
	}
	if ( _widec == 5642 )
		goto tr2698;
	if ( 5504 <= _widec && _widec <= 5759 )
		goto tr2697;
	goto tr2693;
tr2687:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1204;
tr2742:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1204;
tr2787:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1204;
tr2831:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1204;
st1204:
	if ( ++p == pe )
		goto _test_eof1204;
case 1204:
#line 74124 "scanner.c"
	_widec = (*p);
	if ( (*p) < 32 ) {
		if ( (*p) > 9 ) {
			if ( 10 <= (*p) && (*p) <= 10 ) {
				_widec = (short)(12928 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
				if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
				if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 1024;
			}
		} else if ( (*p) >= 9 ) {
			_widec = (short)(4224 + ((*p) - -128));
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 256;
		}
	} else if ( (*p) > 32 ) {
		if ( (*p) < 41 ) {
			if ( 40 <= (*p) && (*p) <= 40 ) {
				_widec = (short)(4224 + ((*p) - -128));
				if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 256;
			}
		} else if ( (*p) > 41 ) {
			if ( 59 <= (*p) && (*p) <= 59 ) {
				_widec = (short)(12928 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
				if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
				if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 1024;
			}
		} else {
			_widec = (short)(4224 + ((*p) - -128));
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 256;
		}
	} else {
		_widec = (short)(4224 + ((*p) - -128));
		if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 256;
	}
	switch( _widec ) {
		case 4617: goto st830;
		case 4640: goto st830;
		case 4648: goto tr2675;
		case 4649: goto tr2676;
		case 13578: goto tr2680;
		case 13627: goto tr2680;
		case 13834: goto tr2680;
		case 13883: goto tr2680;
		case 14346: goto tr2685;
		case 14395: goto st831;
		case 14602: goto tr2680;
		case 14651: goto tr2680;
		case 14858: goto tr2687;
		case 14907: goto tr2688;
	}
	goto tr2693;
tr2688:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1205;
tr2743:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1205;
tr2832:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1205;
tr2788:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1205;
st1205:
	if ( ++p == pe )
		goto _test_eof1205;
case 1205:
#line 74256 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(4736 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(4736 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
		}
	} else {
		_widec = (short)(4736 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
	}
	if ( _widec == 5642 )
		goto tr2698;
	if ( 5504 <= _widec && _widec <= 5759 )
		goto tr2697;
	goto tr2693;
tr2678:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st832;
tr2679:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st832;
tr2689:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st832;
tr2700:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st832;
tr2821:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
	goto st832;
tr2822:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st832;
tr2823:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st832;
tr2833:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st832;
tr2732:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
	goto st832;
tr2733:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st832;
tr2734:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st832;
tr2744:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st832;
tr2777:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
	goto st832;
tr2778:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st832;
tr2779:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st832;
tr2789:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st832;
st832:
	if ( ++p == pe )
		goto _test_eof832;
case 832:
#line 74544 "scanner.c"
	_widec = (*p);
	if ( (*p) < 43 ) {
		if ( (*p) < 32 ) {
			if ( (*p) > 9 ) {
				if ( 10 <= (*p) && (*p) <= 10 ) {
					_widec = (short)(8832 + ((*p) - -128));
					if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
					if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
					if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 1024;
					if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 2048;
				}
			} else if ( (*p) >= 9 ) {
				_widec = (short)(5760 + ((*p) - -128));
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
				if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
			}
		} else if ( (*p) > 32 ) {
			if ( (*p) > 40 ) {
				if ( 41 <= (*p) && (*p) <= 41 ) {
					_widec = (short)(5760 + ((*p) - -128));
					if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
					if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
				}
			} else if ( (*p) >= 40 ) {
				_widec = (short)(5760 + ((*p) - -128));
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
				if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
			}
		} else {
			_widec = (short)(5760 + ((*p) - -128));
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
		}
	} else if ( (*p) > 43 ) {
		if ( (*p) < 59 ) {
			if ( (*p) > 47 ) {
				if ( 48 <= (*p) && (*p) <= 57 ) {
					_widec = (short)(2688 + ((*p) - -128));
					if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
				}
			} else if ( (*p) >= 47 ) {
				_widec = (short)(2688 + ((*p) - -128));
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
			}
		} else if ( (*p) > 59 ) {
			if ( (*p) > 90 ) {
				if ( 97 <= (*p) && (*p) <= 122 ) {
					_widec = (short)(2688 + ((*p) - -128));
					if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
				}
			} else if ( (*p) >= 65 ) {
				_widec = (short)(2688 + ((*p) - -128));
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
			}
		} else {
			_widec = (short)(8832 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 1024;
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 2048;
		}
	} else {
		_widec = (short)(2688 + ((*p) - -128));
		if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
	}
	switch( _widec ) {
		case 3115: goto tr2694;
		case 6153: goto st827;
		case 6176: goto st827;
		case 6184: goto tr2672;
		case 6185: goto tr2673;
		case 6409: goto st830;
		case 6432: goto st830;
		case 6440: goto tr2675;
		case 6441: goto tr2676;
		case 6665: goto st832;
		case 6688: goto st832;
		case 6696: goto tr2678;
		case 6697: goto tr2679;
		case 9482: goto tr2680;
		case 9531: goto tr2680;
		case 9738: goto tr2680;
		case 9787: goto tr2680;
		case 10250: goto tr2681;
		case 10299: goto st829;
		case 10506: goto tr2680;
		case 10555: goto tr2680;
		case 10762: goto tr2683;
		case 10811: goto tr2684;
		case 11274: goto tr2685;
		case 11323: goto st831;
		case 11530: goto tr2680;
		case 11579: goto tr2680;
		case 11786: goto tr2687;
		case 11835: goto tr2688;
		case 12298: goto tr2689;
		case 12347: goto st833;
		case 12554: goto tr2680;
		case 12603: goto tr2680;
		case 12810: goto tr2691;
		case 12859: goto tr2692;
	}
	if ( _widec < 3137 ) {
		if ( 3119 <= _widec && _widec <= 3129 )
			goto tr2694;
	} else if ( _widec > 3162 ) {
		if ( 3169 <= _widec && _widec <= 3194 )
			goto tr2694;
	} else
		goto tr2694;
	goto tr2693;
tr2683:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1206;
tr2738:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1206;
tr2783:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1206;
tr2827:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1206;
st1206:
	if ( ++p == pe )
		goto _test_eof1206;
case 1206:
#line 74774 "scanner.c"
	_widec = (*p);
	if ( (*p) < 43 ) {
		if ( (*p) < 32 ) {
			if ( (*p) > 9 ) {
				if ( 10 <= (*p) && (*p) <= 10 ) {
					_widec = (short)(3200 + ((*p) - -128));
					if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
					if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 512;
				}
			} else if ( (*p) >= 9 ) {
				_widec = (short)(2688 + ((*p) - -128));
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
			}
		} else if ( (*p) > 32 ) {
			if ( (*p) > 40 ) {
				if ( 41 <= (*p) && (*p) <= 41 ) {
					_widec = (short)(2688 + ((*p) - -128));
					if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
				}
			} else if ( (*p) >= 40 ) {
				_widec = (short)(2688 + ((*p) - -128));
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
			}
		} else {
			_widec = (short)(2688 + ((*p) - -128));
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
		}
	} else if ( (*p) > 43 ) {
		if ( (*p) < 59 ) {
			if ( (*p) > 47 ) {
				if ( 48 <= (*p) && (*p) <= 57 ) {
					_widec = (short)(2688 + ((*p) - -128));
					if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
				}
			} else if ( (*p) >= 47 ) {
				_widec = (short)(2688 + ((*p) - -128));
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
			}
		} else if ( (*p) > 59 ) {
			if ( (*p) > 90 ) {
				if ( 97 <= (*p) && (*p) <= 122 ) {
					_widec = (short)(2688 + ((*p) - -128));
					if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
				}
			} else if ( (*p) >= 65 ) {
				_widec = (short)(2688 + ((*p) - -128));
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
			}
		} else {
			_widec = (short)(3200 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 512;
		}
	} else {
		_widec = (short)(2688 + ((*p) - -128));
		if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
	}
	switch( _widec ) {
		case 3081: goto st827;
		case 3104: goto st827;
		case 3112: goto tr2672;
		case 3113: goto tr2673;
		case 3115: goto tr2694;
		case 4106: goto tr2681;
		case 4155: goto st829;
	}
	if ( _widec < 3137 ) {
		if ( 3119 <= _widec && _widec <= 3129 )
			goto tr2694;
	} else if ( _widec > 3162 ) {
		if ( 3169 <= _widec && _widec <= 3194 )
			goto tr2694;
	} else
		goto tr2694;
	goto tr2693;
tr2684:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1207;
tr2739:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1207;
tr2828:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1207;
tr2784:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1207;
st1207:
	if ( ++p == pe )
		goto _test_eof1207;
case 1207:
#line 74936 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(3200 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 512;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(3200 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 512;
		}
	} else {
		_widec = (short)(3200 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 512;
	}
	if ( _widec == 4106 )
		goto tr2696;
	if ( 3968 <= _widec && _widec <= 4223 )
		goto tr2695;
	goto tr2693;
tr2699:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st833;
tr2834:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
	goto st833;
tr2745:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
	goto st833;
tr2790:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
	goto st833;
st833:
	if ( ++p == pe )
		goto _test_eof833;
case 833:
#line 75022 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(6784 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 512;
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 1024;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(6784 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 512;
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 1024;
		}
	} else {
		_widec = (short)(6784 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 512;
		if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 1024;
	}
	switch( _widec ) {
		case 7690: goto tr2696;
		case 8202: goto tr2698;
		case 8714: goto tr2700;
	}
	if ( _widec < 8064 ) {
		if ( 7552 <= _widec && _widec <= 7807 )
			goto tr2695;
	} else if ( _widec > 8319 ) {
		if ( 8576 <= _widec && _widec <= 8831 )
			goto tr2699;
	} else
		goto tr2697;
	goto tr2693;
tr2691:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1208;
tr2746:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1208;
tr2791:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1208;
tr2835:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1208;
st1208:
	if ( ++p == pe )
		goto _test_eof1208;
case 1208:
#line 75152 "scanner.c"
	_widec = (*p);
	if ( (*p) < 43 ) {
		if ( (*p) < 32 ) {
			if ( (*p) > 9 ) {
				if ( 10 <= (*p) && (*p) <= 10 ) {
					_widec = (short)(8832 + ((*p) - -128));
					if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
					if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
					if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 1024;
					if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 2048;
				}
			} else if ( (*p) >= 9 ) {
				_widec = (short)(5760 + ((*p) - -128));
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
				if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
			}
		} else if ( (*p) > 32 ) {
			if ( (*p) > 40 ) {
				if ( 41 <= (*p) && (*p) <= 41 ) {
					_widec = (short)(5760 + ((*p) - -128));
					if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
					if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
				}
			} else if ( (*p) >= 40 ) {
				_widec = (short)(5760 + ((*p) - -128));
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
				if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
			}
		} else {
			_widec = (short)(5760 + ((*p) - -128));
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
		}
	} else if ( (*p) > 43 ) {
		if ( (*p) < 59 ) {
			if ( (*p) > 47 ) {
				if ( 48 <= (*p) && (*p) <= 57 ) {
					_widec = (short)(2688 + ((*p) - -128));
					if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
				}
			} else if ( (*p) >= 47 ) {
				_widec = (short)(2688 + ((*p) - -128));
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
			}
		} else if ( (*p) > 59 ) {
			if ( (*p) > 90 ) {
				if ( 97 <= (*p) && (*p) <= 122 ) {
					_widec = (short)(2688 + ((*p) - -128));
					if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
				}
			} else if ( (*p) >= 65 ) {
				_widec = (short)(2688 + ((*p) - -128));
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
			}
		} else {
			_widec = (short)(8832 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 1024;
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 2048;
		}
	} else {
		_widec = (short)(2688 + ((*p) - -128));
		if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
	}
	switch( _widec ) {
		case 3115: goto tr2694;
		case 6153: goto st827;
		case 6176: goto st827;
		case 6184: goto tr2672;
		case 6185: goto tr2673;
		case 6409: goto st830;
		case 6432: goto st830;
		case 6440: goto tr2675;
		case 6441: goto tr2676;
		case 6665: goto st832;
		case 6688: goto st832;
		case 6696: goto tr2678;
		case 6697: goto tr2679;
		case 9482: goto tr2680;
		case 9531: goto tr2680;
		case 9738: goto tr2680;
		case 9787: goto tr2680;
		case 10250: goto tr2681;
		case 10299: goto st829;
		case 10506: goto tr2680;
		case 10555: goto tr2680;
		case 10762: goto tr2683;
		case 10811: goto tr2684;
		case 11274: goto tr2685;
		case 11323: goto st831;
		case 11530: goto tr2680;
		case 11579: goto tr2680;
		case 11786: goto tr2687;
		case 11835: goto tr2688;
		case 12298: goto tr2689;
		case 12347: goto st833;
		case 12554: goto tr2680;
		case 12603: goto tr2680;
		case 12810: goto tr2691;
		case 12859: goto tr2692;
	}
	if ( _widec < 3137 ) {
		if ( 3119 <= _widec && _widec <= 3129 )
			goto tr2694;
	} else if ( _widec > 3162 ) {
		if ( 3169 <= _widec && _widec <= 3194 )
			goto tr2694;
	} else
		goto tr2694;
	goto tr2693;
tr2692:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1209;
tr2747:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1209;
tr2836:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1209;
tr2792:
#line 865 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET6, (char *)s->buffer, &addr6) <= 0) {
			WARN(ZS_BAD_IPV6);
			p--; {goto st269;}
		}
	}
#line 873 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr6.s6_addr), INET6_ADDR_LENGTH);
		rdata_tail += INET6_ADDR_LENGTH;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1209;
st1209:
	if ( ++p == pe )
		goto _test_eof1209;
case 1209:
#line 75366 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(6784 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 512;
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 1024;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(6784 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 512;
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 1024;
		}
	} else {
		_widec = (short)(6784 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 512;
		if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 1024;
	}
	switch( _widec ) {
		case 7690: goto tr2696;
		case 8202: goto tr2698;
		case 8714: goto tr2700;
	}
	if ( _widec < 8064 ) {
		if ( 7552 <= _widec && _widec <= 7807 )
			goto tr2695;
	} else if ( _widec > 8319 ) {
		if ( 8576 <= _widec && _widec <= 8831 )
			goto tr2699;
	} else
		goto tr2697;
	goto tr2693;
tr2701:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st834;
tr2663:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st834;
st834:
	if ( ++p == pe )
		goto _test_eof834;
case 834:
#line 75444 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2702;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2701;
	goto tr2641;
tr2703:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st835;
st835:
	if ( ++p == pe )
		goto _test_eof835;
case 835:
#line 75483 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2704;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2703;
	goto tr2641;
tr2646:
#line 1162 "scanner_body.rl"
	{
		*(rdata_tail++) = 1;
	}
	goto st836;
st836:
	if ( ++p == pe )
		goto _test_eof836;
case 836:
#line 75520 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st837;
		case 32: goto st837;
		case 40: goto tr2706;
		case 41: goto tr2707;
		case 1034: goto tr2708;
		case 1083: goto st842;
	}
	goto tr2641;
tr2706:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st837;
tr2707:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st837;
tr2708:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st837;
tr2751:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st837;
st837:
	if ( ++p == pe )
		goto _test_eof837;
case 837:
#line 75584 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st837;
		case 32: goto st837;
		case 40: goto tr2706;
		case 41: goto tr2707;
		case 1034: goto tr2708;
		case 1083: goto st842;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2710;
	goto tr2656;
tr2710:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st838;
tr2714:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st838;
st838:
	if ( ++p == pe )
		goto _test_eof838;
case 838:
#line 75652 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2711;
		case 32: goto tr2711;
		case 40: goto tr2712;
		case 41: goto tr2713;
		case 1034: goto tr2715;
		case 1083: goto tr2716;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2714;
	goto tr2656;
tr2719:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st839;
tr2720:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st839;
tr2722:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st839;
tr2749:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st839;
tr2711:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st839;
tr2712:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st839;
tr2713:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st839;
tr2715:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st839;
st839:
	if ( ++p == pe )
		goto _test_eof839;
case 839:
#line 75786 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st839;
		case 32: goto st839;
		case 40: goto tr2719;
		case 41: goto tr2720;
		case 46: goto tr2721;
		case 1034: goto tr2722;
		case 1083: goto st841;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2721;
	goto tr2717;
tr2721:
#line 835 "scanner_body.rl"
	{
		s->buffer_length = 0;
	}
#line 838 "scanner_body.rl"
	{
		if (s->buffer_length < MAX_RDATA_LENGTH) {
			s->buffer[s->buffer_length++] = (*p);
		}
		else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st840;
tr2725:
#line 838 "scanner_body.rl"
	{
		if (s->buffer_length < MAX_RDATA_LENGTH) {
			s->buffer[s->buffer_length++] = (*p);
		}
		else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st840;
st840:
	if ( ++p == pe )
		goto _test_eof840;
case 840:
#line 75845 "scanner.c"
	_widec = (*p);
	if ( (*p) < 32 ) {
		if ( (*p) > 9 ) {
			if ( 10 <= (*p) && (*p) <= 10 ) {
				_widec = (short)(8832 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
				if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 1024;
				if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 2048;
			}
		} else if ( (*p) >= 9 ) {
			_widec = (short)(5760 + ((*p) - -128));
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
		}
	} else if ( (*p) > 32 ) {
		if ( (*p) < 41 ) {
			if ( 40 <= (*p) && (*p) <= 40 ) {
				_widec = (short)(5760 + ((*p) - -128));
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
				if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
			}
		} else if ( (*p) > 41 ) {
			if ( 59 <= (*p) && (*p) <= 59 ) {
				_widec = (short)(8832 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
				if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 1024;
				if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 2048;
			}
		} else {
			_widec = (short)(5760 + ((*p) - -128));
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
		}
	} else {
		_widec = (short)(5760 + ((*p) - -128));
		if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
		if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
	}
	switch( _widec ) {
		case 46: goto tr2725;
		case 6153: goto tr2726;
		case 6176: goto tr2726;
		case 6184: goto tr2727;
		case 6185: goto tr2728;
		case 6409: goto tr2729;
		case 6432: goto tr2729;
		case 6440: goto tr2730;
		case 6441: goto tr2731;
		case 6665: goto tr2732;
		case 6688: goto tr2732;
		case 6696: goto tr2733;
		case 6697: goto tr2734;
		case 9482: goto tr2735;
		case 9531: goto tr2735;
		case 9738: goto tr2735;
		case 9787: goto tr2735;
		case 10250: goto tr2736;
		case 10299: goto tr2737;
		case 10506: goto tr2735;
		case 10555: goto tr2735;
		case 10762: goto tr2738;
		case 10811: goto tr2739;
		case 11274: goto tr2740;
		case 11323: goto tr2741;
		case 11530: goto tr2735;
		case 11579: goto tr2735;
		case 11786: goto tr2742;
		case 11835: goto tr2743;
		case 12298: goto tr2744;
		case 12347: goto tr2745;
		case 12554: goto tr2735;
		case 12603: goto tr2735;
		case 12810: goto tr2746;
		case 12859: goto tr2747;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2725;
	goto tr2724;
tr2748:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st841;
tr2716:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st841;
st841:
	if ( ++p == pe )
		goto _test_eof841;
case 841:
#line 75982 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2749;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2748;
	goto tr2641;
tr2750:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st842;
st842:
	if ( ++p == pe )
		goto _test_eof842;
case 842:
#line 76021 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2751;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2750;
	goto tr2641;
tr2647:
#line 1165 "scanner_body.rl"
	{
		*(rdata_tail++) = 2;
	}
	goto st843;
st843:
	if ( ++p == pe )
		goto _test_eof843;
case 843:
#line 76058 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st844;
		case 32: goto st844;
		case 40: goto tr2753;
		case 41: goto tr2754;
		case 1034: goto tr2755;
		case 1083: goto st849;
	}
	goto tr2641;
tr2753:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st844;
tr2754:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st844;
tr2755:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st844;
tr2796:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st844;
st844:
	if ( ++p == pe )
		goto _test_eof844;
case 844:
#line 76122 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st844;
		case 32: goto st844;
		case 40: goto tr2753;
		case 41: goto tr2754;
		case 1034: goto tr2755;
		case 1083: goto st849;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2757;
	goto tr2656;
tr2757:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st845;
tr2761:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st845;
st845:
	if ( ++p == pe )
		goto _test_eof845;
case 845:
#line 76190 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2758;
		case 32: goto tr2758;
		case 40: goto tr2759;
		case 41: goto tr2760;
		case 1034: goto tr2762;
		case 1083: goto tr2763;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2761;
	goto tr2656;
tr2765:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st846;
tr2766:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st846;
tr2768:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st846;
tr2794:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st846;
tr2758:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st846;
tr2759:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st846;
tr2760:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st846;
tr2762:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st846;
st846:
	if ( ++p == pe )
		goto _test_eof846;
case 846:
#line 76324 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st846;
		case 32: goto st846;
		case 40: goto tr2765;
		case 41: goto tr2766;
		case 46: goto tr2767;
		case 1034: goto tr2768;
		case 1083: goto st848;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 58 )
			goto tr2767;
	} else if ( _widec > 70 ) {
		if ( 97 <= _widec && _widec <= 102 )
			goto tr2767;
	} else
		goto tr2767;
	goto tr2717;
tr2767:
#line 835 "scanner_body.rl"
	{
		s->buffer_length = 0;
	}
#line 838 "scanner_body.rl"
	{
		if (s->buffer_length < MAX_RDATA_LENGTH) {
			s->buffer[s->buffer_length++] = (*p);
		}
		else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st847;
tr2770:
#line 838 "scanner_body.rl"
	{
		if (s->buffer_length < MAX_RDATA_LENGTH) {
			s->buffer[s->buffer_length++] = (*p);
		}
		else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st847;
st847:
	if ( ++p == pe )
		goto _test_eof847;
case 847:
#line 76389 "scanner.c"
	_widec = (*p);
	if ( (*p) < 32 ) {
		if ( (*p) > 9 ) {
			if ( 10 <= (*p) && (*p) <= 10 ) {
				_widec = (short)(8832 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
				if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 1024;
				if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 2048;
			}
		} else if ( (*p) >= 9 ) {
			_widec = (short)(5760 + ((*p) - -128));
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
		}
	} else if ( (*p) > 32 ) {
		if ( (*p) < 41 ) {
			if ( 40 <= (*p) && (*p) <= 40 ) {
				_widec = (short)(5760 + ((*p) - -128));
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
				if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
			}
		} else if ( (*p) > 41 ) {
			if ( 59 <= (*p) && (*p) <= 59 ) {
				_widec = (short)(8832 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
				if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 1024;
				if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 2048;
			}
		} else {
			_widec = (short)(5760 + ((*p) - -128));
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
		}
	} else {
		_widec = (short)(5760 + ((*p) - -128));
		if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
		if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
	}
	switch( _widec ) {
		case 46: goto tr2770;
		case 6153: goto tr2771;
		case 6176: goto tr2771;
		case 6184: goto tr2772;
		case 6185: goto tr2773;
		case 6409: goto tr2774;
		case 6432: goto tr2774;
		case 6440: goto tr2775;
		case 6441: goto tr2776;
		case 6665: goto tr2777;
		case 6688: goto tr2777;
		case 6696: goto tr2778;
		case 6697: goto tr2779;
		case 9482: goto tr2780;
		case 9531: goto tr2780;
		case 9738: goto tr2780;
		case 9787: goto tr2780;
		case 10250: goto tr2781;
		case 10299: goto tr2782;
		case 10506: goto tr2780;
		case 10555: goto tr2780;
		case 10762: goto tr2783;
		case 10811: goto tr2784;
		case 11274: goto tr2785;
		case 11323: goto tr2786;
		case 11530: goto tr2780;
		case 11579: goto tr2780;
		case 11786: goto tr2787;
		case 11835: goto tr2788;
		case 12298: goto tr2789;
		case 12347: goto tr2790;
		case 12554: goto tr2780;
		case 12603: goto tr2780;
		case 12810: goto tr2791;
		case 12859: goto tr2792;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 58 )
			goto tr2770;
	} else if ( _widec > 70 ) {
		if ( 97 <= _widec && _widec <= 102 )
			goto tr2770;
	} else
		goto tr2770;
	goto tr2724;
tr2793:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st848;
tr2763:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st848;
st848:
	if ( ++p == pe )
		goto _test_eof848;
case 848:
#line 76532 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2794;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2793;
	goto tr2641;
tr2795:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st849;
st849:
	if ( ++p == pe )
		goto _test_eof849;
case 849:
#line 76571 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2796;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2795;
	goto tr2641;
tr2648:
#line 1168 "scanner_body.rl"
	{
		*(rdata_tail++) = 3;
	}
	goto st850;
st850:
	if ( ++p == pe )
		goto _test_eof850;
case 850:
#line 76608 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st851;
		case 32: goto st851;
		case 40: goto tr2798;
		case 41: goto tr2799;
		case 1034: goto tr2800;
		case 1083: goto st856;
	}
	goto tr2641;
tr2798:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st851;
tr2799:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st851;
tr2800:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st851;
tr2840:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st851;
st851:
	if ( ++p == pe )
		goto _test_eof851;
case 851:
#line 76672 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st851;
		case 32: goto st851;
		case 40: goto tr2798;
		case 41: goto tr2799;
		case 1034: goto tr2800;
		case 1083: goto st856;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2802;
	goto tr2656;
tr2802:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st852;
tr2806:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st852;
st852:
	if ( ++p == pe )
		goto _test_eof852;
case 852:
#line 76740 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2803;
		case 32: goto tr2803;
		case 40: goto tr2804;
		case 41: goto tr2805;
		case 1034: goto tr2807;
		case 1083: goto tr2808;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2806;
	goto tr2656;
tr2810:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st853;
tr2811:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st853;
tr2813:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st853;
tr2838:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st853;
tr2803:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st853;
tr2804:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st853;
tr2805:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st853;
tr2807:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st853;
st853:
	if ( ++p == pe )
		goto _test_eof853;
case 853:
#line 76874 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st853;
		case 32: goto st853;
		case 40: goto tr2810;
		case 41: goto tr2811;
		case 42: goto tr2812;
		case 92: goto tr2812;
		case 95: goto tr2812;
		case 1034: goto tr2813;
		case 1083: goto st855;
	}
	if ( _widec < 64 ) {
		if ( 45 <= _widec && _widec <= 57 )
			goto tr2812;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr2812;
	} else
		goto tr2812;
	goto tr2641;
tr2812:
#line 288 "scanner_body.rl"
	{
		s->dname = rdata_tail;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 854;goto st271;} }
	goto st854;
st854:
	if ( ++p == pe )
		goto _test_eof854;
case 854:
#line 76921 "scanner.c"
	_widec = (*p);
	if ( (*p) < 32 ) {
		if ( (*p) > 9 ) {
			if ( 10 <= (*p) && (*p) <= 10 ) {
				_widec = (short)(8832 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
				if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 1024;
				if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 2048;
			}
		} else if ( (*p) >= 9 ) {
			_widec = (short)(5760 + ((*p) - -128));
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
		}
	} else if ( (*p) > 32 ) {
		if ( (*p) < 41 ) {
			if ( 40 <= (*p) && (*p) <= 40 ) {
				_widec = (short)(5760 + ((*p) - -128));
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
				if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
			}
		} else if ( (*p) > 41 ) {
			if ( 59 <= (*p) && (*p) <= 59 ) {
				_widec = (short)(8832 + ((*p) - -128));
				if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
				if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
				if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 1024;
				if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 2048;
			}
		} else {
			_widec = (short)(5760 + ((*p) - -128));
			if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
			if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
		}
	} else {
		_widec = (short)(5760 + ((*p) - -128));
		if ( 
#line 1269 "scanner_body.rl"
 s->number64 != 0  ) _widec += 256;
		if ( 
#line 1270 "scanner_body.rl"
 s->number64 == 0  ) _widec += 512;
	}
	switch( _widec ) {
		case 6153: goto tr2815;
		case 6176: goto tr2815;
		case 6184: goto tr2816;
		case 6185: goto tr2817;
		case 6409: goto tr2818;
		case 6432: goto tr2818;
		case 6440: goto tr2819;
		case 6441: goto tr2820;
		case 6665: goto tr2821;
		case 6688: goto tr2821;
		case 6696: goto tr2822;
		case 6697: goto tr2823;
		case 9482: goto tr2824;
		case 9531: goto tr2824;
		case 9738: goto tr2824;
		case 9787: goto tr2824;
		case 10250: goto tr2825;
		case 10299: goto tr2826;
		case 10506: goto tr2824;
		case 10555: goto tr2824;
		case 10762: goto tr2827;
		case 10811: goto tr2828;
		case 11274: goto tr2829;
		case 11323: goto tr2830;
		case 11530: goto tr2824;
		case 11579: goto tr2824;
		case 11786: goto tr2831;
		case 11835: goto tr2832;
		case 12298: goto tr2833;
		case 12347: goto tr2834;
		case 12554: goto tr2824;
		case 12603: goto tr2824;
		case 12810: goto tr2835;
		case 12859: goto tr2836;
	}
	goto tr2670;
tr2837:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st855;
tr2808:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st855;
st855:
	if ( ++p == pe )
		goto _test_eof855;
case 855:
#line 77055 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2838;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2837;
	goto tr2641;
tr2839:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st856;
st856:
	if ( ++p == pe )
		goto _test_eof856;
case 856:
#line 77094 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2840;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2839;
	goto tr2641;
tr2841:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st857;
tr2640:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st857;
st857:
	if ( ++p == pe )
		goto _test_eof857;
case 857:
#line 77145 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2842;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2841;
	goto tr71;
st858:
	if ( ++p == pe )
		goto _test_eof858;
case 858:
	switch( (*p) ) {
		case 65: goto st859;
		case 67: goto st893;
		case 68: goto st910;
		case 69: goto st924;
		case 72: goto st931;
		case 73: goto st936;
		case 75: goto st944;
		case 76: goto st948;
		case 77: goto st957;
		case 78: goto st963;
		case 80: goto st979;
		case 82: goto st982;
		case 83: goto st989;
		case 84: goto st1000;
		case 85: goto st1010;
		case 97: goto st859;
		case 99: goto st893;
		case 100: goto st910;
		case 101: goto st924;
		case 104: goto st931;
		case 105: goto st936;
		case 107: goto st944;
		case 108: goto st948;
		case 109: goto st957;
		case 110: goto st963;
		case 112: goto st979;
		case 114: goto st982;
		case 115: goto st989;
		case 116: goto st1000;
		case 117: goto st1010;
	}
	goto tr2843;
st859:
	if ( ++p == pe )
		goto _test_eof859;
case 859:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2859;
		case 32: goto tr2859;
		case 40: goto tr2860;
		case 41: goto tr2861;
		case 65: goto st884;
		case 70: goto st887;
		case 80: goto st891;
		case 97: goto st884;
		case 102: goto st887;
		case 112: goto st891;
		case 1034: goto tr2865;
		case 1083: goto tr2866;
	}
	goto tr2843;
tr2868:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr2869:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr2871:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr2967:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3284:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st860;
tr3285:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3286:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3288:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr2859:
#line 1282 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_A, &rdata_tail); }
	goto st860;
tr2860:
#line 1282 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_A, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr2861:
#line 1282 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_A, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr2865:
#line 1282 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_A, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr2970:
#line 1295 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_AAAA, &rdata_tail); }
	goto st860;
tr2971:
#line 1295 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_AAAA, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr2972:
#line 1295 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_AAAA, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr2973:
#line 1295 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_AAAA, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr2978:
#line 1292 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_AFSDB, &rdata_tail); }
	goto st860;
tr2979:
#line 1292 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_AFSDB, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr2980:
#line 1292 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_AFSDB, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr2981:
#line 1292 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_AFSDB, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr2984:
#line 1302 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_APL, &rdata_tail); }
	goto st860;
tr2985:
#line 1302 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_APL, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr2986:
#line 1302 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_APL, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr2987:
#line 1302 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_APL, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr2994:
#line 1323 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CAA, &rdata_tail); }
	goto st860;
tr2995:
#line 1323 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CAA, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr2996:
#line 1323 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CAA, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr2997:
#line 1323 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CAA, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3005:
#line 1314 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CDNSKEY, &rdata_tail); }
	goto st860;
tr3006:
#line 1314 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CDNSKEY, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3007:
#line 1314 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CDNSKEY, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3008:
#line 1314 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CDNSKEY, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3010:
#line 1313 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CDS, &rdata_tail); }
	goto st860;
tr3011:
#line 1313 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CDS, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3012:
#line 1313 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CDS, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3013:
#line 1313 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CDS, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3017:
#line 1300 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CERT, &rdata_tail); }
	goto st860;
tr3018:
#line 1300 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CERT, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3019:
#line 1300 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CERT, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3020:
#line 1300 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CERT, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3025:
#line 1284 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CNAME, &rdata_tail); }
	goto st860;
tr3026:
#line 1284 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CNAME, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3027:
#line 1284 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CNAME, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3028:
#line 1284 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CNAME, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3036:
#line 1309 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DHCID, &rdata_tail); }
	goto st860;
tr3037:
#line 1309 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DHCID, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3038:
#line 1309 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DHCID, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3039:
#line 1309 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DHCID, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3045:
#line 1301 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DNAME, &rdata_tail); }
	goto st860;
tr3046:
#line 1301 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DNAME, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3047:
#line 1301 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DNAME, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3048:
#line 1301 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DNAME, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3053:
#line 1308 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DNSKEY, &rdata_tail); }
	goto st860;
tr3054:
#line 1308 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DNSKEY, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3055:
#line 1308 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DNSKEY, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3056:
#line 1308 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DNSKEY, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3058:
#line 1303 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DS, &rdata_tail); }
	goto st860;
tr3059:
#line 1303 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DS, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3060:
#line 1303 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DS, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3061:
#line 1303 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DS, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3068:
#line 1320 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_EUI48, &rdata_tail); }
	goto st860;
tr3069:
#line 1320 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_EUI48, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3070:
#line 1320 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_EUI48, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3071:
#line 1320 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_EUI48, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3074:
#line 1321 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_EUI64, &rdata_tail); }
	goto st860;
tr3075:
#line 1321 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_EUI64, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3076:
#line 1321 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_EUI64, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3077:
#line 1321 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_EUI64, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3083:
#line 1287 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_HINFO, &rdata_tail); }
	goto st860;
tr3084:
#line 1287 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_HINFO, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3085:
#line 1287 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_HINFO, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3086:
#line 1287 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_HINFO, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3095:
#line 1305 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_IPSECKEY, &rdata_tail); }
	goto st860;
tr3096:
#line 1305 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_IPSECKEY, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3097:
#line 1305 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_IPSECKEY, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3098:
#line 1305 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_IPSECKEY, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3103:
#line 1294 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_KEY, &rdata_tail); }
	goto st860;
tr3104:
#line 1294 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_KEY, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3105:
#line 1294 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_KEY, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3106:
#line 1294 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_KEY, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3108:
#line 1299 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_KX, &rdata_tail); }
	goto st860;
tr3109:
#line 1299 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_KX, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3110:
#line 1299 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_KX, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3111:
#line 1299 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_KX, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3119:
#line 1317 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_L32, &rdata_tail); }
	goto st860;
tr3120:
#line 1317 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_L32, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3121:
#line 1317 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_L32, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3122:
#line 1317 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_L32, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3125:
#line 1318 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_L64, &rdata_tail); }
	goto st860;
tr3126:
#line 1318 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_L64, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3127:
#line 1318 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_L64, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3128:
#line 1318 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_L64, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3130:
#line 1324 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_LB, &rdata_tail); }
	goto st860;
tr3131:
#line 1324 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_LB, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3132:
#line 1324 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_LB, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3133:
#line 1324 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_LB, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3136:
#line 1296 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_LOC, &rdata_tail); }
	goto st860;
tr3137:
#line 1296 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_LOC, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3138:
#line 1296 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_LOC, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3139:
#line 1296 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_LOC, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3141:
#line 1319 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_LP, &rdata_tail); }
	goto st860;
tr3142:
#line 1319 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_LP, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3143:
#line 1319 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_LP, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3144:
#line 1319 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_LP, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3151:
#line 1288 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_MINFO, &rdata_tail); }
	goto st860;
tr3152:
#line 1288 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_MINFO, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3153:
#line 1288 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_MINFO, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3154:
#line 1288 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_MINFO, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3156:
#line 1289 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_MX, &rdata_tail); }
	goto st860;
tr3157:
#line 1289 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_MX, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3158:
#line 1289 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_MX, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3159:
#line 1289 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_MX, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3167:
#line 1298 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NAPTR, &rdata_tail); }
	goto st860;
tr3168:
#line 1298 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NAPTR, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3169:
#line 1298 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NAPTR, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3170:
#line 1298 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NAPTR, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3173:
#line 1316 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NID, &rdata_tail); }
	goto st860;
tr3174:
#line 1316 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NID, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3175:
#line 1316 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NID, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3176:
#line 1316 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NID, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3178:
#line 1283 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NS, &rdata_tail); }
	goto st860;
tr3179:
#line 1283 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NS, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3180:
#line 1283 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NS, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3182:
#line 1283 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NS, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3185:
#line 1307 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NSEC, &rdata_tail); }
	goto st860;
tr3186:
#line 1307 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NSEC, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3187:
#line 1307 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NSEC, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3189:
#line 1307 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NSEC, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3191:
#line 1310 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NSEC3, &rdata_tail); }
	goto st860;
tr3192:
#line 1310 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NSEC3, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3193:
#line 1310 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NSEC3, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3195:
#line 1310 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NSEC3, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3201:
#line 1311 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NSEC3PARAM, &rdata_tail); }
	goto st860;
tr3202:
#line 1311 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NSEC3PARAM, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3203:
#line 1311 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NSEC3PARAM, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3204:
#line 1311 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NSEC3PARAM, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3208:
#line 1286 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_PTR, &rdata_tail); }
	goto st860;
tr3209:
#line 1286 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_PTR, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3210:
#line 1286 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_PTR, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3211:
#line 1286 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_PTR, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3216:
#line 1291 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_RP, &rdata_tail); }
	goto st860;
tr3217:
#line 1291 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_RP, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3218:
#line 1291 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_RP, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3219:
#line 1291 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_RP, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3224:
#line 1306 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_RRSIG, &rdata_tail); }
	goto st860;
tr3225:
#line 1306 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_RRSIG, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3226:
#line 1306 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_RRSIG, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3227:
#line 1306 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_RRSIG, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3229:
#line 1293 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_RT, &rdata_tail); }
	goto st860;
tr3230:
#line 1293 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_RT, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3231:
#line 1293 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_RT, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3232:
#line 1293 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_RT, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3239:
#line 1285 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SOA, &rdata_tail); }
	goto st860;
tr3240:
#line 1285 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SOA, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3241:
#line 1285 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SOA, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3242:
#line 1285 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SOA, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3245:
#line 1315 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SPF, &rdata_tail); }
	goto st860;
tr3246:
#line 1315 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SPF, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3247:
#line 1315 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SPF, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3248:
#line 1315 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SPF, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3251:
#line 1297 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SRV, &rdata_tail); }
	goto st860;
tr3252:
#line 1297 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SRV, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3253:
#line 1297 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SRV, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3254:
#line 1297 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SRV, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3259:
#line 1304 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SSHFP, &rdata_tail); }
	goto st860;
tr3260:
#line 1304 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SSHFP, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3261:
#line 1304 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SSHFP, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3262:
#line 1304 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SSHFP, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3269:
#line 1312 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_TLSA, &rdata_tail); }
	goto st860;
tr3270:
#line 1312 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_TLSA, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3271:
#line 1312 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_TLSA, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3272:
#line 1312 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_TLSA, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3275:
#line 1290 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_TXT, &rdata_tail); }
	goto st860;
tr3276:
#line 1290 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_TXT, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3277:
#line 1290 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_TXT, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3278:
#line 1290 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_TXT, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
tr3292:
#line 1322 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_URI, &rdata_tail); }
	goto st860;
tr3293:
#line 1322 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_URI, &rdata_tail); }
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st860;
tr3294:
#line 1322 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_URI, &rdata_tail); }
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st860;
tr3295:
#line 1322 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_URI, &rdata_tail); }
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st860;
st860:
	if ( ++p == pe )
		goto _test_eof860;
case 860:
#line 78902 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st860;
		case 32: goto st860;
		case 40: goto tr2868;
		case 41: goto tr2869;
		case 1034: goto tr2871;
		case 1083: goto st883;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr2870;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr2870;
	} else
		goto tr2870;
	goto tr71;
tr2870:
#line 1686 "scanner_body.rl"
	{ p--; {stack[top++] = 861;goto st489;} }
	goto st861;
st861:
	if ( ++p == pe )
		goto _test_eof861;
case 861:
#line 78942 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st862;
		case 32: goto st862;
		case 40: goto tr2874;
		case 41: goto tr2875;
		case 1034: goto tr2876;
		case 1083: goto st882;
	}
	goto tr71;
tr2874:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st862;
tr2875:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st862;
tr2876:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st862;
tr2965:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st862;
st862:
	if ( ++p == pe )
		goto _test_eof862;
case 862:
#line 79006 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st862;
		case 32: goto st862;
		case 40: goto tr2874;
		case 41: goto tr2875;
		case 1034: goto tr2876;
		case 1083: goto st882;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2878;
	goto tr1899;
tr2878:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st863;
tr2882:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st863;
st863:
	if ( ++p == pe )
		goto _test_eof863;
case 863:
#line 79074 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2879;
		case 32: goto tr2879;
		case 40: goto tr2880;
		case 41: goto tr2881;
		case 1034: goto tr2883;
		case 1083: goto tr2884;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2882;
	goto tr1899;
tr2886:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st864;
tr2887:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st864;
tr2889:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st864;
tr2963:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st864;
tr2879:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st864;
tr2880:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st864;
tr2881:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st864;
tr2883:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st864;
st864:
	if ( ++p == pe )
		goto _test_eof864;
case 864:
#line 79208 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st864;
		case 32: goto st864;
		case 40: goto tr2886;
		case 41: goto tr2887;
		case 1034: goto tr2889;
		case 1083: goto st881;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2888;
	goto tr1899;
tr2888:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st865;
tr2894:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st865;
st865:
	if ( ++p == pe )
		goto _test_eof865;
case 865:
#line 79276 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2891;
		case 32: goto tr2891;
		case 40: goto tr2892;
		case 41: goto tr2893;
		case 1034: goto tr2895;
		case 1083: goto tr2896;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2894;
	goto tr1899;
tr2899:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st866;
tr2900:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st866;
tr2902:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st866;
tr2961:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st866;
tr2891:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st866;
tr2892:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st866;
tr2893:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st866;
tr2895:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st866;
st866:
	if ( ++p == pe )
		goto _test_eof866;
case 866:
#line 79414 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st866;
		case 32: goto st866;
		case 40: goto tr2899;
		case 41: goto tr2900;
		case 1034: goto tr2902;
		case 1083: goto st880;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2901;
	goto tr2897;
tr2901:
#line 481 "scanner_body.rl"
	{
		s->buffer_length = 0;
	}
#line 484 "scanner_body.rl"
	{
		if (s->buffer_length < MAX_RDATA_LENGTH) {
			s->buffer[s->buffer_length++] = (*p);
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st867;
tr2907:
#line 484 "scanner_body.rl"
	{
		if (s->buffer_length < MAX_RDATA_LENGTH) {
			s->buffer[s->buffer_length++] = (*p);
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st867;
st867:
	if ( ++p == pe )
		goto _test_eof867;
case 867:
#line 79470 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2904;
		case 32: goto tr2904;
		case 40: goto tr2905;
		case 41: goto tr2906;
		case 1034: goto tr2908;
		case 1083: goto tr2909;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2907;
	goto tr2897;
tr2911:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st868;
tr2912:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st868;
tr2914:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st868;
tr2959:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st868;
tr2904:
#line 492 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (s->buffer_length == 14) { // Date; 14 = len("YYYYMMDDHHmmSS").
			ret = date_to_timestamp(s->buffer, &timestamp);

			if (ret == ZS_OK) {
				*((uint32_t *)rdata_tail) = htonl(timestamp);
				rdata_tail += 4;
			} else {
				WARN(ret);
				p--; {goto st269;}
			}
		} else if (s->buffer_length <= 10) { // Timestamp format.
			char *end;

			s->number64 = strtoull((char *)(s->buffer), &end,  10);

			if (end == (char *)(s->buffer) || *end != '\0') {
				WARN(ZS_BAD_TIMESTAMP);
				p--; {goto st269;}
			}

			if (s->number64 <= UINT32_MAX) {
				*((uint32_t *)rdata_tail) = htonl((uint32_t)s->number64);
				rdata_tail += 4;
			} else {
				WARN(ZS_NUMBER32_OVERFLOW);
				p--; {goto st269;}
			}
		} else {
			WARN(ZS_BAD_TIMESTAMP_LENGTH);
			p--; {goto st269;}
		}
	}
	goto st868;
tr2905:
#line 492 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (s->buffer_length == 14) { // Date; 14 = len("YYYYMMDDHHmmSS").
			ret = date_to_timestamp(s->buffer, &timestamp);

			if (ret == ZS_OK) {
				*((uint32_t *)rdata_tail) = htonl(timestamp);
				rdata_tail += 4;
			} else {
				WARN(ret);
				p--; {goto st269;}
			}
		} else if (s->buffer_length <= 10) { // Timestamp format.
			char *end;

			s->number64 = strtoull((char *)(s->buffer), &end,  10);

			if (end == (char *)(s->buffer) || *end != '\0') {
				WARN(ZS_BAD_TIMESTAMP);
				p--; {goto st269;}
			}

			if (s->number64 <= UINT32_MAX) {
				*((uint32_t *)rdata_tail) = htonl((uint32_t)s->number64);
				rdata_tail += 4;
			} else {
				WARN(ZS_NUMBER32_OVERFLOW);
				p--; {goto st269;}
			}
		} else {
			WARN(ZS_BAD_TIMESTAMP_LENGTH);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st868;
tr2906:
#line 492 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (s->buffer_length == 14) { // Date; 14 = len("YYYYMMDDHHmmSS").
			ret = date_to_timestamp(s->buffer, &timestamp);

			if (ret == ZS_OK) {
				*((uint32_t *)rdata_tail) = htonl(timestamp);
				rdata_tail += 4;
			} else {
				WARN(ret);
				p--; {goto st269;}
			}
		} else if (s->buffer_length <= 10) { // Timestamp format.
			char *end;

			s->number64 = strtoull((char *)(s->buffer), &end,  10);

			if (end == (char *)(s->buffer) || *end != '\0') {
				WARN(ZS_BAD_TIMESTAMP);
				p--; {goto st269;}
			}

			if (s->number64 <= UINT32_MAX) {
				*((uint32_t *)rdata_tail) = htonl((uint32_t)s->number64);
				rdata_tail += 4;
			} else {
				WARN(ZS_NUMBER32_OVERFLOW);
				p--; {goto st269;}
			}
		} else {
			WARN(ZS_BAD_TIMESTAMP_LENGTH);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st868;
tr2908:
#line 492 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (s->buffer_length == 14) { // Date; 14 = len("YYYYMMDDHHmmSS").
			ret = date_to_timestamp(s->buffer, &timestamp);

			if (ret == ZS_OK) {
				*((uint32_t *)rdata_tail) = htonl(timestamp);
				rdata_tail += 4;
			} else {
				WARN(ret);
				p--; {goto st269;}
			}
		} else if (s->buffer_length <= 10) { // Timestamp format.
			char *end;

			s->number64 = strtoull((char *)(s->buffer), &end,  10);

			if (end == (char *)(s->buffer) || *end != '\0') {
				WARN(ZS_BAD_TIMESTAMP);
				p--; {goto st269;}
			}

			if (s->number64 <= UINT32_MAX) {
				*((uint32_t *)rdata_tail) = htonl((uint32_t)s->number64);
				rdata_tail += 4;
			} else {
				WARN(ZS_NUMBER32_OVERFLOW);
				p--; {goto st269;}
			}
		} else {
			WARN(ZS_BAD_TIMESTAMP_LENGTH);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st868;
st868:
	if ( ++p == pe )
		goto _test_eof868;
case 868:
#line 79708 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st868;
		case 32: goto st868;
		case 40: goto tr2911;
		case 41: goto tr2912;
		case 1034: goto tr2914;
		case 1083: goto st879;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2913;
	goto tr2897;
tr2913:
#line 481 "scanner_body.rl"
	{
		s->buffer_length = 0;
	}
#line 484 "scanner_body.rl"
	{
		if (s->buffer_length < MAX_RDATA_LENGTH) {
			s->buffer[s->buffer_length++] = (*p);
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st869;
tr2919:
#line 484 "scanner_body.rl"
	{
		if (s->buffer_length < MAX_RDATA_LENGTH) {
			s->buffer[s->buffer_length++] = (*p);
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st869;
st869:
	if ( ++p == pe )
		goto _test_eof869;
case 869:
#line 79764 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2916;
		case 32: goto tr2916;
		case 40: goto tr2917;
		case 41: goto tr2918;
		case 1034: goto tr2920;
		case 1083: goto tr2921;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2919;
	goto tr2897;
tr2923:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st870;
tr2924:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st870;
tr2926:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st870;
tr2957:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st870;
tr2916:
#line 492 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (s->buffer_length == 14) { // Date; 14 = len("YYYYMMDDHHmmSS").
			ret = date_to_timestamp(s->buffer, &timestamp);

			if (ret == ZS_OK) {
				*((uint32_t *)rdata_tail) = htonl(timestamp);
				rdata_tail += 4;
			} else {
				WARN(ret);
				p--; {goto st269;}
			}
		} else if (s->buffer_length <= 10) { // Timestamp format.
			char *end;

			s->number64 = strtoull((char *)(s->buffer), &end,  10);

			if (end == (char *)(s->buffer) || *end != '\0') {
				WARN(ZS_BAD_TIMESTAMP);
				p--; {goto st269;}
			}

			if (s->number64 <= UINT32_MAX) {
				*((uint32_t *)rdata_tail) = htonl((uint32_t)s->number64);
				rdata_tail += 4;
			} else {
				WARN(ZS_NUMBER32_OVERFLOW);
				p--; {goto st269;}
			}
		} else {
			WARN(ZS_BAD_TIMESTAMP_LENGTH);
			p--; {goto st269;}
		}
	}
	goto st870;
tr2917:
#line 492 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (s->buffer_length == 14) { // Date; 14 = len("YYYYMMDDHHmmSS").
			ret = date_to_timestamp(s->buffer, &timestamp);

			if (ret == ZS_OK) {
				*((uint32_t *)rdata_tail) = htonl(timestamp);
				rdata_tail += 4;
			} else {
				WARN(ret);
				p--; {goto st269;}
			}
		} else if (s->buffer_length <= 10) { // Timestamp format.
			char *end;

			s->number64 = strtoull((char *)(s->buffer), &end,  10);

			if (end == (char *)(s->buffer) || *end != '\0') {
				WARN(ZS_BAD_TIMESTAMP);
				p--; {goto st269;}
			}

			if (s->number64 <= UINT32_MAX) {
				*((uint32_t *)rdata_tail) = htonl((uint32_t)s->number64);
				rdata_tail += 4;
			} else {
				WARN(ZS_NUMBER32_OVERFLOW);
				p--; {goto st269;}
			}
		} else {
			WARN(ZS_BAD_TIMESTAMP_LENGTH);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st870;
tr2918:
#line 492 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (s->buffer_length == 14) { // Date; 14 = len("YYYYMMDDHHmmSS").
			ret = date_to_timestamp(s->buffer, &timestamp);

			if (ret == ZS_OK) {
				*((uint32_t *)rdata_tail) = htonl(timestamp);
				rdata_tail += 4;
			} else {
				WARN(ret);
				p--; {goto st269;}
			}
		} else if (s->buffer_length <= 10) { // Timestamp format.
			char *end;

			s->number64 = strtoull((char *)(s->buffer), &end,  10);

			if (end == (char *)(s->buffer) || *end != '\0') {
				WARN(ZS_BAD_TIMESTAMP);
				p--; {goto st269;}
			}

			if (s->number64 <= UINT32_MAX) {
				*((uint32_t *)rdata_tail) = htonl((uint32_t)s->number64);
				rdata_tail += 4;
			} else {
				WARN(ZS_NUMBER32_OVERFLOW);
				p--; {goto st269;}
			}
		} else {
			WARN(ZS_BAD_TIMESTAMP_LENGTH);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st870;
tr2920:
#line 492 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (s->buffer_length == 14) { // Date; 14 = len("YYYYMMDDHHmmSS").
			ret = date_to_timestamp(s->buffer, &timestamp);

			if (ret == ZS_OK) {
				*((uint32_t *)rdata_tail) = htonl(timestamp);
				rdata_tail += 4;
			} else {
				WARN(ret);
				p--; {goto st269;}
			}
		} else if (s->buffer_length <= 10) { // Timestamp format.
			char *end;

			s->number64 = strtoull((char *)(s->buffer), &end,  10);

			if (end == (char *)(s->buffer) || *end != '\0') {
				WARN(ZS_BAD_TIMESTAMP);
				p--; {goto st269;}
			}

			if (s->number64 <= UINT32_MAX) {
				*((uint32_t *)rdata_tail) = htonl((uint32_t)s->number64);
				rdata_tail += 4;
			} else {
				WARN(ZS_NUMBER32_OVERFLOW);
				p--; {goto st269;}
			}
		} else {
			WARN(ZS_BAD_TIMESTAMP_LENGTH);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st870;
st870:
	if ( ++p == pe )
		goto _test_eof870;
case 870:
#line 80002 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st870;
		case 32: goto st870;
		case 40: goto tr2923;
		case 41: goto tr2924;
		case 1034: goto tr2926;
		case 1083: goto st878;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2925;
	goto tr1899;
tr2925:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st871;
tr2931:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st871;
st871:
	if ( ++p == pe )
		goto _test_eof871;
case 871:
#line 80070 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2928;
		case 32: goto tr2928;
		case 40: goto tr2929;
		case 41: goto tr2930;
		case 1034: goto tr2932;
		case 1083: goto tr2933;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr2931;
	goto tr1899;
tr2935:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st872;
tr2936:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st872;
tr2938:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st872;
tr2955:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st872;
tr2928:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st872;
tr2929:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st872;
tr2930:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st872;
tr2932:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st872;
st872:
	if ( ++p == pe )
		goto _test_eof872;
case 872:
#line 80208 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st872;
		case 32: goto st872;
		case 40: goto tr2935;
		case 41: goto tr2936;
		case 42: goto tr2937;
		case 92: goto tr2937;
		case 95: goto tr2937;
		case 1034: goto tr2938;
		case 1083: goto st877;
	}
	if ( _widec < 64 ) {
		if ( 45 <= _widec && _widec <= 57 )
			goto tr2937;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr2937;
	} else
		goto tr2937;
	goto tr71;
tr2937:
#line 288 "scanner_body.rl"
	{
		s->dname = rdata_tail;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 873;goto st271;} }
	goto st873;
st873:
	if ( ++p == pe )
		goto _test_eof873;
case 873:
#line 80255 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2940;
		case 32: goto tr2940;
		case 40: goto tr2941;
		case 41: goto tr2942;
		case 1034: goto tr2943;
		case 1083: goto tr2944;
	}
	goto tr71;
tr2946:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st874;
tr2947:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st874;
tr2949:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st874;
tr2953:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st874;
tr2940:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
	goto st874;
tr2941:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st874;
tr2942:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st874;
tr2943:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st874;
st874:
	if ( ++p == pe )
		goto _test_eof874;
case 874:
#line 80363 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st874;
		case 32: goto st874;
		case 40: goto tr2946;
		case 41: goto tr2947;
		case 43: goto tr2948;
		case 1034: goto tr2949;
		case 1083: goto st876;
	}
	if ( _widec < 65 ) {
		if ( 47 <= _widec && _widec <= 57 )
			goto tr2948;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr2948;
	} else
		goto tr2948;
	goto tr71;
tr2948:
#line 1062 "scanner_body.rl"
	{ p--; {stack[top++] = 875;goto st330;} }
	goto st875;
st875:
	if ( ++p == pe )
		goto _test_eof875;
case 875:
#line 80404 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1152 + ((*p) - -128));
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1152 + ((*p) - -128));
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 1546: goto tr2951;
		case 1595: goto tr2951;
	}
	goto tr71;
tr2951:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1210;
st1210:
	if ( ++p == pe )
		goto _test_eof1210;
case 1210:
#line 80434 "scanner.c"
	goto st0;
tr2952:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st876;
tr2944:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
	goto st876;
st876:
	if ( ++p == pe )
		goto _test_eof876;
case 876:
#line 80454 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2953;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2952;
	goto tr71;
tr2954:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st877;
tr2933:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st877;
st877:
	if ( ++p == pe )
		goto _test_eof877;
case 877:
#line 80506 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2955;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2954;
	goto tr71;
tr2956:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st878;
tr2921:
#line 492 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (s->buffer_length == 14) { // Date; 14 = len("YYYYMMDDHHmmSS").
			ret = date_to_timestamp(s->buffer, &timestamp);

			if (ret == ZS_OK) {
				*((uint32_t *)rdata_tail) = htonl(timestamp);
				rdata_tail += 4;
			} else {
				WARN(ret);
				p--; {goto st269;}
			}
		} else if (s->buffer_length <= 10) { // Timestamp format.
			char *end;

			s->number64 = strtoull((char *)(s->buffer), &end,  10);

			if (end == (char *)(s->buffer) || *end != '\0') {
				WARN(ZS_BAD_TIMESTAMP);
				p--; {goto st269;}
			}

			if (s->number64 <= UINT32_MAX) {
				*((uint32_t *)rdata_tail) = htonl((uint32_t)s->number64);
				rdata_tail += 4;
			} else {
				WARN(ZS_NUMBER32_OVERFLOW);
				p--; {goto st269;}
			}
		} else {
			WARN(ZS_BAD_TIMESTAMP_LENGTH);
			p--; {goto st269;}
		}
	}
	goto st878;
st878:
	if ( ++p == pe )
		goto _test_eof878;
case 878:
#line 80583 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2957;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2956;
	goto tr71;
tr2958:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st879;
tr2909:
#line 492 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (s->buffer_length == 14) { // Date; 14 = len("YYYYMMDDHHmmSS").
			ret = date_to_timestamp(s->buffer, &timestamp);

			if (ret == ZS_OK) {
				*((uint32_t *)rdata_tail) = htonl(timestamp);
				rdata_tail += 4;
			} else {
				WARN(ret);
				p--; {goto st269;}
			}
		} else if (s->buffer_length <= 10) { // Timestamp format.
			char *end;

			s->number64 = strtoull((char *)(s->buffer), &end,  10);

			if (end == (char *)(s->buffer) || *end != '\0') {
				WARN(ZS_BAD_TIMESTAMP);
				p--; {goto st269;}
			}

			if (s->number64 <= UINT32_MAX) {
				*((uint32_t *)rdata_tail) = htonl((uint32_t)s->number64);
				rdata_tail += 4;
			} else {
				WARN(ZS_NUMBER32_OVERFLOW);
				p--; {goto st269;}
			}
		} else {
			WARN(ZS_BAD_TIMESTAMP_LENGTH);
			p--; {goto st269;}
		}
	}
	goto st879;
st879:
	if ( ++p == pe )
		goto _test_eof879;
case 879:
#line 80660 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2959;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2958;
	goto tr71;
tr2960:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st880;
tr2896:
#line 385 "scanner_body.rl"
	{
		if (s->number64 <= UINT32_MAX) {
			uint32_t num32 = htonl((uint32_t)s->number64);
			memcpy(rdata_tail, &num32, 4);
			rdata_tail += 4;
		} else {
			WARN(ZS_NUMBER32_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st880;
st880:
	if ( ++p == pe )
		goto _test_eof880;
case 880:
#line 80712 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2961;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2960;
	goto tr71;
tr2962:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st881;
tr2884:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st881;
st881:
	if ( ++p == pe )
		goto _test_eof881;
case 881:
#line 80763 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2963;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2962;
	goto tr71;
tr2964:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st882;
st882:
	if ( ++p == pe )
		goto _test_eof882;
case 882:
#line 80802 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2965;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2964;
	goto tr71;
tr2966:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st883;
tr3289:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st883;
tr2866:
#line 1282 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_A, &rdata_tail); }
	goto st883;
tr2974:
#line 1295 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_AAAA, &rdata_tail); }
	goto st883;
tr2982:
#line 1292 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_AFSDB, &rdata_tail); }
	goto st883;
tr2988:
#line 1302 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_APL, &rdata_tail); }
	goto st883;
tr2998:
#line 1323 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CAA, &rdata_tail); }
	goto st883;
tr3009:
#line 1314 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CDNSKEY, &rdata_tail); }
	goto st883;
tr3014:
#line 1313 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CDS, &rdata_tail); }
	goto st883;
tr3021:
#line 1300 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CERT, &rdata_tail); }
	goto st883;
tr3029:
#line 1284 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_CNAME, &rdata_tail); }
	goto st883;
tr3040:
#line 1309 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DHCID, &rdata_tail); }
	goto st883;
tr3049:
#line 1301 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DNAME, &rdata_tail); }
	goto st883;
tr3057:
#line 1308 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DNSKEY, &rdata_tail); }
	goto st883;
tr3062:
#line 1303 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_DS, &rdata_tail); }
	goto st883;
tr3072:
#line 1320 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_EUI48, &rdata_tail); }
	goto st883;
tr3078:
#line 1321 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_EUI64, &rdata_tail); }
	goto st883;
tr3087:
#line 1287 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_HINFO, &rdata_tail); }
	goto st883;
tr3099:
#line 1305 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_IPSECKEY, &rdata_tail); }
	goto st883;
tr3107:
#line 1294 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_KEY, &rdata_tail); }
	goto st883;
tr3112:
#line 1299 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_KX, &rdata_tail); }
	goto st883;
tr3123:
#line 1317 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_L32, &rdata_tail); }
	goto st883;
tr3129:
#line 1318 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_L64, &rdata_tail); }
	goto st883;
tr3134:
#line 1324 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_LB, &rdata_tail); }
	goto st883;
tr3140:
#line 1296 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_LOC, &rdata_tail); }
	goto st883;
tr3145:
#line 1319 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_LP, &rdata_tail); }
	goto st883;
tr3155:
#line 1288 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_MINFO, &rdata_tail); }
	goto st883;
tr3160:
#line 1289 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_MX, &rdata_tail); }
	goto st883;
tr3171:
#line 1298 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NAPTR, &rdata_tail); }
	goto st883;
tr3177:
#line 1316 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NID, &rdata_tail); }
	goto st883;
tr3183:
#line 1283 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NS, &rdata_tail); }
	goto st883;
tr3190:
#line 1307 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NSEC, &rdata_tail); }
	goto st883;
tr3196:
#line 1310 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NSEC3, &rdata_tail); }
	goto st883;
tr3205:
#line 1311 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_NSEC3PARAM, &rdata_tail); }
	goto st883;
tr3212:
#line 1286 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_PTR, &rdata_tail); }
	goto st883;
tr3220:
#line 1291 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_RP, &rdata_tail); }
	goto st883;
tr3228:
#line 1306 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_RRSIG, &rdata_tail); }
	goto st883;
tr3233:
#line 1293 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_RT, &rdata_tail); }
	goto st883;
tr3243:
#line 1285 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SOA, &rdata_tail); }
	goto st883;
tr3249:
#line 1315 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SPF, &rdata_tail); }
	goto st883;
tr3255:
#line 1297 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SRV, &rdata_tail); }
	goto st883;
tr3263:
#line 1304 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_SSHFP, &rdata_tail); }
	goto st883;
tr3273:
#line 1312 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_TLSA, &rdata_tail); }
	goto st883;
tr3279:
#line 1290 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_TXT, &rdata_tail); }
	goto st883;
tr3296:
#line 1322 "scanner_body.rl"
	{ type_num(KNOT_RRTYPE_URI, &rdata_tail); }
	goto st883;
st883:
	if ( ++p == pe )
		goto _test_eof883;
case 883:
#line 81026 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr2967;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr2966;
	goto tr71;
st884:
	if ( ++p == pe )
		goto _test_eof884;
case 884:
	switch( (*p) ) {
		case 65: goto st885;
		case 97: goto st885;
	}
	goto tr2843;
st885:
	if ( ++p == pe )
		goto _test_eof885;
case 885:
	switch( (*p) ) {
		case 65: goto st886;
		case 97: goto st886;
	}
	goto tr2843;
st886:
	if ( ++p == pe )
		goto _test_eof886;
case 886:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2970;
		case 32: goto tr2970;
		case 40: goto tr2971;
		case 41: goto tr2972;
		case 1034: goto tr2973;
		case 1083: goto tr2974;
	}
	goto tr2843;
st887:
	if ( ++p == pe )
		goto _test_eof887;
case 887:
	switch( (*p) ) {
		case 83: goto st888;
		case 115: goto st888;
	}
	goto tr2843;
st888:
	if ( ++p == pe )
		goto _test_eof888;
case 888:
	switch( (*p) ) {
		case 68: goto st889;
		case 100: goto st889;
	}
	goto tr2843;
st889:
	if ( ++p == pe )
		goto _test_eof889;
case 889:
	switch( (*p) ) {
		case 66: goto st890;
		case 98: goto st890;
	}
	goto tr2843;
st890:
	if ( ++p == pe )
		goto _test_eof890;
case 890:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2978;
		case 32: goto tr2978;
		case 40: goto tr2979;
		case 41: goto tr2980;
		case 1034: goto tr2981;
		case 1083: goto tr2982;
	}
	goto tr2843;
st891:
	if ( ++p == pe )
		goto _test_eof891;
case 891:
	switch( (*p) ) {
		case 76: goto st892;
		case 108: goto st892;
	}
	goto tr2843;
st892:
	if ( ++p == pe )
		goto _test_eof892;
case 892:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2984;
		case 32: goto tr2984;
		case 40: goto tr2985;
		case 41: goto tr2986;
		case 1034: goto tr2987;
		case 1083: goto tr2988;
	}
	goto tr2843;
st893:
	if ( ++p == pe )
		goto _test_eof893;
case 893:
	switch( (*p) ) {
		case 65: goto st894;
		case 68: goto st896;
		case 69: goto st903;
		case 78: goto st906;
		case 97: goto st894;
		case 100: goto st896;
		case 101: goto st903;
		case 110: goto st906;
	}
	goto tr2843;
st894:
	if ( ++p == pe )
		goto _test_eof894;
case 894:
	switch( (*p) ) {
		case 65: goto st895;
		case 97: goto st895;
	}
	goto tr2843;
st895:
	if ( ++p == pe )
		goto _test_eof895;
case 895:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr2994;
		case 32: goto tr2994;
		case 40: goto tr2995;
		case 41: goto tr2996;
		case 1034: goto tr2997;
		case 1083: goto tr2998;
	}
	goto tr2843;
st896:
	if ( ++p == pe )
		goto _test_eof896;
case 896:
	switch( (*p) ) {
		case 78: goto st897;
		case 83: goto st902;
		case 110: goto st897;
		case 115: goto st902;
	}
	goto tr2843;
st897:
	if ( ++p == pe )
		goto _test_eof897;
case 897:
	switch( (*p) ) {
		case 83: goto st898;
		case 115: goto st898;
	}
	goto tr2843;
st898:
	if ( ++p == pe )
		goto _test_eof898;
case 898:
	switch( (*p) ) {
		case 75: goto st899;
		case 107: goto st899;
	}
	goto tr2843;
st899:
	if ( ++p == pe )
		goto _test_eof899;
case 899:
	switch( (*p) ) {
		case 69: goto st900;
		case 101: goto st900;
	}
	goto tr2843;
st900:
	if ( ++p == pe )
		goto _test_eof900;
case 900:
	switch( (*p) ) {
		case 89: goto st901;
		case 121: goto st901;
	}
	goto tr2843;
st901:
	if ( ++p == pe )
		goto _test_eof901;
case 901:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3005;
		case 32: goto tr3005;
		case 40: goto tr3006;
		case 41: goto tr3007;
		case 1034: goto tr3008;
		case 1083: goto tr3009;
	}
	goto tr2843;
st902:
	if ( ++p == pe )
		goto _test_eof902;
case 902:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3010;
		case 32: goto tr3010;
		case 40: goto tr3011;
		case 41: goto tr3012;
		case 1034: goto tr3013;
		case 1083: goto tr3014;
	}
	goto tr2843;
st903:
	if ( ++p == pe )
		goto _test_eof903;
case 903:
	switch( (*p) ) {
		case 82: goto st904;
		case 114: goto st904;
	}
	goto tr2843;
st904:
	if ( ++p == pe )
		goto _test_eof904;
case 904:
	switch( (*p) ) {
		case 84: goto st905;
		case 116: goto st905;
	}
	goto tr2843;
st905:
	if ( ++p == pe )
		goto _test_eof905;
case 905:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3017;
		case 32: goto tr3017;
		case 40: goto tr3018;
		case 41: goto tr3019;
		case 1034: goto tr3020;
		case 1083: goto tr3021;
	}
	goto tr2843;
st906:
	if ( ++p == pe )
		goto _test_eof906;
case 906:
	switch( (*p) ) {
		case 65: goto st907;
		case 97: goto st907;
	}
	goto tr2843;
st907:
	if ( ++p == pe )
		goto _test_eof907;
case 907:
	switch( (*p) ) {
		case 77: goto st908;
		case 109: goto st908;
	}
	goto tr2843;
st908:
	if ( ++p == pe )
		goto _test_eof908;
case 908:
	switch( (*p) ) {
		case 69: goto st909;
		case 101: goto st909;
	}
	goto tr2843;
st909:
	if ( ++p == pe )
		goto _test_eof909;
case 909:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3025;
		case 32: goto tr3025;
		case 40: goto tr3026;
		case 41: goto tr3027;
		case 1034: goto tr3028;
		case 1083: goto tr3029;
	}
	goto tr2843;
st910:
	if ( ++p == pe )
		goto _test_eof910;
case 910:
	switch( (*p) ) {
		case 72: goto st911;
		case 78: goto st915;
		case 83: goto st923;
		case 104: goto st911;
		case 110: goto st915;
		case 115: goto st923;
	}
	goto tr2843;
st911:
	if ( ++p == pe )
		goto _test_eof911;
case 911:
	switch( (*p) ) {
		case 67: goto st912;
		case 99: goto st912;
	}
	goto tr2843;
st912:
	if ( ++p == pe )
		goto _test_eof912;
case 912:
	switch( (*p) ) {
		case 73: goto st913;
		case 105: goto st913;
	}
	goto tr2843;
st913:
	if ( ++p == pe )
		goto _test_eof913;
case 913:
	switch( (*p) ) {
		case 68: goto st914;
		case 100: goto st914;
	}
	goto tr2843;
st914:
	if ( ++p == pe )
		goto _test_eof914;
case 914:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3036;
		case 32: goto tr3036;
		case 40: goto tr3037;
		case 41: goto tr3038;
		case 1034: goto tr3039;
		case 1083: goto tr3040;
	}
	goto tr2843;
st915:
	if ( ++p == pe )
		goto _test_eof915;
case 915:
	switch( (*p) ) {
		case 65: goto st916;
		case 83: goto st919;
		case 97: goto st916;
		case 115: goto st919;
	}
	goto tr2843;
st916:
	if ( ++p == pe )
		goto _test_eof916;
case 916:
	switch( (*p) ) {
		case 77: goto st917;
		case 109: goto st917;
	}
	goto tr2843;
st917:
	if ( ++p == pe )
		goto _test_eof917;
case 917:
	switch( (*p) ) {
		case 69: goto st918;
		case 101: goto st918;
	}
	goto tr2843;
st918:
	if ( ++p == pe )
		goto _test_eof918;
case 918:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3045;
		case 32: goto tr3045;
		case 40: goto tr3046;
		case 41: goto tr3047;
		case 1034: goto tr3048;
		case 1083: goto tr3049;
	}
	goto tr2843;
st919:
	if ( ++p == pe )
		goto _test_eof919;
case 919:
	switch( (*p) ) {
		case 75: goto st920;
		case 107: goto st920;
	}
	goto tr2843;
st920:
	if ( ++p == pe )
		goto _test_eof920;
case 920:
	switch( (*p) ) {
		case 69: goto st921;
		case 101: goto st921;
	}
	goto tr2843;
st921:
	if ( ++p == pe )
		goto _test_eof921;
case 921:
	switch( (*p) ) {
		case 89: goto st922;
		case 121: goto st922;
	}
	goto tr2843;
st922:
	if ( ++p == pe )
		goto _test_eof922;
case 922:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3053;
		case 32: goto tr3053;
		case 40: goto tr3054;
		case 41: goto tr3055;
		case 1034: goto tr3056;
		case 1083: goto tr3057;
	}
	goto tr2843;
st923:
	if ( ++p == pe )
		goto _test_eof923;
case 923:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3058;
		case 32: goto tr3058;
		case 40: goto tr3059;
		case 41: goto tr3060;
		case 1034: goto tr3061;
		case 1083: goto tr3062;
	}
	goto tr2843;
st924:
	if ( ++p == pe )
		goto _test_eof924;
case 924:
	switch( (*p) ) {
		case 85: goto st925;
		case 117: goto st925;
	}
	goto tr2843;
st925:
	if ( ++p == pe )
		goto _test_eof925;
case 925:
	switch( (*p) ) {
		case 73: goto st926;
		case 105: goto st926;
	}
	goto tr2843;
st926:
	if ( ++p == pe )
		goto _test_eof926;
case 926:
	switch( (*p) ) {
		case 52: goto st927;
		case 54: goto st929;
	}
	goto tr2843;
st927:
	if ( ++p == pe )
		goto _test_eof927;
case 927:
	if ( (*p) == 56 )
		goto st928;
	goto tr2843;
st928:
	if ( ++p == pe )
		goto _test_eof928;
case 928:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3068;
		case 32: goto tr3068;
		case 40: goto tr3069;
		case 41: goto tr3070;
		case 1034: goto tr3071;
		case 1083: goto tr3072;
	}
	goto tr2843;
st929:
	if ( ++p == pe )
		goto _test_eof929;
case 929:
	if ( (*p) == 52 )
		goto st930;
	goto tr2843;
st930:
	if ( ++p == pe )
		goto _test_eof930;
case 930:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3074;
		case 32: goto tr3074;
		case 40: goto tr3075;
		case 41: goto tr3076;
		case 1034: goto tr3077;
		case 1083: goto tr3078;
	}
	goto tr2843;
st931:
	if ( ++p == pe )
		goto _test_eof931;
case 931:
	switch( (*p) ) {
		case 73: goto st932;
		case 105: goto st932;
	}
	goto tr2843;
st932:
	if ( ++p == pe )
		goto _test_eof932;
case 932:
	switch( (*p) ) {
		case 78: goto st933;
		case 110: goto st933;
	}
	goto tr2843;
st933:
	if ( ++p == pe )
		goto _test_eof933;
case 933:
	switch( (*p) ) {
		case 70: goto st934;
		case 102: goto st934;
	}
	goto tr2843;
st934:
	if ( ++p == pe )
		goto _test_eof934;
case 934:
	switch( (*p) ) {
		case 79: goto st935;
		case 111: goto st935;
	}
	goto tr2843;
st935:
	if ( ++p == pe )
		goto _test_eof935;
case 935:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3083;
		case 32: goto tr3083;
		case 40: goto tr3084;
		case 41: goto tr3085;
		case 1034: goto tr3086;
		case 1083: goto tr3087;
	}
	goto tr2843;
st936:
	if ( ++p == pe )
		goto _test_eof936;
case 936:
	switch( (*p) ) {
		case 80: goto st937;
		case 112: goto st937;
	}
	goto tr2843;
st937:
	if ( ++p == pe )
		goto _test_eof937;
case 937:
	switch( (*p) ) {
		case 83: goto st938;
		case 115: goto st938;
	}
	goto tr2843;
st938:
	if ( ++p == pe )
		goto _test_eof938;
case 938:
	switch( (*p) ) {
		case 69: goto st939;
		case 101: goto st939;
	}
	goto tr2843;
st939:
	if ( ++p == pe )
		goto _test_eof939;
case 939:
	switch( (*p) ) {
		case 67: goto st940;
		case 99: goto st940;
	}
	goto tr2843;
st940:
	if ( ++p == pe )
		goto _test_eof940;
case 940:
	switch( (*p) ) {
		case 75: goto st941;
		case 107: goto st941;
	}
	goto tr2843;
st941:
	if ( ++p == pe )
		goto _test_eof941;
case 941:
	switch( (*p) ) {
		case 69: goto st942;
		case 101: goto st942;
	}
	goto tr2843;
st942:
	if ( ++p == pe )
		goto _test_eof942;
case 942:
	switch( (*p) ) {
		case 89: goto st943;
		case 121: goto st943;
	}
	goto tr2843;
st943:
	if ( ++p == pe )
		goto _test_eof943;
case 943:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3095;
		case 32: goto tr3095;
		case 40: goto tr3096;
		case 41: goto tr3097;
		case 1034: goto tr3098;
		case 1083: goto tr3099;
	}
	goto tr2843;
st944:
	if ( ++p == pe )
		goto _test_eof944;
case 944:
	switch( (*p) ) {
		case 69: goto st945;
		case 88: goto st947;
		case 101: goto st945;
		case 120: goto st947;
	}
	goto tr2843;
st945:
	if ( ++p == pe )
		goto _test_eof945;
case 945:
	switch( (*p) ) {
		case 89: goto st946;
		case 121: goto st946;
	}
	goto tr2843;
st946:
	if ( ++p == pe )
		goto _test_eof946;
case 946:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3103;
		case 32: goto tr3103;
		case 40: goto tr3104;
		case 41: goto tr3105;
		case 1034: goto tr3106;
		case 1083: goto tr3107;
	}
	goto tr2843;
st947:
	if ( ++p == pe )
		goto _test_eof947;
case 947:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3108;
		case 32: goto tr3108;
		case 40: goto tr3109;
		case 41: goto tr3110;
		case 1034: goto tr3111;
		case 1083: goto tr3112;
	}
	goto tr2843;
st948:
	if ( ++p == pe )
		goto _test_eof948;
case 948:
	switch( (*p) ) {
		case 51: goto st949;
		case 54: goto st951;
		case 66: goto st953;
		case 79: goto st954;
		case 80: goto st956;
		case 98: goto st953;
		case 111: goto st954;
		case 112: goto st956;
	}
	goto tr2843;
st949:
	if ( ++p == pe )
		goto _test_eof949;
case 949:
	if ( (*p) == 50 )
		goto st950;
	goto tr2843;
st950:
	if ( ++p == pe )
		goto _test_eof950;
case 950:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3119;
		case 32: goto tr3119;
		case 40: goto tr3120;
		case 41: goto tr3121;
		case 1034: goto tr3122;
		case 1083: goto tr3123;
	}
	goto tr2843;
st951:
	if ( ++p == pe )
		goto _test_eof951;
case 951:
	if ( (*p) == 52 )
		goto st952;
	goto tr2843;
st952:
	if ( ++p == pe )
		goto _test_eof952;
case 952:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3125;
		case 32: goto tr3125;
		case 40: goto tr3126;
		case 41: goto tr3127;
		case 1034: goto tr3128;
		case 1083: goto tr3129;
	}
	goto tr2843;
st953:
	if ( ++p == pe )
		goto _test_eof953;
case 953:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3130;
		case 32: goto tr3130;
		case 40: goto tr3131;
		case 41: goto tr3132;
		case 1034: goto tr3133;
		case 1083: goto tr3134;
	}
	goto tr2843;
st954:
	if ( ++p == pe )
		goto _test_eof954;
case 954:
	switch( (*p) ) {
		case 67: goto st955;
		case 99: goto st955;
	}
	goto tr2843;
st955:
	if ( ++p == pe )
		goto _test_eof955;
case 955:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3136;
		case 32: goto tr3136;
		case 40: goto tr3137;
		case 41: goto tr3138;
		case 1034: goto tr3139;
		case 1083: goto tr3140;
	}
	goto tr2843;
st956:
	if ( ++p == pe )
		goto _test_eof956;
case 956:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3141;
		case 32: goto tr3141;
		case 40: goto tr3142;
		case 41: goto tr3143;
		case 1034: goto tr3144;
		case 1083: goto tr3145;
	}
	goto tr2843;
st957:
	if ( ++p == pe )
		goto _test_eof957;
case 957:
	switch( (*p) ) {
		case 73: goto st958;
		case 88: goto st962;
		case 105: goto st958;
		case 120: goto st962;
	}
	goto tr2843;
st958:
	if ( ++p == pe )
		goto _test_eof958;
case 958:
	switch( (*p) ) {
		case 78: goto st959;
		case 110: goto st959;
	}
	goto tr2843;
st959:
	if ( ++p == pe )
		goto _test_eof959;
case 959:
	switch( (*p) ) {
		case 70: goto st960;
		case 102: goto st960;
	}
	goto tr2843;
st960:
	if ( ++p == pe )
		goto _test_eof960;
case 960:
	switch( (*p) ) {
		case 79: goto st961;
		case 111: goto st961;
	}
	goto tr2843;
st961:
	if ( ++p == pe )
		goto _test_eof961;
case 961:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3151;
		case 32: goto tr3151;
		case 40: goto tr3152;
		case 41: goto tr3153;
		case 1034: goto tr3154;
		case 1083: goto tr3155;
	}
	goto tr2843;
st962:
	if ( ++p == pe )
		goto _test_eof962;
case 962:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3156;
		case 32: goto tr3156;
		case 40: goto tr3157;
		case 41: goto tr3158;
		case 1034: goto tr3159;
		case 1083: goto tr3160;
	}
	goto tr2843;
st963:
	if ( ++p == pe )
		goto _test_eof963;
case 963:
	switch( (*p) ) {
		case 65: goto st964;
		case 73: goto st968;
		case 83: goto st970;
		case 97: goto st964;
		case 105: goto st968;
		case 115: goto st970;
	}
	goto tr2843;
st964:
	if ( ++p == pe )
		goto _test_eof964;
case 964:
	switch( (*p) ) {
		case 80: goto st965;
		case 112: goto st965;
	}
	goto tr2843;
st965:
	if ( ++p == pe )
		goto _test_eof965;
case 965:
	switch( (*p) ) {
		case 84: goto st966;
		case 116: goto st966;
	}
	goto tr2843;
st966:
	if ( ++p == pe )
		goto _test_eof966;
case 966:
	switch( (*p) ) {
		case 82: goto st967;
		case 114: goto st967;
	}
	goto tr2843;
st967:
	if ( ++p == pe )
		goto _test_eof967;
case 967:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3167;
		case 32: goto tr3167;
		case 40: goto tr3168;
		case 41: goto tr3169;
		case 1034: goto tr3170;
		case 1083: goto tr3171;
	}
	goto tr2843;
st968:
	if ( ++p == pe )
		goto _test_eof968;
case 968:
	switch( (*p) ) {
		case 68: goto st969;
		case 100: goto st969;
	}
	goto tr2843;
st969:
	if ( ++p == pe )
		goto _test_eof969;
case 969:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3173;
		case 32: goto tr3173;
		case 40: goto tr3174;
		case 41: goto tr3175;
		case 1034: goto tr3176;
		case 1083: goto tr3177;
	}
	goto tr2843;
st970:
	if ( ++p == pe )
		goto _test_eof970;
case 970:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3178;
		case 32: goto tr3178;
		case 40: goto tr3179;
		case 41: goto tr3180;
		case 69: goto st971;
		case 101: goto st971;
		case 1034: goto tr3182;
		case 1083: goto tr3183;
	}
	goto tr2843;
st971:
	if ( ++p == pe )
		goto _test_eof971;
case 971:
	switch( (*p) ) {
		case 67: goto st972;
		case 99: goto st972;
	}
	goto tr2843;
st972:
	if ( ++p == pe )
		goto _test_eof972;
case 972:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3185;
		case 32: goto tr3185;
		case 40: goto tr3186;
		case 41: goto tr3187;
		case 51: goto st973;
		case 1034: goto tr3189;
		case 1083: goto tr3190;
	}
	goto tr2843;
st973:
	if ( ++p == pe )
		goto _test_eof973;
case 973:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3191;
		case 32: goto tr3191;
		case 40: goto tr3192;
		case 41: goto tr3193;
		case 80: goto st974;
		case 112: goto st974;
		case 1034: goto tr3195;
		case 1083: goto tr3196;
	}
	goto tr2843;
st974:
	if ( ++p == pe )
		goto _test_eof974;
case 974:
	switch( (*p) ) {
		case 65: goto st975;
		case 97: goto st975;
	}
	goto tr2843;
st975:
	if ( ++p == pe )
		goto _test_eof975;
case 975:
	switch( (*p) ) {
		case 82: goto st976;
		case 114: goto st976;
	}
	goto tr2843;
st976:
	if ( ++p == pe )
		goto _test_eof976;
case 976:
	switch( (*p) ) {
		case 65: goto st977;
		case 97: goto st977;
	}
	goto tr2843;
st977:
	if ( ++p == pe )
		goto _test_eof977;
case 977:
	switch( (*p) ) {
		case 77: goto st978;
		case 109: goto st978;
	}
	goto tr2843;
st978:
	if ( ++p == pe )
		goto _test_eof978;
case 978:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3201;
		case 32: goto tr3201;
		case 40: goto tr3202;
		case 41: goto tr3203;
		case 1034: goto tr3204;
		case 1083: goto tr3205;
	}
	goto tr2843;
st979:
	if ( ++p == pe )
		goto _test_eof979;
case 979:
	switch( (*p) ) {
		case 84: goto st980;
		case 116: goto st980;
	}
	goto tr2843;
st980:
	if ( ++p == pe )
		goto _test_eof980;
case 980:
	switch( (*p) ) {
		case 82: goto st981;
		case 114: goto st981;
	}
	goto tr2843;
st981:
	if ( ++p == pe )
		goto _test_eof981;
case 981:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3208;
		case 32: goto tr3208;
		case 40: goto tr3209;
		case 41: goto tr3210;
		case 1034: goto tr3211;
		case 1083: goto tr3212;
	}
	goto tr2843;
st982:
	if ( ++p == pe )
		goto _test_eof982;
case 982:
	switch( (*p) ) {
		case 80: goto st983;
		case 82: goto st984;
		case 84: goto st988;
		case 112: goto st983;
		case 114: goto st984;
		case 116: goto st988;
	}
	goto tr2843;
st983:
	if ( ++p == pe )
		goto _test_eof983;
case 983:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3216;
		case 32: goto tr3216;
		case 40: goto tr3217;
		case 41: goto tr3218;
		case 1034: goto tr3219;
		case 1083: goto tr3220;
	}
	goto tr2843;
st984:
	if ( ++p == pe )
		goto _test_eof984;
case 984:
	switch( (*p) ) {
		case 83: goto st985;
		case 115: goto st985;
	}
	goto tr2843;
st985:
	if ( ++p == pe )
		goto _test_eof985;
case 985:
	switch( (*p) ) {
		case 73: goto st986;
		case 105: goto st986;
	}
	goto tr2843;
st986:
	if ( ++p == pe )
		goto _test_eof986;
case 986:
	switch( (*p) ) {
		case 71: goto st987;
		case 103: goto st987;
	}
	goto tr2843;
st987:
	if ( ++p == pe )
		goto _test_eof987;
case 987:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3224;
		case 32: goto tr3224;
		case 40: goto tr3225;
		case 41: goto tr3226;
		case 1034: goto tr3227;
		case 1083: goto tr3228;
	}
	goto tr2843;
st988:
	if ( ++p == pe )
		goto _test_eof988;
case 988:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3229;
		case 32: goto tr3229;
		case 40: goto tr3230;
		case 41: goto tr3231;
		case 1034: goto tr3232;
		case 1083: goto tr3233;
	}
	goto tr2843;
st989:
	if ( ++p == pe )
		goto _test_eof989;
case 989:
	switch( (*p) ) {
		case 79: goto st990;
		case 80: goto st992;
		case 82: goto st994;
		case 83: goto st996;
		case 111: goto st990;
		case 112: goto st992;
		case 114: goto st994;
		case 115: goto st996;
	}
	goto tr2843;
st990:
	if ( ++p == pe )
		goto _test_eof990;
case 990:
	switch( (*p) ) {
		case 65: goto st991;
		case 97: goto st991;
	}
	goto tr2843;
st991:
	if ( ++p == pe )
		goto _test_eof991;
case 991:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3239;
		case 32: goto tr3239;
		case 40: goto tr3240;
		case 41: goto tr3241;
		case 1034: goto tr3242;
		case 1083: goto tr3243;
	}
	goto tr2843;
st992:
	if ( ++p == pe )
		goto _test_eof992;
case 992:
	switch( (*p) ) {
		case 70: goto st993;
		case 102: goto st993;
	}
	goto tr2843;
st993:
	if ( ++p == pe )
		goto _test_eof993;
case 993:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3245;
		case 32: goto tr3245;
		case 40: goto tr3246;
		case 41: goto tr3247;
		case 1034: goto tr3248;
		case 1083: goto tr3249;
	}
	goto tr2843;
st994:
	if ( ++p == pe )
		goto _test_eof994;
case 994:
	switch( (*p) ) {
		case 86: goto st995;
		case 118: goto st995;
	}
	goto tr2843;
st995:
	if ( ++p == pe )
		goto _test_eof995;
case 995:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3251;
		case 32: goto tr3251;
		case 40: goto tr3252;
		case 41: goto tr3253;
		case 1034: goto tr3254;
		case 1083: goto tr3255;
	}
	goto tr2843;
st996:
	if ( ++p == pe )
		goto _test_eof996;
case 996:
	switch( (*p) ) {
		case 72: goto st997;
		case 104: goto st997;
	}
	goto tr2843;
st997:
	if ( ++p == pe )
		goto _test_eof997;
case 997:
	switch( (*p) ) {
		case 70: goto st998;
		case 102: goto st998;
	}
	goto tr2843;
st998:
	if ( ++p == pe )
		goto _test_eof998;
case 998:
	switch( (*p) ) {
		case 80: goto st999;
		case 112: goto st999;
	}
	goto tr2843;
st999:
	if ( ++p == pe )
		goto _test_eof999;
case 999:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3259;
		case 32: goto tr3259;
		case 40: goto tr3260;
		case 41: goto tr3261;
		case 1034: goto tr3262;
		case 1083: goto tr3263;
	}
	goto tr2843;
st1000:
	if ( ++p == pe )
		goto _test_eof1000;
case 1000:
	switch( (*p) ) {
		case 76: goto st1001;
		case 88: goto st1004;
		case 89: goto st1006;
		case 108: goto st1001;
		case 120: goto st1004;
		case 121: goto st1006;
	}
	goto tr2843;
st1001:
	if ( ++p == pe )
		goto _test_eof1001;
case 1001:
	switch( (*p) ) {
		case 83: goto st1002;
		case 115: goto st1002;
	}
	goto tr2843;
st1002:
	if ( ++p == pe )
		goto _test_eof1002;
case 1002:
	switch( (*p) ) {
		case 65: goto st1003;
		case 97: goto st1003;
	}
	goto tr2843;
st1003:
	if ( ++p == pe )
		goto _test_eof1003;
case 1003:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3269;
		case 32: goto tr3269;
		case 40: goto tr3270;
		case 41: goto tr3271;
		case 1034: goto tr3272;
		case 1083: goto tr3273;
	}
	goto tr2843;
st1004:
	if ( ++p == pe )
		goto _test_eof1004;
case 1004:
	switch( (*p) ) {
		case 84: goto st1005;
		case 116: goto st1005;
	}
	goto tr2843;
st1005:
	if ( ++p == pe )
		goto _test_eof1005;
case 1005:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3275;
		case 32: goto tr3275;
		case 40: goto tr3276;
		case 41: goto tr3277;
		case 1034: goto tr3278;
		case 1083: goto tr3279;
	}
	goto tr2843;
st1006:
	if ( ++p == pe )
		goto _test_eof1006;
case 1006:
	switch( (*p) ) {
		case 80: goto st1007;
		case 112: goto st1007;
	}
	goto tr2843;
st1007:
	if ( ++p == pe )
		goto _test_eof1007;
case 1007:
	switch( (*p) ) {
		case 69: goto st1008;
		case 101: goto st1008;
	}
	goto tr2843;
st1008:
	if ( ++p == pe )
		goto _test_eof1008;
case 1008:
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr3283;
	goto tr3282;
tr3283:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1009;
tr3287:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1009;
st1009:
	if ( ++p == pe )
		goto _test_eof1009;
case 1009:
#line 82995 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3284;
		case 32: goto tr3284;
		case 40: goto tr3285;
		case 41: goto tr3286;
		case 1034: goto tr3288;
		case 1083: goto tr3289;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3287;
	goto tr3282;
st1010:
	if ( ++p == pe )
		goto _test_eof1010;
case 1010:
	switch( (*p) ) {
		case 82: goto st1011;
		case 114: goto st1011;
	}
	goto tr2843;
st1011:
	if ( ++p == pe )
		goto _test_eof1011;
case 1011:
	switch( (*p) ) {
		case 73: goto st1012;
		case 105: goto st1012;
	}
	goto tr2843;
st1012:
	if ( ++p == pe )
		goto _test_eof1012;
case 1012:
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3292;
		case 32: goto tr3292;
		case 40: goto tr3293;
		case 41: goto tr3294;
		case 1034: goto tr3295;
		case 1083: goto tr3296;
	}
	goto tr2843;
st1013:
	if ( ++p == pe )
		goto _test_eof1013;
case 1013:
	switch( (*p) ) {
		case 42: goto tr3297;
		case 92: goto tr3297;
		case 95: goto tr3297;
	}
	if ( (*p) < 64 ) {
		if ( 45 <= (*p) && (*p) <= 57 )
			goto tr3297;
	} else if ( (*p) > 90 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto tr3297;
	} else
		goto tr3297;
	goto tr71;
tr3297:
#line 288 "scanner_body.rl"
	{
		s->dname = rdata_tail;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 1014;goto st271;} }
	goto st1014;
st1014:
	if ( ++p == pe )
		goto _test_eof1014;
case 1014:
#line 83096 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr3298;
		case 59: goto tr3298;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr3298;
	} else if ( (*p) >= 9 )
		goto tr3298;
	goto tr71;
tr3298:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 1424 "scanner_body.rl"
	{ p--; {stack[top++] = 1015;goto st337;} }
	goto st1015;
st1015:
	if ( ++p == pe )
		goto _test_eof1015;
case 1015:
#line 83119 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr3299;
		case 59: goto tr3299;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr3299;
	} else if ( (*p) >= 9 )
		goto tr3299;
	goto tr71;
tr3299:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1211;
st1211:
	if ( ++p == pe )
		goto _test_eof1211;
case 1211:
#line 83140 "scanner.c"
	goto st0;
st1016:
	if ( ++p == pe )
		goto _test_eof1016;
case 1016:
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr3300;
	goto tr1899;
tr3300:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1017;
tr3304:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1017;
st1017:
	if ( ++p == pe )
		goto _test_eof1017;
case 1017:
#line 83191 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3301;
		case 32: goto tr3301;
		case 40: goto tr3302;
		case 41: goto tr3303;
		case 1034: goto tr3305;
		case 1083: goto tr3306;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3304;
	goto tr1899;
tr3308:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1018;
tr3309:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1018;
tr3311:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1018;
tr3337:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1018;
tr3301:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1018;
tr3302:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1018;
tr3303:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1018;
tr3305:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1018;
st1018:
	if ( ++p == pe )
		goto _test_eof1018;
case 1018:
#line 83329 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1018;
		case 32: goto st1018;
		case 40: goto tr3308;
		case 41: goto tr3309;
		case 1034: goto tr3311;
		case 1083: goto st1026;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3310;
	goto tr1899;
tr3310:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1019;
tr3316:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1019;
st1019:
	if ( ++p == pe )
		goto _test_eof1019;
case 1019:
#line 83397 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3313;
		case 32: goto tr3313;
		case 40: goto tr3314;
		case 41: goto tr3315;
		case 1034: goto tr3317;
		case 1083: goto tr3318;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3316;
	goto tr1899;
tr3320:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1020;
tr3321:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1020;
tr3323:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1020;
tr3335:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1020;
tr3313:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1020;
tr3314:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1020;
tr3315:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1020;
tr3317:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1020;
st1020:
	if ( ++p == pe )
		goto _test_eof1020;
case 1020:
#line 83531 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1020;
		case 32: goto st1020;
		case 40: goto tr3320;
		case 41: goto tr3321;
		case 1034: goto tr3323;
		case 1083: goto st1025;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr3322;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr3322;
	} else
		goto tr3322;
	goto tr71;
tr3322:
#line 1686 "scanner_body.rl"
	{ p--; {stack[top++] = 1021;goto st489;} }
	goto st1021;
st1021:
	if ( ++p == pe )
		goto _test_eof1021;
case 1021:
#line 83571 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1022;
		case 32: goto st1022;
		case 40: goto tr3326;
		case 41: goto tr3327;
		case 1034: goto tr3328;
		case 1083: goto st1024;
	}
	goto tr71;
tr3326:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1022;
tr3327:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1022;
tr3328:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1022;
tr3333:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1022;
st1022:
	if ( ++p == pe )
		goto _test_eof1022;
case 1022:
#line 83635 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1022;
		case 32: goto st1022;
		case 40: goto tr3326;
		case 41: goto tr3327;
		case 43: goto tr3330;
		case 1034: goto tr3328;
		case 1083: goto st1024;
	}
	if ( _widec < 65 ) {
		if ( 47 <= _widec && _widec <= 57 )
			goto tr3330;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr3330;
	} else
		goto tr3330;
	goto tr71;
tr3330:
#line 1062 "scanner_body.rl"
	{ p--; {stack[top++] = 1023;goto st330;} }
	goto st1023;
st1023:
	if ( ++p == pe )
		goto _test_eof1023;
case 1023:
#line 83676 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1152 + ((*p) - -128));
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1152 + ((*p) - -128));
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 1546: goto tr3331;
		case 1595: goto tr3331;
	}
	goto tr71;
tr3331:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1212;
st1212:
	if ( ++p == pe )
		goto _test_eof1212;
case 1212:
#line 83706 "scanner.c"
	goto st0;
tr3332:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st1024;
st1024:
	if ( ++p == pe )
		goto _test_eof1024;
case 1024:
#line 83720 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3333;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3332;
	goto tr71;
tr3334:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st1025;
tr3318:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1025;
st1025:
	if ( ++p == pe )
		goto _test_eof1025;
case 1025:
#line 83771 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3335;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3334;
	goto tr71;
tr3336:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st1026;
tr3306:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1026;
st1026:
	if ( ++p == pe )
		goto _test_eof1026;
case 1026:
#line 83823 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3337;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3336;
	goto tr71;
st1027:
	if ( ++p == pe )
		goto _test_eof1027;
case 1027:
	if ( (*p) == 43 )
		goto tr3338;
	if ( (*p) < 65 ) {
		if ( 47 <= (*p) && (*p) <= 57 )
			goto tr3338;
	} else if ( (*p) > 90 ) {
		if ( 97 <= (*p) && (*p) <= 122 )
			goto tr3338;
	} else
		goto tr3338;
	goto tr71;
tr3338:
#line 1062 "scanner_body.rl"
	{ p--; {stack[top++] = 1028;goto st330;} }
	goto st1028;
st1028:
	if ( ++p == pe )
		goto _test_eof1028;
case 1028:
#line 83873 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1152 + ((*p) - -128));
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1152 + ((*p) - -128));
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 1546: goto tr3339;
		case 1595: goto tr3339;
	}
	goto tr71;
tr3339:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1213;
st1213:
	if ( ++p == pe )
		goto _test_eof1213;
case 1213:
#line 83903 "scanner.c"
	goto st0;
st1029:
	if ( ++p == pe )
		goto _test_eof1029;
case 1029:
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr3340;
	goto tr1899;
tr3340:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1030;
tr3344:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1030;
st1030:
	if ( ++p == pe )
		goto _test_eof1030;
case 1030:
#line 83954 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3341;
		case 32: goto tr3341;
		case 40: goto tr3342;
		case 41: goto tr3343;
		case 1034: goto tr3345;
		case 1083: goto tr3346;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3344;
	goto tr1899;
tr3348:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1031;
tr3349:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1031;
tr3351:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1031;
tr3415:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1031;
tr3341:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1031;
tr3342:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1031;
tr3343:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1031;
tr3345:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1031;
st1031:
	if ( ++p == pe )
		goto _test_eof1031;
case 1031:
#line 84088 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1031;
		case 32: goto st1031;
		case 40: goto tr3348;
		case 41: goto tr3349;
		case 1034: goto tr3351;
		case 1083: goto st1057;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3350;
	goto tr1899;
tr3350:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1032;
tr3356:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1032;
st1032:
	if ( ++p == pe )
		goto _test_eof1032;
case 1032:
#line 84156 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3353;
		case 32: goto tr3353;
		case 40: goto tr3354;
		case 41: goto tr3355;
		case 1034: goto tr3357;
		case 1083: goto tr3358;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3356;
	goto tr1899;
tr3360:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1033;
tr3361:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1033;
tr3363:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1033;
tr3413:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1033;
tr3353:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1033;
tr3354:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1033;
tr3355:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1033;
tr3357:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1033;
st1033:
	if ( ++p == pe )
		goto _test_eof1033;
case 1033:
#line 84290 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1033;
		case 32: goto st1033;
		case 40: goto tr3360;
		case 41: goto tr3361;
		case 1034: goto tr3363;
		case 1083: goto st1056;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3362;
	goto tr1899;
tr3362:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1034;
tr3368:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1034;
st1034:
	if ( ++p == pe )
		goto _test_eof1034;
case 1034:
#line 84358 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3365;
		case 32: goto tr3365;
		case 40: goto tr3366;
		case 41: goto tr3367;
		case 1034: goto tr3369;
		case 1083: goto tr3370;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3368;
	goto tr1899;
tr3372:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1035;
tr3373:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1035;
tr3376:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1035;
tr3411:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1035;
tr3365:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1035;
tr3366:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1035;
tr3367:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1035;
tr3369:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1035;
st1035:
	if ( ++p == pe )
		goto _test_eof1035;
case 1035:
#line 84496 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1035;
		case 32: goto st1035;
		case 40: goto tr3372;
		case 41: goto tr3373;
		case 45: goto tr3374;
		case 1034: goto tr3376;
		case 1083: goto st1055;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr3375;
	} else if ( _widec > 70 ) {
		if ( 97 <= _widec && _widec <= 102 )
			goto tr3375;
	} else
		goto tr3375;
	goto tr2570;
tr3374:
#line 242 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			s->item_length_location = rdata_tail++;
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1036;
st1036:
	if ( ++p == pe )
		goto _test_eof1036;
case 1036:
#line 84544 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3378;
		case 32: goto tr3378;
		case 40: goto tr3379;
		case 41: goto tr3380;
		case 1034: goto tr3381;
		case 1083: goto tr3382;
	}
	goto tr2570;
tr3385:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1037;
tr3386:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1037;
tr3388:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1037;
tr3407:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1037;
tr3378:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1037;
tr3379:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1037;
tr3380:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1037;
tr3381:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1037;
st1037:
	if ( ++p == pe )
		goto _test_eof1037;
case 1037:
#line 84680 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1037;
		case 32: goto st1037;
		case 40: goto tr3385;
		case 41: goto tr3386;
		case 1034: goto tr3388;
		case 1083: goto st1052;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr3387;
	} else if ( _widec > 86 ) {
		if ( 97 <= _widec && _widec <= 118 )
			goto tr3387;
	} else
		goto tr3387;
	goto tr3383;
tr3387:
#line 242 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			s->item_length_location = rdata_tail++;
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1066 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1038;
tr3402:
#line 1066 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1038;
st1038:
	if ( ++p == pe )
		goto _test_eof1038;
case 1038:
#line 84747 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3390;
	} else if ( (*p) > 86 ) {
		if ( 97 <= (*p) && (*p) <= 118 )
			goto tr3390;
	} else
		goto tr3390;
	goto tr3383;
tr3390:
#line 1074 "scanner_body.rl"
	{
		*(rdata_tail++) += second_left_base32hex_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = second_right_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1039;
st1039:
	if ( ++p == pe )
		goto _test_eof1039;
case 1039:
#line 84774 "scanner.c"
	if ( (*p) == 61 )
		goto st1050;
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3391;
	} else if ( (*p) > 86 ) {
		if ( 97 <= (*p) && (*p) <= 118 )
			goto tr3391;
	} else
		goto tr3391;
	goto tr3383;
tr3391:
#line 1084 "scanner_body.rl"
	{
		*rdata_tail += third_base32hex_to_num[(uint8_t)(*p)];
	}
	goto st1040;
st1040:
	if ( ++p == pe )
		goto _test_eof1040;
case 1040:
#line 84796 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3393;
	} else if ( (*p) > 86 ) {
		if ( 97 <= (*p) && (*p) <= 118 )
			goto tr3393;
	} else
		goto tr3393;
	goto tr3383;
tr3393:
#line 1087 "scanner_body.rl"
	{
		*(rdata_tail++) += fourth_left_base32hex_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = fourth_right_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1041;
st1041:
	if ( ++p == pe )
		goto _test_eof1041;
case 1041:
#line 84823 "scanner.c"
	if ( (*p) == 61 )
		goto st1049;
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3394;
	} else if ( (*p) > 86 ) {
		if ( 97 <= (*p) && (*p) <= 118 )
			goto tr3394;
	} else
		goto tr3394;
	goto tr3383;
tr3394:
#line 1097 "scanner_body.rl"
	{
		*(rdata_tail++) += fifth_left_base32hex_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = fifth_right_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1042;
st1042:
	if ( ++p == pe )
		goto _test_eof1042;
case 1042:
#line 84852 "scanner.c"
	if ( (*p) == 61 )
		goto st1047;
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3396;
	} else if ( (*p) > 86 ) {
		if ( 97 <= (*p) && (*p) <= 118 )
			goto tr3396;
	} else
		goto tr3396;
	goto tr3383;
tr3396:
#line 1107 "scanner_body.rl"
	{
		*rdata_tail += sixth_base32hex_to_num[(uint8_t)(*p)];
	}
	goto st1043;
st1043:
	if ( ++p == pe )
		goto _test_eof1043;
case 1043:
#line 84874 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3398;
	} else if ( (*p) > 86 ) {
		if ( 97 <= (*p) && (*p) <= 118 )
			goto tr3398;
	} else
		goto tr3398;
	goto tr3383;
tr3398:
#line 1110 "scanner_body.rl"
	{
		*(rdata_tail++) += seventh_left_base32hex_to_num[(uint8_t)(*p)];

		if (rdata_tail <= rdata_stop) {
			*rdata_tail = seventh_right_base32hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1044;
st1044:
	if ( ++p == pe )
		goto _test_eof1044;
case 1044:
#line 84901 "scanner.c"
	if ( (*p) == 61 )
		goto st1045;
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3399;
	} else if ( (*p) > 86 ) {
		if ( 97 <= (*p) && (*p) <= 118 )
			goto tr3399;
	} else
		goto tr3399;
	goto tr3383;
tr3399:
#line 1120 "scanner_body.rl"
	{
		*(rdata_tail++) += eighth_base32hex_to_num[(uint8_t)(*p)];
	}
	goto st1045;
st1045:
	if ( ++p == pe )
		goto _test_eof1045;
case 1045:
#line 84923 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr3401;
		case 59: goto tr3401;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 10 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr3401;
		} else if ( (*p) >= 9 )
			goto tr3401;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 86 ) {
			if ( 97 <= (*p) && (*p) <= 118 )
				goto tr3402;
		} else if ( (*p) >= 65 )
			goto tr3402;
	} else
		goto tr3402;
	goto tr3383;
tr3401:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 1424 "scanner_body.rl"
	{ p--; {stack[top++] = 1046;goto st337;} }
	goto st1046;
st1046:
	if ( ++p == pe )
		goto _test_eof1046;
case 1046:
#line 84962 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr3403;
		case 59: goto tr3403;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr3403;
	} else if ( (*p) >= 9 )
		goto tr3403;
	goto tr71;
tr3403:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1214;
st1214:
	if ( ++p == pe )
		goto _test_eof1214;
case 1214:
#line 84983 "scanner.c"
	goto st0;
st1047:
	if ( ++p == pe )
		goto _test_eof1047;
case 1047:
	if ( (*p) == 61 )
		goto st1048;
	goto tr3383;
st1048:
	if ( ++p == pe )
		goto _test_eof1048;
case 1048:
	if ( (*p) == 61 )
		goto st1045;
	goto tr3383;
st1049:
	if ( ++p == pe )
		goto _test_eof1049;
case 1049:
	if ( (*p) == 61 )
		goto st1047;
	goto tr3383;
st1050:
	if ( ++p == pe )
		goto _test_eof1050;
case 1050:
	if ( (*p) == 61 )
		goto st1051;
	goto tr3383;
st1051:
	if ( ++p == pe )
		goto _test_eof1051;
case 1051:
	if ( (*p) == 61 )
		goto st1049;
	goto tr3383;
tr3406:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st1052;
tr3382:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1052;
st1052:
	if ( ++p == pe )
		goto _test_eof1052;
case 1052:
#line 85045 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3407;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3406;
	goto tr71;
tr3409:
#line 965 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1053;
tr3375:
#line 242 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			s->item_length_location = rdata_tail++;
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 965 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1053;
st1053:
	if ( ++p == pe )
		goto _test_eof1053;
case 1053:
#line 85107 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3408;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr3408;
	} else
		goto tr3408;
	goto tr2570;
tr3408:
#line 973 "scanner_body.rl"
	{
		*rdata_tail += second_hex_to_num[(uint8_t)(*p)];
		rdata_tail++;
	}
	goto st1054;
st1054:
	if ( ++p == pe )
		goto _test_eof1054;
case 1054:
#line 85128 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3378;
		case 32: goto tr3378;
		case 40: goto tr3379;
		case 41: goto tr3380;
		case 1034: goto tr3381;
		case 1083: goto tr3382;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr3409;
	} else if ( _widec > 70 ) {
		if ( 97 <= _widec && _widec <= 102 )
			goto tr3409;
	} else
		goto tr3409;
	goto tr2570;
tr3410:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st1055;
tr3370:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1055;
st1055:
	if ( ++p == pe )
		goto _test_eof1055;
case 1055:
#line 85185 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3411;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3410;
	goto tr71;
tr3412:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st1056;
tr3358:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1056;
st1056:
	if ( ++p == pe )
		goto _test_eof1056;
case 1056:
#line 85236 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3413;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3412;
	goto tr71;
tr3414:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st1057;
tr3346:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1057;
st1057:
	if ( ++p == pe )
		goto _test_eof1057;
case 1057:
#line 85287 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3415;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3414;
	goto tr71;
st1058:
	if ( ++p == pe )
		goto _test_eof1058;
case 1058:
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr3416;
	goto tr1899;
tr3416:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1059;
tr3420:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1059;
st1059:
	if ( ++p == pe )
		goto _test_eof1059;
case 1059:
#line 85363 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3417;
		case 32: goto tr3417;
		case 40: goto tr3418;
		case 41: goto tr3419;
		case 1034: goto tr3421;
		case 1083: goto tr3422;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3420;
	goto tr1899;
tr3424:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1060;
tr3425:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1060;
tr3427:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1060;
tr3462:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1060;
tr3417:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1060;
tr3418:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1060;
tr3419:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1060;
tr3421:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1060;
st1060:
	if ( ++p == pe )
		goto _test_eof1060;
case 1060:
#line 85497 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1060;
		case 32: goto st1060;
		case 40: goto tr3424;
		case 41: goto tr3425;
		case 1034: goto tr3427;
		case 1083: goto st1070;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3426;
	goto tr1899;
tr3426:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1061;
tr3432:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1061;
st1061:
	if ( ++p == pe )
		goto _test_eof1061;
case 1061:
#line 85565 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3429;
		case 32: goto tr3429;
		case 40: goto tr3430;
		case 41: goto tr3431;
		case 1034: goto tr3433;
		case 1083: goto tr3434;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3432;
	goto tr1899;
tr3436:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1062;
tr3437:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1062;
tr3439:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1062;
tr3460:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1062;
tr3429:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1062;
tr3430:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1062;
tr3431:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1062;
tr3433:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1062;
st1062:
	if ( ++p == pe )
		goto _test_eof1062;
case 1062:
#line 85699 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1062;
		case 32: goto st1062;
		case 40: goto tr3436;
		case 41: goto tr3437;
		case 1034: goto tr3439;
		case 1083: goto st1069;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3438;
	goto tr1899;
tr3438:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1063;
tr3444:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1063;
st1063:
	if ( ++p == pe )
		goto _test_eof1063;
case 1063:
#line 85767 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3441;
		case 32: goto tr3441;
		case 40: goto tr3442;
		case 41: goto tr3443;
		case 1034: goto tr3445;
		case 1083: goto tr3446;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3444;
	goto tr1899;
tr3448:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1064;
tr3449:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1064;
tr3452:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1064;
tr3458:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1064;
tr3441:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1064;
tr3442:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1064;
tr3443:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1064;
tr3445:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1064;
st1064:
	if ( ++p == pe )
		goto _test_eof1064;
case 1064:
#line 85905 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1064;
		case 32: goto st1064;
		case 40: goto tr3448;
		case 41: goto tr3449;
		case 45: goto tr3450;
		case 1034: goto tr3452;
		case 1083: goto st1068;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr3451;
	} else if ( _widec > 70 ) {
		if ( 97 <= _widec && _widec <= 102 )
			goto tr3451;
	} else
		goto tr3451;
	goto tr2570;
tr3450:
#line 242 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			s->item_length_location = rdata_tail++;
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1065;
st1065:
	if ( ++p == pe )
		goto _test_eof1065;
case 1065:
#line 85953 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr3454;
		case 59: goto tr3454;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr3454;
	} else if ( (*p) >= 9 )
		goto tr3454;
	goto tr2570;
tr3454:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1215;
st1215:
	if ( ++p == pe )
		goto _test_eof1215;
case 1215:
#line 85985 "scanner.c"
	goto st0;
tr3456:
#line 965 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1066;
tr3451:
#line 242 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			s->item_length_location = rdata_tail++;
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 965 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1066;
st1066:
	if ( ++p == pe )
		goto _test_eof1066;
case 1066:
#line 86022 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3455;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr3455;
	} else
		goto tr3455;
	goto tr2570;
tr3455:
#line 973 "scanner_body.rl"
	{
		*rdata_tail += second_hex_to_num[(uint8_t)(*p)];
		rdata_tail++;
	}
	goto st1067;
st1067:
	if ( ++p == pe )
		goto _test_eof1067;
case 1067:
#line 86043 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr3454;
		case 59: goto tr3454;
	}
	if ( (*p) < 48 ) {
		if ( (*p) > 10 ) {
			if ( 40 <= (*p) && (*p) <= 41 )
				goto tr3454;
		} else if ( (*p) >= 9 )
			goto tr3454;
	} else if ( (*p) > 57 ) {
		if ( (*p) > 70 ) {
			if ( 97 <= (*p) && (*p) <= 102 )
				goto tr3456;
		} else if ( (*p) >= 65 )
			goto tr3456;
	} else
		goto tr3456;
	goto tr2570;
tr3457:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st1068;
tr3446:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1068;
st1068:
	if ( ++p == pe )
		goto _test_eof1068;
case 1068:
#line 86088 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3458;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3457;
	goto tr71;
tr3459:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st1069;
tr3434:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1069;
st1069:
	if ( ++p == pe )
		goto _test_eof1069;
case 1069:
#line 86139 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3460;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3459;
	goto tr71;
tr3461:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st1070;
tr3422:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1070;
st1070:
	if ( ++p == pe )
		goto _test_eof1070;
case 1070:
#line 86190 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3462;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3461;
	goto tr71;
st1071:
	if ( ++p == pe )
		goto _test_eof1071;
case 1071:
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr3463;
	goto tr1899;
tr3463:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1072;
tr3467:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1072;
st1072:
	if ( ++p == pe )
		goto _test_eof1072;
case 1072:
#line 86266 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3464;
		case 32: goto tr3464;
		case 40: goto tr3465;
		case 41: goto tr3466;
		case 1034: goto tr3468;
		case 1083: goto tr3469;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3467;
	goto tr1899;
tr3471:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1073;
tr3472:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1073;
tr3474:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1073;
tr3516:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1073;
tr3464:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1073;
tr3465:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1073;
tr3466:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1073;
tr3468:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1073;
st1073:
	if ( ++p == pe )
		goto _test_eof1073;
case 1073:
#line 86400 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1073;
		case 32: goto st1073;
		case 40: goto tr3471;
		case 41: goto tr3472;
		case 1034: goto tr3474;
		case 1083: goto st1083;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3473;
	goto tr1899;
tr3473:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1074;
tr3479:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1074;
st1074:
	if ( ++p == pe )
		goto _test_eof1074;
case 1074:
#line 86468 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3476;
		case 32: goto tr3476;
		case 40: goto tr3477;
		case 41: goto tr3478;
		case 1034: goto tr3480;
		case 1083: goto tr3481;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3479;
	goto tr1899;
tr3483:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1075;
tr3484:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1075;
tr3486:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1075;
tr3514:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1075;
tr3476:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1075;
tr3477:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1075;
tr3478:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1075;
tr3480:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1075;
st1075:
	if ( ++p == pe )
		goto _test_eof1075;
case 1075:
#line 86602 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1075;
		case 32: goto st1075;
		case 40: goto tr3483;
		case 41: goto tr3484;
		case 1034: goto tr3486;
		case 1083: goto st1082;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3485;
	goto tr1899;
tr3485:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1076;
tr3491:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1076;
st1076:
	if ( ++p == pe )
		goto _test_eof1076;
case 1076:
#line 86670 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3488;
		case 32: goto tr3488;
		case 40: goto tr3489;
		case 41: goto tr3490;
		case 1034: goto tr3492;
		case 1083: goto tr3493;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3491;
	goto tr1899;
tr3495:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1077;
tr3496:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1077;
tr3498:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1077;
tr3512:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1077;
tr3488:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1077;
tr3489:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1077;
tr3490:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1077;
tr3492:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1077;
st1077:
	if ( ++p == pe )
		goto _test_eof1077;
case 1077:
#line 86804 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1077;
		case 32: goto st1077;
		case 40: goto tr3495;
		case 41: goto tr3496;
		case 1034: goto tr3498;
		case 1083: goto st1081;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr3497;
	} else if ( _widec > 70 ) {
		if ( 97 <= _widec && _widec <= 102 )
			goto tr3497;
	} else
		goto tr3497;
	goto tr2570;
tr3497:
#line 965 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1078;
st1078:
	if ( ++p == pe )
		goto _test_eof1078;
case 1078:
#line 86851 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3500;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr3500;
	} else
		goto tr3500;
	goto tr2570;
tr3502:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1079;
tr3503:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1079;
tr3504:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1079;
tr3510:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1079;
tr3500:
#line 973 "scanner_body.rl"
	{
		*rdata_tail += second_hex_to_num[(uint8_t)(*p)];
		rdata_tail++;
	}
	goto st1079;
st1079:
	if ( ++p == pe )
		goto _test_eof1079;
case 1079:
#line 86908 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st1079;
		case 32: goto st1079;
		case 40: goto tr3502;
		case 41: goto tr3503;
		case 2058: goto tr3504;
		case 2107: goto st1080;
		case 2314: goto tr3506;
		case 2363: goto tr3506;
		case 2570: goto tr3507;
		case 2619: goto tr3508;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr3497;
	} else if ( _widec > 70 ) {
		if ( 97 <= _widec && _widec <= 102 )
			goto tr3497;
	} else
		goto tr3497;
	goto tr2570;
tr3509:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st1080;
st1080:
	if ( ++p == pe )
		goto _test_eof1080;
case 1080:
#line 86962 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3510;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3509;
	goto tr2570;
tr3506:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1216;
st1216:
	if ( ++p == pe )
		goto _test_eof1216;
case 1216:
#line 86999 "scanner.c"
	goto st0;
tr3507:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1217;
st1217:
	if ( ++p == pe )
		goto _test_eof1217;
case 1217:
#line 87015 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(1664 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
			if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(1664 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		if ( 
#line 76 "scanner_body.rl"
 !s->multiline  ) _widec += 512;
	}
	switch( _widec ) {
		case 9: goto st1079;
		case 32: goto st1079;
		case 40: goto tr3502;
		case 41: goto tr3503;
		case 2058: goto tr3504;
		case 2107: goto st1080;
		case 2314: goto tr3506;
		case 2363: goto tr3506;
		case 2570: goto tr3507;
		case 2619: goto tr3508;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr3497;
	} else if ( _widec > 70 ) {
		if ( 97 <= _widec && _widec <= 102 )
			goto tr3497;
	} else
		goto tr3497;
	goto tr2570;
tr3508:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1218;
st1218:
	if ( ++p == pe )
		goto _test_eof1218;
case 1218:
#line 87067 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3510;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3509;
	goto tr2570;
tr3511:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st1081;
tr3493:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1081;
st1081:
	if ( ++p == pe )
		goto _test_eof1081;
case 1081:
#line 87118 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3512;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3511;
	goto tr71;
tr3513:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st1082;
tr3481:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1082;
st1082:
	if ( ++p == pe )
		goto _test_eof1082;
case 1082:
#line 87169 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3514;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3513;
	goto tr71;
tr3515:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st1083;
tr3469:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1083;
st1083:
	if ( ++p == pe )
		goto _test_eof1083;
case 1083:
#line 87220 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3516;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3515;
	goto tr71;
st1084:
	if ( ++p == pe )
		goto _test_eof1084;
case 1084:
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr3517;
	goto tr1899;
tr3517:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1085;
tr3521:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1085;
st1085:
	if ( ++p == pe )
		goto _test_eof1085;
case 1085:
#line 87296 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3518;
		case 32: goto tr3518;
		case 40: goto tr3519;
		case 41: goto tr3520;
		case 1034: goto tr3522;
		case 1083: goto tr3523;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3521;
	goto tr1899;
tr3525:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1086;
tr3526:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1086;
tr3528:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1086;
tr3533:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1086;
tr3518:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1086;
tr3519:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1086;
tr3520:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1086;
tr3522:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1086;
st1086:
	if ( ++p == pe )
		goto _test_eof1086;
case 1086:
#line 87434 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1086;
		case 32: goto st1086;
		case 40: goto tr3525;
		case 41: goto tr3526;
		case 46: goto tr3527;
		case 1034: goto tr3528;
		case 1083: goto st1088;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3527;
	goto tr1876;
tr3527:
#line 835 "scanner_body.rl"
	{
		s->buffer_length = 0;
	}
#line 838 "scanner_body.rl"
	{
		if (s->buffer_length < MAX_RDATA_LENGTH) {
			s->buffer[s->buffer_length++] = (*p);
		}
		else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1087;
tr3531:
#line 838 "scanner_body.rl"
	{
		if (s->buffer_length < MAX_RDATA_LENGTH) {
			s->buffer[s->buffer_length++] = (*p);
		}
		else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1087;
st1087:
	if ( ++p == pe )
		goto _test_eof1087;
case 1087:
#line 87493 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr3530;
		case 46: goto tr3531;
		case 59: goto tr3530;
	}
	if ( (*p) < 40 ) {
		if ( 9 <= (*p) && (*p) <= 10 )
			goto tr3530;
	} else if ( (*p) > 41 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3531;
	} else
		goto tr3530;
	goto tr1876;
tr3530:
#line 852 "scanner_body.rl"
	{
		s->buffer[s->buffer_length] = 0;

		if (inet_pton(AF_INET, (char *)s->buffer, &addr4) <= 0) {
			WARN(ZS_BAD_IPV4);
			p--; {goto st269;}
		}
	}
#line 860 "scanner_body.rl"
	{
		memcpy(rdata_tail, &(addr4.s_addr), INET4_ADDR_LENGTH);
		rdata_tail += INET4_ADDR_LENGTH;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1219;
st1219:
	if ( ++p == pe )
		goto _test_eof1219;
case 1219:
#line 87532 "scanner.c"
	goto st0;
tr3532:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st1088;
tr3523:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1088;
st1088:
	if ( ++p == pe )
		goto _test_eof1088;
case 1088:
#line 87559 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3533;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3532;
	goto tr71;
st1089:
	if ( ++p == pe )
		goto _test_eof1089;
case 1089:
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr3534;
	goto tr1899;
tr3534:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1090;
tr3538:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1090;
st1090:
	if ( ++p == pe )
		goto _test_eof1090;
case 1090:
#line 87635 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3535;
		case 32: goto tr3535;
		case 40: goto tr3536;
		case 41: goto tr3537;
		case 1034: goto tr3539;
		case 1083: goto tr3540;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3538;
	goto tr1899;
tr3542:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1091;
tr3543:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1091;
tr3545:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1091;
tr3559:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1091;
tr3535:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1091;
tr3536:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1091;
tr3537:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1091;
tr3539:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1091;
st1091:
	if ( ++p == pe )
		goto _test_eof1091;
case 1091:
#line 87773 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1091;
		case 32: goto st1091;
		case 40: goto tr3542;
		case 41: goto tr3543;
		case 1034: goto tr3545;
		case 1083: goto st1101;
	}
	if ( _widec < 65 ) {
		if ( 48 <= _widec && _widec <= 57 )
			goto tr3544;
	} else if ( _widec > 70 ) {
		if ( 97 <= _widec && _widec <= 102 )
			goto tr3544;
	} else
		goto tr3544;
	goto tr2570;
tr3544:
#line 1633 "scanner_body.rl"
	{
		s->item_length = 0;
	}
#line 965 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1092;
st1092:
	if ( ++p == pe )
		goto _test_eof1092;
case 1092:
#line 87824 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3547;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr3547;
	} else
		goto tr3547;
	goto tr2570;
tr3547:
#line 973 "scanner_body.rl"
	{
		*rdata_tail += second_hex_to_num[(uint8_t)(*p)];
		rdata_tail++;
	}
	goto st1093;
st1093:
	if ( ++p == pe )
		goto _test_eof1093;
case 1093:
#line 87845 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3548;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr3548;
	} else
		goto tr3548;
	goto tr2570;
tr3548:
#line 965 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1094;
st1094:
	if ( ++p == pe )
		goto _test_eof1094;
case 1094:
#line 87870 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3549;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr3549;
	} else
		goto tr3549;
	goto tr2570;
tr3549:
#line 973 "scanner_body.rl"
	{
		*rdata_tail += second_hex_to_num[(uint8_t)(*p)];
		rdata_tail++;
	}
	goto st1095;
st1095:
	if ( ++p == pe )
		goto _test_eof1095;
case 1095:
#line 87891 "scanner.c"
	if ( (*p) == 58 )
		goto tr3551;
	goto tr3550;
tr3551:
#line 1636 "scanner_body.rl"
	{
		s->item_length++;
	}
	goto st1096;
st1096:
	if ( ++p == pe )
		goto _test_eof1096;
case 1096:
#line 87905 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3552;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr3552;
	} else
		goto tr3552;
	goto tr2570;
tr3552:
#line 965 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1097;
st1097:
	if ( ++p == pe )
		goto _test_eof1097;
case 1097:
#line 87930 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3553;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr3553;
	} else
		goto tr3553;
	goto tr2570;
tr3553:
#line 973 "scanner_body.rl"
	{
		*rdata_tail += second_hex_to_num[(uint8_t)(*p)];
		rdata_tail++;
	}
	goto st1098;
st1098:
	if ( ++p == pe )
		goto _test_eof1098;
case 1098:
#line 87951 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3554;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr3554;
	} else
		goto tr3554;
	goto tr2570;
tr3554:
#line 965 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1099;
st1099:
	if ( ++p == pe )
		goto _test_eof1099;
case 1099:
#line 87976 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3555;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr3555;
	} else
		goto tr3555;
	goto tr2570;
tr3555:
#line 973 "scanner_body.rl"
	{
		*rdata_tail += second_hex_to_num[(uint8_t)(*p)];
		rdata_tail++;
	}
	goto st1100;
st1100:
	if ( ++p == pe )
		goto _test_eof1100;
case 1100:
#line 87997 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr3557;
		case 58: goto tr3551;
		case 59: goto tr3557;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr3557;
	} else if ( (*p) >= 9 )
		goto tr3557;
	goto tr3556;
tr3557:
#line 1636 "scanner_body.rl"
	{
		s->item_length++;
	}
#line 1639 "scanner_body.rl"
	{
		if (s->item_length != 4) {
			WARN(ZS_BAD_L64_LENGTH);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1220;
st1220:
	if ( ++p == pe )
		goto _test_eof1220;
case 1220:
#line 88030 "scanner.c"
	goto st0;
tr3558:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st1101;
tr3540:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1101;
st1101:
	if ( ++p == pe )
		goto _test_eof1101;
case 1101:
#line 88057 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3559;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3558;
	goto tr71;
st1102:
	if ( ++p == pe )
		goto _test_eof1102;
case 1102:
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3560;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr3560;
	} else
		goto tr3560;
	goto tr2570;
tr3560:
#line 1600 "scanner_body.rl"
	{
		s->item_length = 0;
	}
#line 965 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1103;
st1103:
	if ( ++p == pe )
		goto _test_eof1103;
case 1103:
#line 88116 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3561;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr3561;
	} else
		goto tr3561;
	goto tr2570;
tr3561:
#line 973 "scanner_body.rl"
	{
		*rdata_tail += second_hex_to_num[(uint8_t)(*p)];
		rdata_tail++;
	}
	goto st1104;
st1104:
	if ( ++p == pe )
		goto _test_eof1104;
case 1104:
#line 88137 "scanner.c"
	if ( (*p) == 45 )
		goto tr3563;
	goto tr3562;
tr3563:
#line 1603 "scanner_body.rl"
	{
		s->item_length++;
	}
	goto st1105;
st1105:
	if ( ++p == pe )
		goto _test_eof1105;
case 1105:
#line 88151 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3564;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr3564;
	} else
		goto tr3564;
	goto tr2570;
tr3564:
#line 965 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1106;
st1106:
	if ( ++p == pe )
		goto _test_eof1106;
case 1106:
#line 88176 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3565;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr3565;
	} else
		goto tr3565;
	goto tr2570;
tr3565:
#line 973 "scanner_body.rl"
	{
		*rdata_tail += second_hex_to_num[(uint8_t)(*p)];
		rdata_tail++;
	}
	goto st1107;
st1107:
	if ( ++p == pe )
		goto _test_eof1107;
case 1107:
#line 88197 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr3566;
		case 45: goto tr3563;
		case 59: goto tr3566;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr3566;
	} else if ( (*p) >= 9 )
		goto tr3566;
	goto tr3562;
tr3566:
#line 1603 "scanner_body.rl"
	{
		s->item_length++;
	}
#line 1606 "scanner_body.rl"
	{
		if (s->item_length != 6) {
			WARN(ZS_BAD_EUI_LENGTH);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1221;
st1221:
	if ( ++p == pe )
		goto _test_eof1221;
case 1221:
#line 88230 "scanner.c"
	goto st0;
st1108:
	if ( ++p == pe )
		goto _test_eof1108;
case 1108:
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3567;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr3567;
	} else
		goto tr3567;
	goto tr2570;
tr3567:
#line 1600 "scanner_body.rl"
	{
		s->item_length = 0;
	}
#line 965 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1109;
st1109:
	if ( ++p == pe )
		goto _test_eof1109;
case 1109:
#line 88264 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3568;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr3568;
	} else
		goto tr3568;
	goto tr2570;
tr3568:
#line 973 "scanner_body.rl"
	{
		*rdata_tail += second_hex_to_num[(uint8_t)(*p)];
		rdata_tail++;
	}
	goto st1110;
st1110:
	if ( ++p == pe )
		goto _test_eof1110;
case 1110:
#line 88285 "scanner.c"
	if ( (*p) == 45 )
		goto tr3569;
	goto tr3562;
tr3569:
#line 1603 "scanner_body.rl"
	{
		s->item_length++;
	}
	goto st1111;
st1111:
	if ( ++p == pe )
		goto _test_eof1111;
case 1111:
#line 88299 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3570;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr3570;
	} else
		goto tr3570;
	goto tr2570;
tr3570:
#line 965 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			*rdata_tail = first_hex_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1112;
st1112:
	if ( ++p == pe )
		goto _test_eof1112;
case 1112:
#line 88324 "scanner.c"
	if ( (*p) < 65 ) {
		if ( 48 <= (*p) && (*p) <= 57 )
			goto tr3571;
	} else if ( (*p) > 70 ) {
		if ( 97 <= (*p) && (*p) <= 102 )
			goto tr3571;
	} else
		goto tr3571;
	goto tr2570;
tr3571:
#line 973 "scanner_body.rl"
	{
		*rdata_tail += second_hex_to_num[(uint8_t)(*p)];
		rdata_tail++;
	}
	goto st1113;
st1113:
	if ( ++p == pe )
		goto _test_eof1113;
case 1113:
#line 88345 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr3572;
		case 45: goto tr3569;
		case 59: goto tr3572;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr3572;
	} else if ( (*p) >= 9 )
		goto tr3572;
	goto tr3562;
tr3572:
#line 1603 "scanner_body.rl"
	{
		s->item_length++;
	}
#line 1612 "scanner_body.rl"
	{
		if (s->item_length != 8) {
			WARN(ZS_BAD_EUI_LENGTH);
			p--; {goto st269;}
		}
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1222;
st1222:
	if ( ++p == pe )
		goto _test_eof1222;
case 1222:
#line 88378 "scanner.c"
	goto st0;
st1114:
	if ( ++p == pe )
		goto _test_eof1114;
case 1114:
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr3573;
	goto tr1899;
tr3573:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1115;
tr3577:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1115;
st1115:
	if ( ++p == pe )
		goto _test_eof1115;
case 1115:
#line 88429 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3574;
		case 32: goto tr3574;
		case 40: goto tr3575;
		case 41: goto tr3576;
		case 1034: goto tr3578;
		case 1083: goto tr3579;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3577;
	goto tr1899;
tr3581:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1116;
tr3582:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1116;
tr3584:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1116;
tr3602:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1116;
tr3574:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1116;
tr3575:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1116;
tr3576:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1116;
tr3578:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1116;
st1116:
	if ( ++p == pe )
		goto _test_eof1116;
case 1116:
#line 88567 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1116;
		case 32: goto st1116;
		case 40: goto tr3581;
		case 41: goto tr3582;
		case 1034: goto tr3584;
		case 1083: goto st1121;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3583;
	goto tr1899;
tr3583:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1117;
tr3589:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1117;
st1117:
	if ( ++p == pe )
		goto _test_eof1117;
case 1117:
#line 88635 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3586;
		case 32: goto tr3586;
		case 40: goto tr3587;
		case 41: goto tr3588;
		case 1034: goto tr3590;
		case 1083: goto tr3591;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3589;
	goto tr1899;
tr3594:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1118;
tr3595:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1118;
tr3596:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1118;
tr3600:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1118;
tr3586:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1118;
tr3587:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1118;
tr3588:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1118;
tr3590:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1118;
st1118:
	if ( ++p == pe )
		goto _test_eof1118;
case 1118:
#line 88773 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1118;
		case 32: goto st1118;
		case 40: goto tr3594;
		case 41: goto tr3595;
		case 1034: goto tr3596;
		case 1083: goto st1120;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr3592;
	} else if ( _widec > 58 ) {
		if ( 60 <= _widec )
			goto tr3592;
	} else
		goto tr3592;
	goto tr71;
tr3592:
#line 629 "scanner_body.rl"
	{ p--; {stack[top++] = 1119;goto st280;} }
	goto st1119;
st1119:
	if ( ++p == pe )
		goto _test_eof1119;
case 1119:
#line 88813 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr3598;
		case 59: goto tr3598;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr3598;
	} else if ( (*p) >= 9 )
		goto tr3598;
	goto tr71;
tr3598:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1223;
st1223:
	if ( ++p == pe )
		goto _test_eof1223;
case 1223:
#line 88834 "scanner.c"
	goto st0;
tr3599:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st1120;
tr3591:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1120;
st1120:
	if ( ++p == pe )
		goto _test_eof1120;
case 1120:
#line 88861 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3600;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3599;
	goto tr71;
tr3601:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st1121;
tr3579:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1121;
st1121:
	if ( ++p == pe )
		goto _test_eof1121;
case 1121:
#line 88913 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3602;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3601;
	goto tr71;
st1122:
	if ( ++p == pe )
		goto _test_eof1122;
case 1122:
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr3603;
	goto tr1899;
tr3603:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1123;
tr3607:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1123;
st1123:
	if ( ++p == pe )
		goto _test_eof1123;
case 1123:
#line 88989 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3604;
		case 32: goto tr3604;
		case 40: goto tr3605;
		case 41: goto tr3606;
		case 1034: goto tr3608;
		case 1083: goto tr3609;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3607;
	goto tr1899;
tr3612:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1124;
tr3613:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1124;
tr3614:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1124;
tr3631:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1124;
tr3604:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1124;
tr3605:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1124;
tr3606:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1124;
tr3608:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1124;
st1124:
	if ( ++p == pe )
		goto _test_eof1124;
case 1124:
#line 89123 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1124;
		case 32: goto st1124;
		case 40: goto tr3612;
		case 41: goto tr3613;
		case 1034: goto tr3614;
		case 1083: goto st1129;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr3610;
	} else if ( _widec > 58 ) {
		if ( 60 <= _widec )
			goto tr3610;
	} else
		goto tr3610;
	goto tr71;
tr3610:
#line 242 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			s->item_length_location = rdata_tail++;
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 629 "scanner_body.rl"
	{ p--; {stack[top++] = 1125;goto st280;} }
	goto st1125;
st1125:
	if ( ++p == pe )
		goto _test_eof1125;
case 1125:
#line 89172 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3616;
		case 32: goto tr3616;
		case 40: goto tr3617;
		case 41: goto tr3618;
		case 1034: goto tr3619;
		case 1083: goto tr3620;
	}
	goto tr71;
tr3623:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1126;
tr3624:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1126;
tr3625:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1126;
tr3629:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1126;
tr3616:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1126;
tr3617:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1126;
tr3618:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1126;
tr3619:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1126;
st1126:
	if ( ++p == pe )
		goto _test_eof1126;
case 1126:
#line 89308 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1126;
		case 32: goto st1126;
		case 40: goto tr3623;
		case 41: goto tr3624;
		case 1034: goto tr3625;
		case 1083: goto st1128;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr3621;
	} else if ( _widec > 58 ) {
		if ( 60 <= _widec )
			goto tr3621;
	} else
		goto tr3621;
	goto tr71;
tr3621:
#line 629 "scanner_body.rl"
	{ p--; {stack[top++] = 1127;goto st280;} }
	goto st1127;
st1127:
	if ( ++p == pe )
		goto _test_eof1127;
case 1127:
#line 89348 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr3627;
		case 59: goto tr3627;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr3627;
	} else if ( (*p) >= 9 )
		goto tr3627;
	goto tr71;
tr3627:
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1224;
st1224:
	if ( ++p == pe )
		goto _test_eof1224;
case 1224:
#line 89369 "scanner.c"
	goto st0;
tr3628:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st1128;
tr3620:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1128;
st1128:
	if ( ++p == pe )
		goto _test_eof1128;
case 1128:
#line 89396 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3629;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3628;
	goto tr71;
tr3630:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st1129;
tr3609:
#line 366 "scanner_body.rl"
	{
		if (s->number64 <= UINT8_MAX) {
			*rdata_tail = (uint8_t)(s->number64);
			rdata_tail += 1;
		} else {
			WARN(ZS_NUMBER8_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1129;
st1129:
	if ( ++p == pe )
		goto _test_eof1129;
case 1129:
#line 89447 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3631;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3630;
	goto tr71;
st1130:
	if ( ++p == pe )
		goto _test_eof1130;
case 1130:
	if ( 48 <= (*p) && (*p) <= 57 )
		goto tr3632;
	goto tr1899;
tr3632:
#line 316 "scanner_body.rl"
	{
		s->number64 = 0;
	}
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1131;
tr3636:
#line 299 "scanner_body.rl"
	{
		// Overflow check: 10*(s->number64) + fc - '0' <= UINT64_MAX
		if ((s->number64 < (UINT64_MAX / 10)) ||   // Dominant fast check.
			((s->number64 == (UINT64_MAX / 10)) && // Marginal case.
			 ((uint8_t)(*p) <= (UINT64_MAX % 10) + '0')
			)
		   ) {
			s->number64 *= 10;
			s->number64 += digit_to_num[(uint8_t)(*p)];
		} else {
			WARN(ZS_NUMBER64_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1131;
st1131:
	if ( ++p == pe )
		goto _test_eof1131;
case 1131:
#line 89523 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3633;
		case 32: goto tr3633;
		case 40: goto tr3634;
		case 41: goto tr3635;
		case 1034: goto tr3637;
		case 1083: goto tr3638;
	}
	if ( 48 <= _widec && _widec <= 57 )
		goto tr3636;
	goto tr1899;
tr3641:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1132;
tr3642:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1132;
tr3643:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1132;
tr3660:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1132;
tr3633:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1132;
tr3634:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1132;
tr3635:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1132;
tr3637:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1132;
st1132:
	if ( ++p == pe )
		goto _test_eof1132;
case 1132:
#line 89661 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1132;
		case 32: goto st1132;
		case 40: goto tr3641;
		case 41: goto tr3642;
		case 1034: goto tr3643;
		case 1083: goto st1137;
	}
	if ( _widec < 11 ) {
		if ( _widec <= 8 )
			goto tr3639;
	} else if ( _widec > 58 ) {
		if ( 60 <= _widec )
			goto tr3639;
	} else
		goto tr3639;
	goto tr71;
tr3639:
#line 242 "scanner_body.rl"
	{
		if (rdata_tail <= rdata_stop) {
			s->item_length_location = rdata_tail++;
		} else {
			WARN(ZS_RDATA_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 629 "scanner_body.rl"
	{ p--; {stack[top++] = 1133;goto st280;} }
	goto st1133;
st1133:
	if ( ++p == pe )
		goto _test_eof1133;
case 1133:
#line 89710 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto tr3645;
		case 32: goto tr3645;
		case 40: goto tr3646;
		case 41: goto tr3647;
		case 1034: goto tr3648;
		case 1083: goto tr3649;
	}
	goto tr71;
tr3651:
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1134;
tr3652:
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1134;
tr3654:
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1134;
tr3658:
#line 49 "scanner_body.rl"
	{
		s->buffer[s->buffer_length++] = 0;
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1134;
tr3645:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1134;
tr3646:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 29 "scanner_body.rl"
	{
		if (s->multiline == true) {
			ERR(ZS_LEFT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = true;
	}
	goto st1134;
tr3647:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 36 "scanner_body.rl"
	{
		if (s->multiline == false) {
			ERR(ZS_RIGHT_PARENTHESIS);
			p--; {goto st269;}
		}
		s->multiline = false;
	}
	goto st1134;
tr3648:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
#line 25 "scanner_body.rl"
	{
		s->line_counter++;
	}
	goto st1134;
st1134:
	if ( ++p == pe )
		goto _test_eof1134;
case 1134:
#line 89846 "scanner.c"
	_widec = (*p);
	if ( (*p) > 10 ) {
		if ( 59 <= (*p) && (*p) <= 59 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) >= 10 ) {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	switch( _widec ) {
		case 9: goto st1134;
		case 32: goto st1134;
		case 40: goto tr3651;
		case 41: goto tr3652;
		case 42: goto tr3653;
		case 92: goto tr3653;
		case 95: goto tr3653;
		case 1034: goto tr3654;
		case 1083: goto st1136;
	}
	if ( _widec < 64 ) {
		if ( 45 <= _widec && _widec <= 57 )
			goto tr3653;
	} else if ( _widec > 90 ) {
		if ( 97 <= _widec && _widec <= 122 )
			goto tr3653;
	} else
		goto tr3653;
	goto tr71;
tr3653:
#line 288 "scanner_body.rl"
	{
		s->dname = rdata_tail;
	}
#line 238 "scanner_body.rl"
	{ p--; {stack[top++] = 1135;goto st271;} }
	goto st1135;
st1135:
	if ( ++p == pe )
		goto _test_eof1135;
case 1135:
#line 89893 "scanner.c"
	switch( (*p) ) {
		case 32: goto tr3656;
		case 59: goto tr3656;
	}
	if ( (*p) > 10 ) {
		if ( 40 <= (*p) && (*p) <= 41 )
			goto tr3656;
	} else if ( (*p) >= 9 )
		goto tr3656;
	goto tr71;
tr3656:
#line 291 "scanner_body.rl"
	{
		rdata_tail += s->dname_tmp_length;
	}
#line 20 "scanner_body.rl"
	{
		p--; {cs = stack[--top];goto _again;}
	}
	goto st1225;
st1225:
	if ( ++p == pe )
		goto _test_eof1225;
case 1225:
#line 89918 "scanner.c"
	goto st0;
tr3657:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st1136;
tr3649:
#line 250 "scanner_body.rl"
	{
		s->item_length = rdata_tail - s->item_length_location - 1;

		if (s->item_length <= MAX_ITEM_LENGTH) {
			*(s->item_length_location) = (uint8_t)(s->item_length);
		} else {
			WARN(ZS_ITEM_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1136;
st1136:
	if ( ++p == pe )
		goto _test_eof1136;
case 1136:
#line 89945 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3658;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3657;
	goto tr71;
tr3659:
#line 44 "scanner_body.rl"
	{
		if (s->buffer_length < sizeof(s->buffer) - 1) {
			s->buffer[s->buffer_length++] = (*p);
		}
	}
	goto st1137;
tr3638:
#line 375 "scanner_body.rl"
	{
		if (s->number64 <= UINT16_MAX) {
			uint16_t num16 = htons((uint16_t)s->number64);
			memcpy(rdata_tail, &num16, 2);
			rdata_tail += 2;
		} else {
			WARN(ZS_NUMBER16_OVERFLOW);
			p--; {goto st269;}
		}
	}
	goto st1137;
st1137:
	if ( ++p == pe )
		goto _test_eof1137;
case 1137:
#line 89997 "scanner.c"
	_widec = (*p);
	if ( (*p) < 10 ) {
		if ( (*p) <= 9 ) {
			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else if ( (*p) > 10 ) {
		if ( 11 <= (*p) )
 {			_widec = (short)(640 + ((*p) - -128));
			if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
		}
	} else {
		_widec = (short)(640 + ((*p) - -128));
		if ( 
#line 67 "scanner_body.rl"
 s->multiline  ) _widec += 256;
	}
	if ( _widec == 1034 )
		goto tr3660;
	if ( 896 <= _widec && _widec <= 1151 )
		goto tr3659;
	goto tr71;
	}
	_test_eof1138: cs = 1138; goto _test_eof; 
	_test_eof1: cs = 1; goto _test_eof; 
	_test_eof2: cs = 2; goto _test_eof; 
	_test_eof3: cs = 3; goto _test_eof; 
	_test_eof4: cs = 4; goto _test_eof; 
	_test_eof5: cs = 5; goto _test_eof; 
	_test_eof6: cs = 6; goto _test_eof; 
	_test_eof7: cs = 7; goto _test_eof; 
	_test_eof8: cs = 8; goto _test_eof; 
	_test_eof9: cs = 9; goto _test_eof; 
	_test_eof10: cs = 10; goto _test_eof; 
	_test_eof11: cs = 11; goto _test_eof; 
	_test_eof12: cs = 12; goto _test_eof; 
	_test_eof13: cs = 13; goto _test_eof; 
	_test_eof1139: cs = 1139; goto _test_eof; 
	_test_eof14: cs = 14; goto _test_eof; 
	_test_eof15: cs = 15; goto _test_eof; 
	_test_eof16: cs = 16; goto _test_eof; 
	_test_eof17: cs = 17; goto _test_eof; 
	_test_eof18: cs = 18; goto _test_eof; 
	_test_eof19: cs = 19; goto _test_eof; 
	_test_eof20: cs = 20; goto _test_eof; 
	_test_eof21: cs = 21; goto _test_eof; 
	_test_eof22: cs = 22; goto _test_eof; 
	_test_eof23: cs = 23; goto _test_eof; 
	_test_eof24: cs = 24; goto _test_eof; 
	_test_eof25: cs = 25; goto _test_eof; 
	_test_eof26: cs = 26; goto _test_eof; 
	_test_eof27: cs = 27; goto _test_eof; 
	_test_eof28: cs = 28; goto _test_eof; 
	_test_eof29: cs = 29; goto _test_eof; 
	_test_eof30: cs = 30; goto _test_eof; 
	_test_eof31: cs = 31; goto _test_eof; 
	_test_eof32: cs = 32; goto _test_eof; 
	_test_eof33: cs = 33; goto _test_eof; 
	_test_eof34: cs = 34; goto _test_eof; 
	_test_eof35: cs = 35; goto _test_eof; 
	_test_eof36: cs = 36; goto _test_eof; 
	_test_eof37: cs = 37; goto _test_eof; 
	_test_eof38: cs = 38; goto _test_eof; 
	_test_eof39: cs = 39; goto _test_eof; 
	_test_eof40: cs = 40; goto _test_eof; 
	_test_eof41: cs = 41; goto _test_eof; 
	_test_eof42: cs = 42; goto _test_eof; 
	_test_eof43: cs = 43; goto _test_eof; 
	_test_eof44: cs = 44; goto _test_eof; 
	_test_eof45: cs = 45; goto _test_eof; 
	_test_eof46: cs = 46; goto _test_eof; 
	_test_eof47: cs = 47; goto _test_eof; 
	_test_eof48: cs = 48; goto _test_eof; 
	_test_eof49: cs = 49; goto _test_eof; 
	_test_eof50: cs = 50; goto _test_eof; 
	_test_eof51: cs = 51; goto _test_eof; 
	_test_eof52: cs = 52; goto _test_eof; 
	_test_eof53: cs = 53; goto _test_eof; 
	_test_eof54: cs = 54; goto _test_eof; 
	_test_eof55: cs = 55; goto _test_eof; 
	_test_eof56: cs = 56; goto _test_eof; 
	_test_eof57: cs = 57; goto _test_eof; 
	_test_eof58: cs = 58; goto _test_eof; 
	_test_eof59: cs = 59; goto _test_eof; 
	_test_eof60: cs = 60; goto _test_eof; 
	_test_eof61: cs = 61; goto _test_eof; 
	_test_eof62: cs = 62; goto _test_eof; 
	_test_eof63: cs = 63; goto _test_eof; 
	_test_eof64: cs = 64; goto _test_eof; 
	_test_eof65: cs = 65; goto _test_eof; 
	_test_eof66: cs = 66; goto _test_eof; 
	_test_eof67: cs = 67; goto _test_eof; 
	_test_eof68: cs = 68; goto _test_eof; 
	_test_eof69: cs = 69; goto _test_eof; 
	_test_eof70: cs = 70; goto _test_eof; 
	_test_eof71: cs = 71; goto _test_eof; 
	_test_eof72: cs = 72; goto _test_eof; 
	_test_eof73: cs = 73; goto _test_eof; 
	_test_eof74: cs = 74; goto _test_eof; 
	_test_eof75: cs = 75; goto _test_eof; 
	_test_eof76: cs = 76; goto _test_eof; 
	_test_eof77: cs = 77; goto _test_eof; 
	_test_eof78: cs = 78; goto _test_eof; 
	_test_eof79: cs = 79; goto _test_eof; 
	_test_eof80: cs = 80; goto _test_eof; 
	_test_eof81: cs = 81; goto _test_eof; 
	_test_eof82: cs = 82; goto _test_eof; 
	_test_eof83: cs = 83; goto _test_eof; 
	_test_eof84: cs = 84; goto _test_eof; 
	_test_eof85: cs = 85; goto _test_eof; 
	_test_eof86: cs = 86; goto _test_eof; 
	_test_eof87: cs = 87; goto _test_eof; 
	_test_eof88: cs = 88; goto _test_eof; 
	_test_eof89: cs = 89; goto _test_eof; 
	_test_eof90: cs = 90; goto _test_eof; 
	_test_eof91: cs = 91; goto _test_eof; 
	_test_eof92: cs = 92; goto _test_eof; 
	_test_eof93: cs = 93; goto _test_eof; 
	_test_eof94: cs = 94; goto _test_eof; 
	_test_eof95: cs = 95; goto _test_eof; 
	_test_eof96: cs = 96; goto _test_eof; 
	_test_eof97: cs = 97; goto _test_eof; 
	_test_eof98: cs = 98; goto _test_eof; 
	_test_eof99: cs = 99; goto _test_eof; 
	_test_eof100: cs = 100; goto _test_eof; 
	_test_eof101: cs = 101; goto _test_eof; 
	_test_eof102: cs = 102; goto _test_eof; 
	_test_eof103: cs = 103; goto _test_eof; 
	_test_eof104: cs = 104; goto _test_eof; 
	_test_eof105: cs = 105; goto _test_eof; 
	_test_eof106: cs = 106; goto _test_eof; 
	_test_eof107: cs = 107; goto _test_eof; 
	_test_eof108: cs = 108; goto _test_eof; 
	_test_eof109: cs = 109; goto _test_eof; 
	_test_eof110: cs = 110; goto _test_eof; 
	_test_eof111: cs = 111; goto _test_eof; 
	_test_eof112: cs = 112; goto _test_eof; 
	_test_eof113: cs = 113; goto _test_eof; 
	_test_eof114: cs = 114; goto _test_eof; 
	_test_eof115: cs = 115; goto _test_eof; 
	_test_eof116: cs = 116; goto _test_eof; 
	_test_eof117: cs = 117; goto _test_eof; 
	_test_eof118: cs = 118; goto _test_eof; 
	_test_eof119: cs = 119; goto _test_eof; 
	_test_eof120: cs = 120; goto _test_eof; 
	_test_eof121: cs = 121; goto _test_eof; 
	_test_eof122: cs = 122; goto _test_eof; 
	_test_eof123: cs = 123; goto _test_eof; 
	_test_eof124: cs = 124; goto _test_eof; 
	_test_eof125: cs = 125; goto _test_eof; 
	_test_eof126: cs = 126; goto _test_eof; 
	_test_eof127: cs = 127; goto _test_eof; 
	_test_eof128: cs = 128; goto _test_eof; 
	_test_eof129: cs = 129; goto _test_eof; 
	_test_eof130: cs = 130; goto _test_eof; 
	_test_eof131: cs = 131; goto _test_eof; 
	_test_eof132: cs = 132; goto _test_eof; 
	_test_eof133: cs = 133; goto _test_eof; 
	_test_eof134: cs = 134; goto _test_eof; 
	_test_eof135: cs = 135; goto _test_eof; 
	_test_eof136: cs = 136; goto _test_eof; 
	_test_eof137: cs = 137; goto _test_eof; 
	_test_eof138: cs = 138; goto _test_eof; 
	_test_eof139: cs = 139; goto _test_eof; 
	_test_eof140: cs = 140; goto _test_eof; 
	_test_eof141: cs = 141; goto _test_eof; 
	_test_eof142: cs = 142; goto _test_eof; 
	_test_eof1140: cs = 1140; goto _test_eof; 
	_test_eof143: cs = 143; goto _test_eof; 
	_test_eof144: cs = 144; goto _test_eof; 
	_test_eof145: cs = 145; goto _test_eof; 
	_test_eof146: cs = 146; goto _test_eof; 
	_test_eof147: cs = 147; goto _test_eof; 
	_test_eof148: cs = 148; goto _test_eof; 
	_test_eof149: cs = 149; goto _test_eof; 
	_test_eof150: cs = 150; goto _test_eof; 
	_test_eof151: cs = 151; goto _test_eof; 
	_test_eof152: cs = 152; goto _test_eof; 
	_test_eof1141: cs = 1141; goto _test_eof; 
	_test_eof153: cs = 153; goto _test_eof; 
	_test_eof154: cs = 154; goto _test_eof; 
	_test_eof155: cs = 155; goto _test_eof; 
	_test_eof156: cs = 156; goto _test_eof; 
	_test_eof157: cs = 157; goto _test_eof; 
	_test_eof158: cs = 158; goto _test_eof; 
	_test_eof159: cs = 159; goto _test_eof; 
	_test_eof160: cs = 160; goto _test_eof; 
	_test_eof1142: cs = 1142; goto _test_eof; 
	_test_eof161: cs = 161; goto _test_eof; 
	_test_eof162: cs = 162; goto _test_eof; 
	_test_eof163: cs = 163; goto _test_eof; 
	_test_eof1143: cs = 1143; goto _test_eof; 
	_test_eof164: cs = 164; goto _test_eof; 
	_test_eof165: cs = 165; goto _test_eof; 
	_test_eof166: cs = 166; goto _test_eof; 
	_test_eof167: cs = 167; goto _test_eof; 
	_test_eof168: cs = 168; goto _test_eof; 
	_test_eof169: cs = 169; goto _test_eof; 
	_test_eof170: cs = 170; goto _test_eof; 
	_test_eof171: cs = 171; goto _test_eof; 
	_test_eof172: cs = 172; goto _test_eof; 
	_test_eof173: cs = 173; goto _test_eof; 
	_test_eof174: cs = 174; goto _test_eof; 
	_test_eof1144: cs = 1144; goto _test_eof; 
	_test_eof175: cs = 175; goto _test_eof; 
	_test_eof176: cs = 176; goto _test_eof; 
	_test_eof177: cs = 177; goto _test_eof; 
	_test_eof178: cs = 178; goto _test_eof; 
	_test_eof1145: cs = 1145; goto _test_eof; 
	_test_eof179: cs = 179; goto _test_eof; 
	_test_eof180: cs = 180; goto _test_eof; 
	_test_eof181: cs = 181; goto _test_eof; 
	_test_eof182: cs = 182; goto _test_eof; 
	_test_eof183: cs = 183; goto _test_eof; 
	_test_eof184: cs = 184; goto _test_eof; 
	_test_eof185: cs = 185; goto _test_eof; 
	_test_eof186: cs = 186; goto _test_eof; 
	_test_eof187: cs = 187; goto _test_eof; 
	_test_eof188: cs = 188; goto _test_eof; 
	_test_eof189: cs = 189; goto _test_eof; 
	_test_eof190: cs = 190; goto _test_eof; 
	_test_eof191: cs = 191; goto _test_eof; 
	_test_eof192: cs = 192; goto _test_eof; 
	_test_eof193: cs = 193; goto _test_eof; 
	_test_eof194: cs = 194; goto _test_eof; 
	_test_eof1146: cs = 1146; goto _test_eof; 
	_test_eof195: cs = 195; goto _test_eof; 
	_test_eof196: cs = 196; goto _test_eof; 
	_test_eof197: cs = 197; goto _test_eof; 
	_test_eof198: cs = 198; goto _test_eof; 
	_test_eof199: cs = 199; goto _test_eof; 
	_test_eof200: cs = 200; goto _test_eof; 
	_test_eof201: cs = 201; goto _test_eof; 
	_test_eof202: cs = 202; goto _test_eof; 
	_test_eof203: cs = 203; goto _test_eof; 
	_test_eof204: cs = 204; goto _test_eof; 
	_test_eof205: cs = 205; goto _test_eof; 
	_test_eof206: cs = 206; goto _test_eof; 
	_test_eof207: cs = 207; goto _test_eof; 
	_test_eof208: cs = 208; goto _test_eof; 
	_test_eof209: cs = 209; goto _test_eof; 
	_test_eof210: cs = 210; goto _test_eof; 
	_test_eof1147: cs = 1147; goto _test_eof; 
	_test_eof211: cs = 211; goto _test_eof; 
	_test_eof212: cs = 212; goto _test_eof; 
	_test_eof213: cs = 213; goto _test_eof; 
	_test_eof214: cs = 214; goto _test_eof; 
	_test_eof215: cs = 215; goto _test_eof; 
	_test_eof216: cs = 216; goto _test_eof; 
	_test_eof217: cs = 217; goto _test_eof; 
	_test_eof218: cs = 218; goto _test_eof; 
	_test_eof219: cs = 219; goto _test_eof; 
	_test_eof220: cs = 220; goto _test_eof; 
	_test_eof221: cs = 221; goto _test_eof; 
	_test_eof222: cs = 222; goto _test_eof; 
	_test_eof223: cs = 223; goto _test_eof; 
	_test_eof224: cs = 224; goto _test_eof; 
	_test_eof225: cs = 225; goto _test_eof; 
	_test_eof226: cs = 226; goto _test_eof; 
	_test_eof227: cs = 227; goto _test_eof; 
	_test_eof228: cs = 228; goto _test_eof; 
	_test_eof229: cs = 229; goto _test_eof; 
	_test_eof230: cs = 230; goto _test_eof; 
	_test_eof231: cs = 231; goto _test_eof; 
	_test_eof232: cs = 232; goto _test_eof; 
	_test_eof233: cs = 233; goto _test_eof; 
	_test_eof234: cs = 234; goto _test_eof; 
	_test_eof235: cs = 235; goto _test_eof; 
	_test_eof236: cs = 236; goto _test_eof; 
	_test_eof237: cs = 237; goto _test_eof; 
	_test_eof238: cs = 238; goto _test_eof; 
	_test_eof239: cs = 239; goto _test_eof; 
	_test_eof240: cs = 240; goto _test_eof; 
	_test_eof241: cs = 241; goto _test_eof; 
	_test_eof242: cs = 242; goto _test_eof; 
	_test_eof243: cs = 243; goto _test_eof; 
	_test_eof244: cs = 244; goto _test_eof; 
	_test_eof245: cs = 245; goto _test_eof; 
	_test_eof246: cs = 246; goto _test_eof; 
	_test_eof247: cs = 247; goto _test_eof; 
	_test_eof248: cs = 248; goto _test_eof; 
	_test_eof249: cs = 249; goto _test_eof; 
	_test_eof250: cs = 250; goto _test_eof; 
	_test_eof251: cs = 251; goto _test_eof; 
	_test_eof252: cs = 252; goto _test_eof; 
	_test_eof253: cs = 253; goto _test_eof; 
	_test_eof254: cs = 254; goto _test_eof; 
	_test_eof255: cs = 255; goto _test_eof; 
	_test_eof256: cs = 256; goto _test_eof; 
	_test_eof257: cs = 257; goto _test_eof; 
	_test_eof258: cs = 258; goto _test_eof; 
	_test_eof259: cs = 259; goto _test_eof; 
	_test_eof260: cs = 260; goto _test_eof; 
	_test_eof261: cs = 261; goto _test_eof; 
	_test_eof262: cs = 262; goto _test_eof; 
	_test_eof263: cs = 263; goto _test_eof; 
	_test_eof264: cs = 264; goto _test_eof; 
	_test_eof265: cs = 265; goto _test_eof; 
	_test_eof266: cs = 266; goto _test_eof; 
	_test_eof267: cs = 267; goto _test_eof; 
	_test_eof268: cs = 268; goto _test_eof; 
	_test_eof269: cs = 269; goto _test_eof; 
	_test_eof270: cs = 270; goto _test_eof; 
	_test_eof1148: cs = 1148; goto _test_eof; 
	_test_eof271: cs = 271; goto _test_eof; 
	_test_eof272: cs = 272; goto _test_eof; 
	_test_eof1149: cs = 1149; goto _test_eof; 
	_test_eof273: cs = 273; goto _test_eof; 
	_test_eof274: cs = 274; goto _test_eof; 
	_test_eof275: cs = 275; goto _test_eof; 
	_test_eof276: cs = 276; goto _test_eof; 
	_test_eof277: cs = 277; goto _test_eof; 
	_test_eof278: cs = 278; goto _test_eof; 
	_test_eof279: cs = 279; goto _test_eof; 
	_test_eof280: cs = 280; goto _test_eof; 
	_test_eof281: cs = 281; goto _test_eof; 
	_test_eof1150: cs = 1150; goto _test_eof; 
	_test_eof1151: cs = 1151; goto _test_eof; 
	_test_eof282: cs = 282; goto _test_eof; 
	_test_eof283: cs = 283; goto _test_eof; 
	_test_eof284: cs = 284; goto _test_eof; 
	_test_eof285: cs = 285; goto _test_eof; 
	_test_eof286: cs = 286; goto _test_eof; 
	_test_eof287: cs = 287; goto _test_eof; 
	_test_eof288: cs = 288; goto _test_eof; 
	_test_eof289: cs = 289; goto _test_eof; 
	_test_eof290: cs = 290; goto _test_eof; 
	_test_eof291: cs = 291; goto _test_eof; 
	_test_eof292: cs = 292; goto _test_eof; 
	_test_eof293: cs = 293; goto _test_eof; 
	_test_eof294: cs = 294; goto _test_eof; 
	_test_eof295: cs = 295; goto _test_eof; 
	_test_eof1152: cs = 1152; goto _test_eof; 
	_test_eof296: cs = 296; goto _test_eof; 
	_test_eof297: cs = 297; goto _test_eof; 
	_test_eof298: cs = 298; goto _test_eof; 
	_test_eof299: cs = 299; goto _test_eof; 
	_test_eof300: cs = 300; goto _test_eof; 
	_test_eof301: cs = 301; goto _test_eof; 
	_test_eof302: cs = 302; goto _test_eof; 
	_test_eof303: cs = 303; goto _test_eof; 
	_test_eof304: cs = 304; goto _test_eof; 
	_test_eof305: cs = 305; goto _test_eof; 
	_test_eof1153: cs = 1153; goto _test_eof; 
	_test_eof306: cs = 306; goto _test_eof; 
	_test_eof307: cs = 307; goto _test_eof; 
	_test_eof308: cs = 308; goto _test_eof; 
	_test_eof309: cs = 309; goto _test_eof; 
	_test_eof310: cs = 310; goto _test_eof; 
	_test_eof311: cs = 311; goto _test_eof; 
	_test_eof312: cs = 312; goto _test_eof; 
	_test_eof313: cs = 313; goto _test_eof; 
	_test_eof314: cs = 314; goto _test_eof; 
	_test_eof315: cs = 315; goto _test_eof; 
	_test_eof316: cs = 316; goto _test_eof; 
	_test_eof317: cs = 317; goto _test_eof; 
	_test_eof318: cs = 318; goto _test_eof; 
	_test_eof319: cs = 319; goto _test_eof; 
	_test_eof1154: cs = 1154; goto _test_eof; 
	_test_eof320: cs = 320; goto _test_eof; 
	_test_eof321: cs = 321; goto _test_eof; 
	_test_eof322: cs = 322; goto _test_eof; 
	_test_eof323: cs = 323; goto _test_eof; 
	_test_eof324: cs = 324; goto _test_eof; 
	_test_eof325: cs = 325; goto _test_eof; 
	_test_eof326: cs = 326; goto _test_eof; 
	_test_eof1155: cs = 1155; goto _test_eof; 
	_test_eof327: cs = 327; goto _test_eof; 
	_test_eof328: cs = 328; goto _test_eof; 
	_test_eof329: cs = 329; goto _test_eof; 
	_test_eof330: cs = 330; goto _test_eof; 
	_test_eof331: cs = 331; goto _test_eof; 
	_test_eof332: cs = 332; goto _test_eof; 
	_test_eof333: cs = 333; goto _test_eof; 
	_test_eof334: cs = 334; goto _test_eof; 
	_test_eof335: cs = 335; goto _test_eof; 
	_test_eof1156: cs = 1156; goto _test_eof; 
	_test_eof1157: cs = 1157; goto _test_eof; 
	_test_eof1158: cs = 1158; goto _test_eof; 
	_test_eof336: cs = 336; goto _test_eof; 
	_test_eof337: cs = 337; goto _test_eof; 
	_test_eof338: cs = 338; goto _test_eof; 
	_test_eof339: cs = 339; goto _test_eof; 
	_test_eof340: cs = 340; goto _test_eof; 
	_test_eof341: cs = 341; goto _test_eof; 
	_test_eof342: cs = 342; goto _test_eof; 
	_test_eof343: cs = 343; goto _test_eof; 
	_test_eof1159: cs = 1159; goto _test_eof; 
	_test_eof1160: cs = 1160; goto _test_eof; 
	_test_eof344: cs = 344; goto _test_eof; 
	_test_eof345: cs = 345; goto _test_eof; 
	_test_eof346: cs = 346; goto _test_eof; 
	_test_eof1161: cs = 1161; goto _test_eof; 
	_test_eof347: cs = 347; goto _test_eof; 
	_test_eof348: cs = 348; goto _test_eof; 
	_test_eof349: cs = 349; goto _test_eof; 
	_test_eof350: cs = 350; goto _test_eof; 
	_test_eof351: cs = 351; goto _test_eof; 
	_test_eof352: cs = 352; goto _test_eof; 
	_test_eof353: cs = 353; goto _test_eof; 
	_test_eof354: cs = 354; goto _test_eof; 
	_test_eof355: cs = 355; goto _test_eof; 
	_test_eof356: cs = 356; goto _test_eof; 
	_test_eof357: cs = 357; goto _test_eof; 
	_test_eof358: cs = 358; goto _test_eof; 
	_test_eof359: cs = 359; goto _test_eof; 
	_test_eof360: cs = 360; goto _test_eof; 
	_test_eof361: cs = 361; goto _test_eof; 
	_test_eof362: cs = 362; goto _test_eof; 
	_test_eof363: cs = 363; goto _test_eof; 
	_test_eof364: cs = 364; goto _test_eof; 
	_test_eof365: cs = 365; goto _test_eof; 
	_test_eof366: cs = 366; goto _test_eof; 
	_test_eof367: cs = 367; goto _test_eof; 
	_test_eof368: cs = 368; goto _test_eof; 
	_test_eof369: cs = 369; goto _test_eof; 
	_test_eof370: cs = 370; goto _test_eof; 
	_test_eof371: cs = 371; goto _test_eof; 
	_test_eof372: cs = 372; goto _test_eof; 
	_test_eof373: cs = 373; goto _test_eof; 
	_test_eof374: cs = 374; goto _test_eof; 
	_test_eof375: cs = 375; goto _test_eof; 
	_test_eof376: cs = 376; goto _test_eof; 
	_test_eof377: cs = 377; goto _test_eof; 
	_test_eof378: cs = 378; goto _test_eof; 
	_test_eof379: cs = 379; goto _test_eof; 
	_test_eof380: cs = 380; goto _test_eof; 
	_test_eof381: cs = 381; goto _test_eof; 
	_test_eof382: cs = 382; goto _test_eof; 
	_test_eof383: cs = 383; goto _test_eof; 
	_test_eof384: cs = 384; goto _test_eof; 
	_test_eof385: cs = 385; goto _test_eof; 
	_test_eof386: cs = 386; goto _test_eof; 
	_test_eof387: cs = 387; goto _test_eof; 
	_test_eof388: cs = 388; goto _test_eof; 
	_test_eof389: cs = 389; goto _test_eof; 
	_test_eof390: cs = 390; goto _test_eof; 
	_test_eof391: cs = 391; goto _test_eof; 
	_test_eof392: cs = 392; goto _test_eof; 
	_test_eof393: cs = 393; goto _test_eof; 
	_test_eof394: cs = 394; goto _test_eof; 
	_test_eof395: cs = 395; goto _test_eof; 
	_test_eof396: cs = 396; goto _test_eof; 
	_test_eof397: cs = 397; goto _test_eof; 
	_test_eof398: cs = 398; goto _test_eof; 
	_test_eof399: cs = 399; goto _test_eof; 
	_test_eof400: cs = 400; goto _test_eof; 
	_test_eof401: cs = 401; goto _test_eof; 
	_test_eof402: cs = 402; goto _test_eof; 
	_test_eof403: cs = 403; goto _test_eof; 
	_test_eof404: cs = 404; goto _test_eof; 
	_test_eof405: cs = 405; goto _test_eof; 
	_test_eof406: cs = 406; goto _test_eof; 
	_test_eof407: cs = 407; goto _test_eof; 
	_test_eof408: cs = 408; goto _test_eof; 
	_test_eof409: cs = 409; goto _test_eof; 
	_test_eof410: cs = 410; goto _test_eof; 
	_test_eof411: cs = 411; goto _test_eof; 
	_test_eof412: cs = 412; goto _test_eof; 
	_test_eof413: cs = 413; goto _test_eof; 
	_test_eof414: cs = 414; goto _test_eof; 
	_test_eof415: cs = 415; goto _test_eof; 
	_test_eof416: cs = 416; goto _test_eof; 
	_test_eof417: cs = 417; goto _test_eof; 
	_test_eof418: cs = 418; goto _test_eof; 
	_test_eof419: cs = 419; goto _test_eof; 
	_test_eof420: cs = 420; goto _test_eof; 
	_test_eof421: cs = 421; goto _test_eof; 
	_test_eof422: cs = 422; goto _test_eof; 
	_test_eof423: cs = 423; goto _test_eof; 
	_test_eof424: cs = 424; goto _test_eof; 
	_test_eof425: cs = 425; goto _test_eof; 
	_test_eof426: cs = 426; goto _test_eof; 
	_test_eof427: cs = 427; goto _test_eof; 
	_test_eof428: cs = 428; goto _test_eof; 
	_test_eof429: cs = 429; goto _test_eof; 
	_test_eof430: cs = 430; goto _test_eof; 
	_test_eof431: cs = 431; goto _test_eof; 
	_test_eof432: cs = 432; goto _test_eof; 
	_test_eof433: cs = 433; goto _test_eof; 
	_test_eof434: cs = 434; goto _test_eof; 
	_test_eof435: cs = 435; goto _test_eof; 
	_test_eof436: cs = 436; goto _test_eof; 
	_test_eof437: cs = 437; goto _test_eof; 
	_test_eof438: cs = 438; goto _test_eof; 
	_test_eof439: cs = 439; goto _test_eof; 
	_test_eof440: cs = 440; goto _test_eof; 
	_test_eof441: cs = 441; goto _test_eof; 
	_test_eof442: cs = 442; goto _test_eof; 
	_test_eof443: cs = 443; goto _test_eof; 
	_test_eof444: cs = 444; goto _test_eof; 
	_test_eof445: cs = 445; goto _test_eof; 
	_test_eof446: cs = 446; goto _test_eof; 
	_test_eof447: cs = 447; goto _test_eof; 
	_test_eof448: cs = 448; goto _test_eof; 
	_test_eof449: cs = 449; goto _test_eof; 
	_test_eof450: cs = 450; goto _test_eof; 
	_test_eof451: cs = 451; goto _test_eof; 
	_test_eof452: cs = 452; goto _test_eof; 
	_test_eof453: cs = 453; goto _test_eof; 
	_test_eof454: cs = 454; goto _test_eof; 
	_test_eof455: cs = 455; goto _test_eof; 
	_test_eof456: cs = 456; goto _test_eof; 
	_test_eof457: cs = 457; goto _test_eof; 
	_test_eof458: cs = 458; goto _test_eof; 
	_test_eof459: cs = 459; goto _test_eof; 
	_test_eof460: cs = 460; goto _test_eof; 
	_test_eof461: cs = 461; goto _test_eof; 
	_test_eof462: cs = 462; goto _test_eof; 
	_test_eof463: cs = 463; goto _test_eof; 
	_test_eof464: cs = 464; goto _test_eof; 
	_test_eof465: cs = 465; goto _test_eof; 
	_test_eof466: cs = 466; goto _test_eof; 
	_test_eof467: cs = 467; goto _test_eof; 
	_test_eof468: cs = 468; goto _test_eof; 
	_test_eof469: cs = 469; goto _test_eof; 
	_test_eof470: cs = 470; goto _test_eof; 
	_test_eof471: cs = 471; goto _test_eof; 
	_test_eof472: cs = 472; goto _test_eof; 
	_test_eof473: cs = 473; goto _test_eof; 
	_test_eof474: cs = 474; goto _test_eof; 
	_test_eof475: cs = 475; goto _test_eof; 
	_test_eof476: cs = 476; goto _test_eof; 
	_test_eof1162: cs = 1162; goto _test_eof; 
	_test_eof1163: cs = 1163; goto _test_eof; 
	_test_eof1164: cs = 1164; goto _test_eof; 
	_test_eof477: cs = 477; goto _test_eof; 
	_test_eof478: cs = 478; goto _test_eof; 
	_test_eof479: cs = 479; goto _test_eof; 
	_test_eof480: cs = 480; goto _test_eof; 
	_test_eof481: cs = 481; goto _test_eof; 
	_test_eof1165: cs = 1165; goto _test_eof; 
	_test_eof482: cs = 482; goto _test_eof; 
	_test_eof483: cs = 483; goto _test_eof; 
	_test_eof484: cs = 484; goto _test_eof; 
	_test_eof485: cs = 485; goto _test_eof; 
	_test_eof1166: cs = 1166; goto _test_eof; 
	_test_eof1167: cs = 1167; goto _test_eof; 
	_test_eof1168: cs = 1168; goto _test_eof; 
	_test_eof486: cs = 486; goto _test_eof; 
	_test_eof487: cs = 487; goto _test_eof; 
	_test_eof1169: cs = 1169; goto _test_eof; 
	_test_eof488: cs = 488; goto _test_eof; 
	_test_eof489: cs = 489; goto _test_eof; 
	_test_eof490: cs = 490; goto _test_eof; 
	_test_eof1170: cs = 1170; goto _test_eof; 
	_test_eof491: cs = 491; goto _test_eof; 
	_test_eof492: cs = 492; goto _test_eof; 
	_test_eof493: cs = 493; goto _test_eof; 
	_test_eof494: cs = 494; goto _test_eof; 
	_test_eof495: cs = 495; goto _test_eof; 
	_test_eof496: cs = 496; goto _test_eof; 
	_test_eof497: cs = 497; goto _test_eof; 
	_test_eof498: cs = 498; goto _test_eof; 
	_test_eof499: cs = 499; goto _test_eof; 
	_test_eof500: cs = 500; goto _test_eof; 
	_test_eof501: cs = 501; goto _test_eof; 
	_test_eof502: cs = 502; goto _test_eof; 
	_test_eof503: cs = 503; goto _test_eof; 
	_test_eof504: cs = 504; goto _test_eof; 
	_test_eof505: cs = 505; goto _test_eof; 
	_test_eof506: cs = 506; goto _test_eof; 
	_test_eof507: cs = 507; goto _test_eof; 
	_test_eof508: cs = 508; goto _test_eof; 
	_test_eof509: cs = 509; goto _test_eof; 
	_test_eof510: cs = 510; goto _test_eof; 
	_test_eof511: cs = 511; goto _test_eof; 
	_test_eof512: cs = 512; goto _test_eof; 
	_test_eof513: cs = 513; goto _test_eof; 
	_test_eof514: cs = 514; goto _test_eof; 
	_test_eof515: cs = 515; goto _test_eof; 
	_test_eof516: cs = 516; goto _test_eof; 
	_test_eof517: cs = 517; goto _test_eof; 
	_test_eof518: cs = 518; goto _test_eof; 
	_test_eof519: cs = 519; goto _test_eof; 
	_test_eof520: cs = 520; goto _test_eof; 
	_test_eof521: cs = 521; goto _test_eof; 
	_test_eof522: cs = 522; goto _test_eof; 
	_test_eof523: cs = 523; goto _test_eof; 
	_test_eof524: cs = 524; goto _test_eof; 
	_test_eof525: cs = 525; goto _test_eof; 
	_test_eof526: cs = 526; goto _test_eof; 
	_test_eof527: cs = 527; goto _test_eof; 
	_test_eof528: cs = 528; goto _test_eof; 
	_test_eof529: cs = 529; goto _test_eof; 
	_test_eof530: cs = 530; goto _test_eof; 
	_test_eof531: cs = 531; goto _test_eof; 
	_test_eof532: cs = 532; goto _test_eof; 
	_test_eof533: cs = 533; goto _test_eof; 
	_test_eof534: cs = 534; goto _test_eof; 
	_test_eof535: cs = 535; goto _test_eof; 
	_test_eof536: cs = 536; goto _test_eof; 
	_test_eof537: cs = 537; goto _test_eof; 
	_test_eof538: cs = 538; goto _test_eof; 
	_test_eof539: cs = 539; goto _test_eof; 
	_test_eof540: cs = 540; goto _test_eof; 
	_test_eof541: cs = 541; goto _test_eof; 
	_test_eof542: cs = 542; goto _test_eof; 
	_test_eof543: cs = 543; goto _test_eof; 
	_test_eof544: cs = 544; goto _test_eof; 
	_test_eof545: cs = 545; goto _test_eof; 
	_test_eof546: cs = 546; goto _test_eof; 
	_test_eof547: cs = 547; goto _test_eof; 
	_test_eof548: cs = 548; goto _test_eof; 
	_test_eof549: cs = 549; goto _test_eof; 
	_test_eof550: cs = 550; goto _test_eof; 
	_test_eof551: cs = 551; goto _test_eof; 
	_test_eof552: cs = 552; goto _test_eof; 
	_test_eof553: cs = 553; goto _test_eof; 
	_test_eof554: cs = 554; goto _test_eof; 
	_test_eof555: cs = 555; goto _test_eof; 
	_test_eof556: cs = 556; goto _test_eof; 
	_test_eof557: cs = 557; goto _test_eof; 
	_test_eof558: cs = 558; goto _test_eof; 
	_test_eof559: cs = 559; goto _test_eof; 
	_test_eof560: cs = 560; goto _test_eof; 
	_test_eof561: cs = 561; goto _test_eof; 
	_test_eof562: cs = 562; goto _test_eof; 
	_test_eof563: cs = 563; goto _test_eof; 
	_test_eof564: cs = 564; goto _test_eof; 
	_test_eof565: cs = 565; goto _test_eof; 
	_test_eof566: cs = 566; goto _test_eof; 
	_test_eof567: cs = 567; goto _test_eof; 
	_test_eof568: cs = 568; goto _test_eof; 
	_test_eof569: cs = 569; goto _test_eof; 
	_test_eof570: cs = 570; goto _test_eof; 
	_test_eof571: cs = 571; goto _test_eof; 
	_test_eof572: cs = 572; goto _test_eof; 
	_test_eof573: cs = 573; goto _test_eof; 
	_test_eof574: cs = 574; goto _test_eof; 
	_test_eof575: cs = 575; goto _test_eof; 
	_test_eof576: cs = 576; goto _test_eof; 
	_test_eof577: cs = 577; goto _test_eof; 
	_test_eof578: cs = 578; goto _test_eof; 
	_test_eof579: cs = 579; goto _test_eof; 
	_test_eof580: cs = 580; goto _test_eof; 
	_test_eof581: cs = 581; goto _test_eof; 
	_test_eof582: cs = 582; goto _test_eof; 
	_test_eof583: cs = 583; goto _test_eof; 
	_test_eof584: cs = 584; goto _test_eof; 
	_test_eof585: cs = 585; goto _test_eof; 
	_test_eof586: cs = 586; goto _test_eof; 
	_test_eof587: cs = 587; goto _test_eof; 
	_test_eof588: cs = 588; goto _test_eof; 
	_test_eof589: cs = 589; goto _test_eof; 
	_test_eof590: cs = 590; goto _test_eof; 
	_test_eof591: cs = 591; goto _test_eof; 
	_test_eof592: cs = 592; goto _test_eof; 
	_test_eof593: cs = 593; goto _test_eof; 
	_test_eof594: cs = 594; goto _test_eof; 
	_test_eof1171: cs = 1171; goto _test_eof; 
	_test_eof595: cs = 595; goto _test_eof; 
	_test_eof596: cs = 596; goto _test_eof; 
	_test_eof597: cs = 597; goto _test_eof; 
	_test_eof598: cs = 598; goto _test_eof; 
	_test_eof599: cs = 599; goto _test_eof; 
	_test_eof600: cs = 600; goto _test_eof; 
	_test_eof601: cs = 601; goto _test_eof; 
	_test_eof602: cs = 602; goto _test_eof; 
	_test_eof603: cs = 603; goto _test_eof; 
	_test_eof604: cs = 604; goto _test_eof; 
	_test_eof605: cs = 605; goto _test_eof; 
	_test_eof606: cs = 606; goto _test_eof; 
	_test_eof607: cs = 607; goto _test_eof; 
	_test_eof608: cs = 608; goto _test_eof; 
	_test_eof609: cs = 609; goto _test_eof; 
	_test_eof610: cs = 610; goto _test_eof; 
	_test_eof611: cs = 611; goto _test_eof; 
	_test_eof612: cs = 612; goto _test_eof; 
	_test_eof613: cs = 613; goto _test_eof; 
	_test_eof614: cs = 614; goto _test_eof; 
	_test_eof615: cs = 615; goto _test_eof; 
	_test_eof616: cs = 616; goto _test_eof; 
	_test_eof617: cs = 617; goto _test_eof; 
	_test_eof618: cs = 618; goto _test_eof; 
	_test_eof619: cs = 619; goto _test_eof; 
	_test_eof620: cs = 620; goto _test_eof; 
	_test_eof621: cs = 621; goto _test_eof; 
	_test_eof622: cs = 622; goto _test_eof; 
	_test_eof623: cs = 623; goto _test_eof; 
	_test_eof624: cs = 624; goto _test_eof; 
	_test_eof625: cs = 625; goto _test_eof; 
	_test_eof626: cs = 626; goto _test_eof; 
	_test_eof627: cs = 627; goto _test_eof; 
	_test_eof628: cs = 628; goto _test_eof; 
	_test_eof629: cs = 629; goto _test_eof; 
	_test_eof630: cs = 630; goto _test_eof; 
	_test_eof631: cs = 631; goto _test_eof; 
	_test_eof632: cs = 632; goto _test_eof; 
	_test_eof633: cs = 633; goto _test_eof; 
	_test_eof634: cs = 634; goto _test_eof; 
	_test_eof635: cs = 635; goto _test_eof; 
	_test_eof1172: cs = 1172; goto _test_eof; 
	_test_eof636: cs = 636; goto _test_eof; 
	_test_eof637: cs = 637; goto _test_eof; 
	_test_eof1173: cs = 1173; goto _test_eof; 
	_test_eof638: cs = 638; goto _test_eof; 
	_test_eof639: cs = 639; goto _test_eof; 
	_test_eof640: cs = 640; goto _test_eof; 
	_test_eof641: cs = 641; goto _test_eof; 
	_test_eof642: cs = 642; goto _test_eof; 
	_test_eof643: cs = 643; goto _test_eof; 
	_test_eof644: cs = 644; goto _test_eof; 
	_test_eof645: cs = 645; goto _test_eof; 
	_test_eof646: cs = 646; goto _test_eof; 
	_test_eof647: cs = 647; goto _test_eof; 
	_test_eof648: cs = 648; goto _test_eof; 
	_test_eof649: cs = 649; goto _test_eof; 
	_test_eof650: cs = 650; goto _test_eof; 
	_test_eof651: cs = 651; goto _test_eof; 
	_test_eof1174: cs = 1174; goto _test_eof; 
	_test_eof652: cs = 652; goto _test_eof; 
	_test_eof653: cs = 653; goto _test_eof; 
	_test_eof654: cs = 654; goto _test_eof; 
	_test_eof655: cs = 655; goto _test_eof; 
	_test_eof656: cs = 656; goto _test_eof; 
	_test_eof657: cs = 657; goto _test_eof; 
	_test_eof658: cs = 658; goto _test_eof; 
	_test_eof659: cs = 659; goto _test_eof; 
	_test_eof660: cs = 660; goto _test_eof; 
	_test_eof661: cs = 661; goto _test_eof; 
	_test_eof662: cs = 662; goto _test_eof; 
	_test_eof663: cs = 663; goto _test_eof; 
	_test_eof664: cs = 664; goto _test_eof; 
	_test_eof665: cs = 665; goto _test_eof; 
	_test_eof666: cs = 666; goto _test_eof; 
	_test_eof667: cs = 667; goto _test_eof; 
	_test_eof668: cs = 668; goto _test_eof; 
	_test_eof669: cs = 669; goto _test_eof; 
	_test_eof670: cs = 670; goto _test_eof; 
	_test_eof671: cs = 671; goto _test_eof; 
	_test_eof672: cs = 672; goto _test_eof; 
	_test_eof673: cs = 673; goto _test_eof; 
	_test_eof1175: cs = 1175; goto _test_eof; 
	_test_eof674: cs = 674; goto _test_eof; 
	_test_eof675: cs = 675; goto _test_eof; 
	_test_eof676: cs = 676; goto _test_eof; 
	_test_eof677: cs = 677; goto _test_eof; 
	_test_eof678: cs = 678; goto _test_eof; 
	_test_eof1176: cs = 1176; goto _test_eof; 
	_test_eof679: cs = 679; goto _test_eof; 
	_test_eof680: cs = 680; goto _test_eof; 
	_test_eof681: cs = 681; goto _test_eof; 
	_test_eof682: cs = 682; goto _test_eof; 
	_test_eof683: cs = 683; goto _test_eof; 
	_test_eof1177: cs = 1177; goto _test_eof; 
	_test_eof684: cs = 684; goto _test_eof; 
	_test_eof685: cs = 685; goto _test_eof; 
	_test_eof686: cs = 686; goto _test_eof; 
	_test_eof687: cs = 687; goto _test_eof; 
	_test_eof688: cs = 688; goto _test_eof; 
	_test_eof1178: cs = 1178; goto _test_eof; 
	_test_eof1179: cs = 1179; goto _test_eof; 
	_test_eof1180: cs = 1180; goto _test_eof; 
	_test_eof689: cs = 689; goto _test_eof; 
	_test_eof690: cs = 690; goto _test_eof; 
	_test_eof1181: cs = 1181; goto _test_eof; 
	_test_eof691: cs = 691; goto _test_eof; 
	_test_eof692: cs = 692; goto _test_eof; 
	_test_eof693: cs = 693; goto _test_eof; 
	_test_eof694: cs = 694; goto _test_eof; 
	_test_eof695: cs = 695; goto _test_eof; 
	_test_eof696: cs = 696; goto _test_eof; 
	_test_eof697: cs = 697; goto _test_eof; 
	_test_eof698: cs = 698; goto _test_eof; 
	_test_eof699: cs = 699; goto _test_eof; 
	_test_eof700: cs = 700; goto _test_eof; 
	_test_eof701: cs = 701; goto _test_eof; 
	_test_eof702: cs = 702; goto _test_eof; 
	_test_eof703: cs = 703; goto _test_eof; 
	_test_eof704: cs = 704; goto _test_eof; 
	_test_eof705: cs = 705; goto _test_eof; 
	_test_eof706: cs = 706; goto _test_eof; 
	_test_eof707: cs = 707; goto _test_eof; 
	_test_eof708: cs = 708; goto _test_eof; 
	_test_eof709: cs = 709; goto _test_eof; 
	_test_eof710: cs = 710; goto _test_eof; 
	_test_eof711: cs = 711; goto _test_eof; 
	_test_eof712: cs = 712; goto _test_eof; 
	_test_eof713: cs = 713; goto _test_eof; 
	_test_eof714: cs = 714; goto _test_eof; 
	_test_eof715: cs = 715; goto _test_eof; 
	_test_eof716: cs = 716; goto _test_eof; 
	_test_eof717: cs = 717; goto _test_eof; 
	_test_eof1182: cs = 1182; goto _test_eof; 
	_test_eof1183: cs = 1183; goto _test_eof; 
	_test_eof1184: cs = 1184; goto _test_eof; 
	_test_eof718: cs = 718; goto _test_eof; 
	_test_eof719: cs = 719; goto _test_eof; 
	_test_eof720: cs = 720; goto _test_eof; 
	_test_eof1185: cs = 1185; goto _test_eof; 
	_test_eof1186: cs = 1186; goto _test_eof; 
	_test_eof721: cs = 721; goto _test_eof; 
	_test_eof722: cs = 722; goto _test_eof; 
	_test_eof723: cs = 723; goto _test_eof; 
	_test_eof724: cs = 724; goto _test_eof; 
	_test_eof1187: cs = 1187; goto _test_eof; 
	_test_eof1188: cs = 1188; goto _test_eof; 
	_test_eof725: cs = 725; goto _test_eof; 
	_test_eof726: cs = 726; goto _test_eof; 
	_test_eof727: cs = 727; goto _test_eof; 
	_test_eof728: cs = 728; goto _test_eof; 
	_test_eof1189: cs = 1189; goto _test_eof; 
	_test_eof1190: cs = 1190; goto _test_eof; 
	_test_eof729: cs = 729; goto _test_eof; 
	_test_eof730: cs = 730; goto _test_eof; 
	_test_eof731: cs = 731; goto _test_eof; 
	_test_eof732: cs = 732; goto _test_eof; 
	_test_eof733: cs = 733; goto _test_eof; 
	_test_eof734: cs = 734; goto _test_eof; 
	_test_eof735: cs = 735; goto _test_eof; 
	_test_eof736: cs = 736; goto _test_eof; 
	_test_eof737: cs = 737; goto _test_eof; 
	_test_eof738: cs = 738; goto _test_eof; 
	_test_eof739: cs = 739; goto _test_eof; 
	_test_eof740: cs = 740; goto _test_eof; 
	_test_eof741: cs = 741; goto _test_eof; 
	_test_eof742: cs = 742; goto _test_eof; 
	_test_eof743: cs = 743; goto _test_eof; 
	_test_eof744: cs = 744; goto _test_eof; 
	_test_eof745: cs = 745; goto _test_eof; 
	_test_eof746: cs = 746; goto _test_eof; 
	_test_eof747: cs = 747; goto _test_eof; 
	_test_eof748: cs = 748; goto _test_eof; 
	_test_eof749: cs = 749; goto _test_eof; 
	_test_eof750: cs = 750; goto _test_eof; 
	_test_eof751: cs = 751; goto _test_eof; 
	_test_eof752: cs = 752; goto _test_eof; 
	_test_eof753: cs = 753; goto _test_eof; 
	_test_eof1191: cs = 1191; goto _test_eof; 
	_test_eof754: cs = 754; goto _test_eof; 
	_test_eof755: cs = 755; goto _test_eof; 
	_test_eof756: cs = 756; goto _test_eof; 
	_test_eof757: cs = 757; goto _test_eof; 
	_test_eof758: cs = 758; goto _test_eof; 
	_test_eof759: cs = 759; goto _test_eof; 
	_test_eof760: cs = 760; goto _test_eof; 
	_test_eof761: cs = 761; goto _test_eof; 
	_test_eof762: cs = 762; goto _test_eof; 
	_test_eof763: cs = 763; goto _test_eof; 
	_test_eof764: cs = 764; goto _test_eof; 
	_test_eof765: cs = 765; goto _test_eof; 
	_test_eof766: cs = 766; goto _test_eof; 
	_test_eof767: cs = 767; goto _test_eof; 
	_test_eof768: cs = 768; goto _test_eof; 
	_test_eof1192: cs = 1192; goto _test_eof; 
	_test_eof769: cs = 769; goto _test_eof; 
	_test_eof770: cs = 770; goto _test_eof; 
	_test_eof771: cs = 771; goto _test_eof; 
	_test_eof772: cs = 772; goto _test_eof; 
	_test_eof773: cs = 773; goto _test_eof; 
	_test_eof774: cs = 774; goto _test_eof; 
	_test_eof775: cs = 775; goto _test_eof; 
	_test_eof776: cs = 776; goto _test_eof; 
	_test_eof777: cs = 777; goto _test_eof; 
	_test_eof778: cs = 778; goto _test_eof; 
	_test_eof779: cs = 779; goto _test_eof; 
	_test_eof780: cs = 780; goto _test_eof; 
	_test_eof781: cs = 781; goto _test_eof; 
	_test_eof1193: cs = 1193; goto _test_eof; 
	_test_eof782: cs = 782; goto _test_eof; 
	_test_eof783: cs = 783; goto _test_eof; 
	_test_eof784: cs = 784; goto _test_eof; 
	_test_eof785: cs = 785; goto _test_eof; 
	_test_eof786: cs = 786; goto _test_eof; 
	_test_eof787: cs = 787; goto _test_eof; 
	_test_eof788: cs = 788; goto _test_eof; 
	_test_eof789: cs = 789; goto _test_eof; 
	_test_eof790: cs = 790; goto _test_eof; 
	_test_eof791: cs = 791; goto _test_eof; 
	_test_eof792: cs = 792; goto _test_eof; 
	_test_eof1194: cs = 1194; goto _test_eof; 
	_test_eof1195: cs = 1195; goto _test_eof; 
	_test_eof793: cs = 793; goto _test_eof; 
	_test_eof794: cs = 794; goto _test_eof; 
	_test_eof795: cs = 795; goto _test_eof; 
	_test_eof1196: cs = 1196; goto _test_eof; 
	_test_eof796: cs = 796; goto _test_eof; 
	_test_eof797: cs = 797; goto _test_eof; 
	_test_eof798: cs = 798; goto _test_eof; 
	_test_eof799: cs = 799; goto _test_eof; 
	_test_eof800: cs = 800; goto _test_eof; 
	_test_eof801: cs = 801; goto _test_eof; 
	_test_eof802: cs = 802; goto _test_eof; 
	_test_eof803: cs = 803; goto _test_eof; 
	_test_eof804: cs = 804; goto _test_eof; 
	_test_eof805: cs = 805; goto _test_eof; 
	_test_eof1197: cs = 1197; goto _test_eof; 
	_test_eof1198: cs = 1198; goto _test_eof; 
	_test_eof1199: cs = 1199; goto _test_eof; 
	_test_eof806: cs = 806; goto _test_eof; 
	_test_eof807: cs = 807; goto _test_eof; 
	_test_eof808: cs = 808; goto _test_eof; 
	_test_eof809: cs = 809; goto _test_eof; 
	_test_eof810: cs = 810; goto _test_eof; 
	_test_eof811: cs = 811; goto _test_eof; 
	_test_eof812: cs = 812; goto _test_eof; 
	_test_eof813: cs = 813; goto _test_eof; 
	_test_eof814: cs = 814; goto _test_eof; 
	_test_eof815: cs = 815; goto _test_eof; 
	_test_eof816: cs = 816; goto _test_eof; 
	_test_eof1200: cs = 1200; goto _test_eof; 
	_test_eof1201: cs = 1201; goto _test_eof; 
	_test_eof1202: cs = 1202; goto _test_eof; 
	_test_eof817: cs = 817; goto _test_eof; 
	_test_eof818: cs = 818; goto _test_eof; 
	_test_eof819: cs = 819; goto _test_eof; 
	_test_eof820: cs = 820; goto _test_eof; 
	_test_eof821: cs = 821; goto _test_eof; 
	_test_eof822: cs = 822; goto _test_eof; 
	_test_eof823: cs = 823; goto _test_eof; 
	_test_eof824: cs = 824; goto _test_eof; 
	_test_eof825: cs = 825; goto _test_eof; 
	_test_eof826: cs = 826; goto _test_eof; 
	_test_eof827: cs = 827; goto _test_eof; 
	_test_eof828: cs = 828; goto _test_eof; 
	_test_eof1203: cs = 1203; goto _test_eof; 
	_test_eof829: cs = 829; goto _test_eof; 
	_test_eof830: cs = 830; goto _test_eof; 
	_test_eof831: cs = 831; goto _test_eof; 
	_test_eof1204: cs = 1204; goto _test_eof; 
	_test_eof1205: cs = 1205; goto _test_eof; 
	_test_eof832: cs = 832; goto _test_eof; 
	_test_eof1206: cs = 1206; goto _test_eof; 
	_test_eof1207: cs = 1207; goto _test_eof; 
	_test_eof833: cs = 833; goto _test_eof; 
	_test_eof1208: cs = 1208; goto _test_eof; 
	_test_eof1209: cs = 1209; goto _test_eof; 
	_test_eof834: cs = 834; goto _test_eof; 
	_test_eof835: cs = 835; goto _test_eof; 
	_test_eof836: cs = 836; goto _test_eof; 
	_test_eof837: cs = 837; goto _test_eof; 
	_test_eof838: cs = 838; goto _test_eof; 
	_test_eof839: cs = 839; goto _test_eof; 
	_test_eof840: cs = 840; goto _test_eof; 
	_test_eof841: cs = 841; goto _test_eof; 
	_test_eof842: cs = 842; goto _test_eof; 
	_test_eof843: cs = 843; goto _test_eof; 
	_test_eof844: cs = 844; goto _test_eof; 
	_test_eof845: cs = 845; goto _test_eof; 
	_test_eof846: cs = 846; goto _test_eof; 
	_test_eof847: cs = 847; goto _test_eof; 
	_test_eof848: cs = 848; goto _test_eof; 
	_test_eof849: cs = 849; goto _test_eof; 
	_test_eof850: cs = 850; goto _test_eof; 
	_test_eof851: cs = 851; goto _test_eof; 
	_test_eof852: cs = 852; goto _test_eof; 
	_test_eof853: cs = 853; goto _test_eof; 
	_test_eof854: cs = 854; goto _test_eof; 
	_test_eof855: cs = 855; goto _test_eof; 
	_test_eof856: cs = 856; goto _test_eof; 
	_test_eof857: cs = 857; goto _test_eof; 
	_test_eof858: cs = 858; goto _test_eof; 
	_test_eof859: cs = 859; goto _test_eof; 
	_test_eof860: cs = 860; goto _test_eof; 
	_test_eof861: cs = 861; goto _test_eof; 
	_test_eof862: cs = 862; goto _test_eof; 
	_test_eof863: cs = 863; goto _test_eof; 
	_test_eof864: cs = 864; goto _test_eof; 
	_test_eof865: cs = 865; goto _test_eof; 
	_test_eof866: cs = 866; goto _test_eof; 
	_test_eof867: cs = 867; goto _test_eof; 
	_test_eof868: cs = 868; goto _test_eof; 
	_test_eof869: cs = 869; goto _test_eof; 
	_test_eof870: cs = 870; goto _test_eof; 
	_test_eof871: cs = 871; goto _test_eof; 
	_test_eof872: cs = 872; goto _test_eof; 
	_test_eof873: cs = 873; goto _test_eof; 
	_test_eof874: cs = 874; goto _test_eof; 
	_test_eof875: cs = 875; goto _test_eof; 
	_test_eof1210: cs = 1210; goto _test_eof; 
	_test_eof876: cs = 876; goto _test_eof; 
	_test_eof877: cs = 877; goto _test_eof; 
	_test_eof878: cs = 878; goto _test_eof; 
	_test_eof879: cs = 879; goto _test_eof; 
	_test_eof880: cs = 880; goto _test_eof; 
	_test_eof881: cs = 881; goto _test_eof; 
	_test_eof882: cs = 882; goto _test_eof; 
	_test_eof883: cs = 883; goto _test_eof; 
	_test_eof884: cs = 884; goto _test_eof; 
	_test_eof885: cs = 885; goto _test_eof; 
	_test_eof886: cs = 886; goto _test_eof; 
	_test_eof887: cs = 887; goto _test_eof; 
	_test_eof888: cs = 888; goto _test_eof; 
	_test_eof889: cs = 889; goto _test_eof; 
	_test_eof890: cs = 890; goto _test_eof; 
	_test_eof891: cs = 891; goto _test_eof; 
	_test_eof892: cs = 892; goto _test_eof; 
	_test_eof893: cs = 893; goto _test_eof; 
	_test_eof894: cs = 894; goto _test_eof; 
	_test_eof895: cs = 895; goto _test_eof; 
	_test_eof896: cs = 896; goto _test_eof; 
	_test_eof897: cs = 897; goto _test_eof; 
	_test_eof898: cs = 898; goto _test_eof; 
	_test_eof899: cs = 899; goto _test_eof; 
	_test_eof900: cs = 900; goto _test_eof; 
	_test_eof901: cs = 901; goto _test_eof; 
	_test_eof902: cs = 902; goto _test_eof; 
	_test_eof903: cs = 903; goto _test_eof; 
	_test_eof904: cs = 904; goto _test_eof; 
	_test_eof905: cs = 905; goto _test_eof; 
	_test_eof906: cs = 906; goto _test_eof; 
	_test_eof907: cs = 907; goto _test_eof; 
	_test_eof908: cs = 908; goto _test_eof; 
	_test_eof909: cs = 909; goto _test_eof; 
	_test_eof910: cs = 910; goto _test_eof; 
	_test_eof911: cs = 911; goto _test_eof; 
	_test_eof912: cs = 912; goto _test_eof; 
	_test_eof913: cs = 913; goto _test_eof; 
	_test_eof914: cs = 914; goto _test_eof; 
	_test_eof915: cs = 915; goto _test_eof; 
	_test_eof916: cs = 916; goto _test_eof; 
	_test_eof917: cs = 917; goto _test_eof; 
	_test_eof918: cs = 918; goto _test_eof; 
	_test_eof919: cs = 919; goto _test_eof; 
	_test_eof920: cs = 920; goto _test_eof; 
	_test_eof921: cs = 921; goto _test_eof; 
	_test_eof922: cs = 922; goto _test_eof; 
	_test_eof923: cs = 923; goto _test_eof; 
	_test_eof924: cs = 924; goto _test_eof; 
	_test_eof925: cs = 925; goto _test_eof; 
	_test_eof926: cs = 926; goto _test_eof; 
	_test_eof927: cs = 927; goto _test_eof; 
	_test_eof928: cs = 928; goto _test_eof; 
	_test_eof929: cs = 929; goto _test_eof; 
	_test_eof930: cs = 930; goto _test_eof; 
	_test_eof931: cs = 931; goto _test_eof; 
	_test_eof932: cs = 932; goto _test_eof; 
	_test_eof933: cs = 933; goto _test_eof; 
	_test_eof934: cs = 934; goto _test_eof; 
	_test_eof935: cs = 935; goto _test_eof; 
	_test_eof936: cs = 936; goto _test_eof; 
	_test_eof937: cs = 937; goto _test_eof; 
	_test_eof938: cs = 938; goto _test_eof; 
	_test_eof939: cs = 939; goto _test_eof; 
	_test_eof940: cs = 940; goto _test_eof; 
	_test_eof941: cs = 941; goto _test_eof; 
	_test_eof942: cs = 942; goto _test_eof; 
	_test_eof943: cs = 943; goto _test_eof; 
	_test_eof944: cs = 944; goto _test_eof; 
	_test_eof945: cs = 945; goto _test_eof; 
	_test_eof946: cs = 946; goto _test_eof; 
	_test_eof947: cs = 947; goto _test_eof; 
	_test_eof948: cs = 948; goto _test_eof; 
	_test_eof949: cs = 949; goto _test_eof; 
	_test_eof950: cs = 950; goto _test_eof; 
	_test_eof951: cs = 951; goto _test_eof; 
	_test_eof952: cs = 952; goto _test_eof; 
	_test_eof953: cs = 953; goto _test_eof; 
	_test_eof954: cs = 954; goto _test_eof; 
	_test_eof955: cs = 955; goto _test_eof; 
	_test_eof956: cs = 956; goto _test_eof; 
	_test_eof957: cs = 957; goto _test_eof; 
	_test_eof958: cs = 958; goto _test_eof; 
	_test_eof959: cs = 959; goto _test_eof; 
	_test_eof960: cs = 960; goto _test_eof; 
	_test_eof961: cs = 961; goto _test_eof; 
	_test_eof962: cs = 962; goto _test_eof; 
	_test_eof963: cs = 963; goto _test_eof; 
	_test_eof964: cs = 964; goto _test_eof; 
	_test_eof965: cs = 965; goto _test_eof; 
	_test_eof966: cs = 966; goto _test_eof; 
	_test_eof967: cs = 967; goto _test_eof; 
	_test_eof968: cs = 968; goto _test_eof; 
	_test_eof969: cs = 969; goto _test_eof; 
	_test_eof970: cs = 970; goto _test_eof; 
	_test_eof971: cs = 971; goto _test_eof; 
	_test_eof972: cs = 972; goto _test_eof; 
	_test_eof973: cs = 973; goto _test_eof; 
	_test_eof974: cs = 974; goto _test_eof; 
	_test_eof975: cs = 975; goto _test_eof; 
	_test_eof976: cs = 976; goto _test_eof; 
	_test_eof977: cs = 977; goto _test_eof; 
	_test_eof978: cs = 978; goto _test_eof; 
	_test_eof979: cs = 979; goto _test_eof; 
	_test_eof980: cs = 980; goto _test_eof; 
	_test_eof981: cs = 981; goto _test_eof; 
	_test_eof982: cs = 982; goto _test_eof; 
	_test_eof983: cs = 983; goto _test_eof; 
	_test_eof984: cs = 984; goto _test_eof; 
	_test_eof985: cs = 985; goto _test_eof; 
	_test_eof986: cs = 986; goto _test_eof; 
	_test_eof987: cs = 987; goto _test_eof; 
	_test_eof988: cs = 988; goto _test_eof; 
	_test_eof989: cs = 989; goto _test_eof; 
	_test_eof990: cs = 990; goto _test_eof; 
	_test_eof991: cs = 991; goto _test_eof; 
	_test_eof992: cs = 992; goto _test_eof; 
	_test_eof993: cs = 993; goto _test_eof; 
	_test_eof994: cs = 994; goto _test_eof; 
	_test_eof995: cs = 995; goto _test_eof; 
	_test_eof996: cs = 996; goto _test_eof; 
	_test_eof997: cs = 997; goto _test_eof; 
	_test_eof998: cs = 998; goto _test_eof; 
	_test_eof999: cs = 999; goto _test_eof; 
	_test_eof1000: cs = 1000; goto _test_eof; 
	_test_eof1001: cs = 1001; goto _test_eof; 
	_test_eof1002: cs = 1002; goto _test_eof; 
	_test_eof1003: cs = 1003; goto _test_eof; 
	_test_eof1004: cs = 1004; goto _test_eof; 
	_test_eof1005: cs = 1005; goto _test_eof; 
	_test_eof1006: cs = 1006; goto _test_eof; 
	_test_eof1007: cs = 1007; goto _test_eof; 
	_test_eof1008: cs = 1008; goto _test_eof; 
	_test_eof1009: cs = 1009; goto _test_eof; 
	_test_eof1010: cs = 1010; goto _test_eof; 
	_test_eof1011: cs = 1011; goto _test_eof; 
	_test_eof1012: cs = 1012; goto _test_eof; 
	_test_eof1013: cs = 1013; goto _test_eof; 
	_test_eof1014: cs = 1014; goto _test_eof; 
	_test_eof1015: cs = 1015; goto _test_eof; 
	_test_eof1211: cs = 1211; goto _test_eof; 
	_test_eof1016: cs = 1016; goto _test_eof; 
	_test_eof1017: cs = 1017; goto _test_eof; 
	_test_eof1018: cs = 1018; goto _test_eof; 
	_test_eof1019: cs = 1019; goto _test_eof; 
	_test_eof1020: cs = 1020; goto _test_eof; 
	_test_eof1021: cs = 1021; goto _test_eof; 
	_test_eof1022: cs = 1022; goto _test_eof; 
	_test_eof1023: cs = 1023; goto _test_eof; 
	_test_eof1212: cs = 1212; goto _test_eof; 
	_test_eof1024: cs = 1024; goto _test_eof; 
	_test_eof1025: cs = 1025; goto _test_eof; 
	_test_eof1026: cs = 1026; goto _test_eof; 
	_test_eof1027: cs = 1027; goto _test_eof; 
	_test_eof1028: cs = 1028; goto _test_eof; 
	_test_eof1213: cs = 1213; goto _test_eof; 
	_test_eof1029: cs = 1029; goto _test_eof; 
	_test_eof1030: cs = 1030; goto _test_eof; 
	_test_eof1031: cs = 1031; goto _test_eof; 
	_test_eof1032: cs = 1032; goto _test_eof; 
	_test_eof1033: cs = 1033; goto _test_eof; 
	_test_eof1034: cs = 1034; goto _test_eof; 
	_test_eof1035: cs = 1035; goto _test_eof; 
	_test_eof1036: cs = 1036; goto _test_eof; 
	_test_eof1037: cs = 1037; goto _test_eof; 
	_test_eof1038: cs = 1038; goto _test_eof; 
	_test_eof1039: cs = 1039; goto _test_eof; 
	_test_eof1040: cs = 1040; goto _test_eof; 
	_test_eof1041: cs = 1041; goto _test_eof; 
	_test_eof1042: cs = 1042; goto _test_eof; 
	_test_eof1043: cs = 1043; goto _test_eof; 
	_test_eof1044: cs = 1044; goto _test_eof; 
	_test_eof1045: cs = 1045; goto _test_eof; 
	_test_eof1046: cs = 1046; goto _test_eof; 
	_test_eof1214: cs = 1214; goto _test_eof; 
	_test_eof1047: cs = 1047; goto _test_eof; 
	_test_eof1048: cs = 1048; goto _test_eof; 
	_test_eof1049: cs = 1049; goto _test_eof; 
	_test_eof1050: cs = 1050; goto _test_eof; 
	_test_eof1051: cs = 1051; goto _test_eof; 
	_test_eof1052: cs = 1052; goto _test_eof; 
	_test_eof1053: cs = 1053; goto _test_eof; 
	_test_eof1054: cs = 1054; goto _test_eof; 
	_test_eof1055: cs = 1055; goto _test_eof; 
	_test_eof1056: cs = 1056; goto _test_eof; 
	_test_eof1057: cs = 1057; goto _test_eof; 
	_test_eof1058: cs = 1058; goto _test_eof; 
	_test_eof1059: cs = 1059; goto _test_eof; 
	_test_eof1060: cs = 1060; goto _test_eof; 
	_test_eof1061: cs = 1061; goto _test_eof; 
	_test_eof1062: cs = 1062; goto _test_eof; 
	_test_eof1063: cs = 1063; goto _test_eof; 
	_test_eof1064: cs = 1064; goto _test_eof; 
	_test_eof1065: cs = 1065; goto _test_eof; 
	_test_eof1215: cs = 1215; goto _test_eof; 
	_test_eof1066: cs = 1066; goto _test_eof; 
	_test_eof1067: cs = 1067; goto _test_eof; 
	_test_eof1068: cs = 1068; goto _test_eof; 
	_test_eof1069: cs = 1069; goto _test_eof; 
	_test_eof1070: cs = 1070; goto _test_eof; 
	_test_eof1071: cs = 1071; goto _test_eof; 
	_test_eof1072: cs = 1072; goto _test_eof; 
	_test_eof1073: cs = 1073; goto _test_eof; 
	_test_eof1074: cs = 1074; goto _test_eof; 
	_test_eof1075: cs = 1075; goto _test_eof; 
	_test_eof1076: cs = 1076; goto _test_eof; 
	_test_eof1077: cs = 1077; goto _test_eof; 
	_test_eof1078: cs = 1078; goto _test_eof; 
	_test_eof1079: cs = 1079; goto _test_eof; 
	_test_eof1080: cs = 1080; goto _test_eof; 
	_test_eof1216: cs = 1216; goto _test_eof; 
	_test_eof1217: cs = 1217; goto _test_eof; 
	_test_eof1218: cs = 1218; goto _test_eof; 
	_test_eof1081: cs = 1081; goto _test_eof; 
	_test_eof1082: cs = 1082; goto _test_eof; 
	_test_eof1083: cs = 1083; goto _test_eof; 
	_test_eof1084: cs = 1084; goto _test_eof; 
	_test_eof1085: cs = 1085; goto _test_eof; 
	_test_eof1086: cs = 1086; goto _test_eof; 
	_test_eof1087: cs = 1087; goto _test_eof; 
	_test_eof1219: cs = 1219; goto _test_eof; 
	_test_eof1088: cs = 1088; goto _test_eof; 
	_test_eof1089: cs = 1089; goto _test_eof; 
	_test_eof1090: cs = 1090; goto _test_eof; 
	_test_eof1091: cs = 1091; goto _test_eof; 
	_test_eof1092: cs = 1092; goto _test_eof; 
	_test_eof1093: cs = 1093; goto _test_eof; 
	_test_eof1094: cs = 1094; goto _test_eof; 
	_test_eof1095: cs = 1095; goto _test_eof; 
	_test_eof1096: cs = 1096; goto _test_eof; 
	_test_eof1097: cs = 1097; goto _test_eof; 
	_test_eof1098: cs = 1098; goto _test_eof; 
	_test_eof1099: cs = 1099; goto _test_eof; 
	_test_eof1100: cs = 1100; goto _test_eof; 
	_test_eof1220: cs = 1220; goto _test_eof; 
	_test_eof1101: cs = 1101; goto _test_eof; 
	_test_eof1102: cs = 1102; goto _test_eof; 
	_test_eof1103: cs = 1103; goto _test_eof; 
	_test_eof1104: cs = 1104; goto _test_eof; 
	_test_eof1105: cs = 1105; goto _test_eof; 
	_test_eof1106: cs = 1106; goto _test_eof; 
	_test_eof1107: cs = 1107; goto _test_eof; 
	_test_eof1221: cs = 1221; goto _test_eof; 
	_test_eof1108: cs = 1108; goto _test_eof; 
	_test_eof1109: cs = 1109; goto _test_eof; 
	_test_eof1110: cs = 1110; goto _test_eof; 
	_test_eof1111: cs = 1111; goto _test_eof; 
	_test_eof1112: cs = 1112; goto _test_eof; 
	_test_eof1113: cs = 1113; goto _test_eof; 
	_test_eof1222: cs = 1222; goto _test_eof; 
	_test_eof1114: cs = 1114; goto _test_eof; 
	_test_eof1115: cs = 1115; goto _test_eof; 
	_test_eof1116: cs = 1116; goto _test_eof; 
	_test_eof1117: cs = 1117; goto _test_eof; 
	_test_eof1118: cs = 1118; goto _test_eof; 
	_test_eof1119: cs = 1119; goto _test_eof; 
	_test_eof1223: cs = 1223; goto _test_eof; 
	_test_eof1120: cs = 1120; goto _test_eof; 
	_test_eof1121: cs = 1121; goto _test_eof; 
	_test_eof1122: cs = 1122; goto _test_eof; 
	_test_eof1123: cs = 1123; goto _test_eof; 
	_test_eof1124: cs = 1124; goto _test_eof; 
	_test_eof1125: cs = 1125; goto _test_eof; 
	_test_eof1126: cs = 1126; goto _test_eof; 
	_test_eof1127: cs = 1127; goto _test_eof; 
	_test_eof1224: cs = 1224; goto _test_eof; 
	_test_eof1128: cs = 1128; goto _test_eof; 
	_test_eof1129: cs = 1129; goto _test_eof; 
	_test_eof1130: cs = 1130; goto _test_eof; 
	_test_eof1131: cs = 1131; goto _test_eof; 
	_test_eof1132: cs = 1132; goto _test_eof; 
	_test_eof1133: cs = 1133; goto _test_eof; 
	_test_eof1134: cs = 1134; goto _test_eof; 
	_test_eof1135: cs = 1135; goto _test_eof; 
	_test_eof1225: cs = 1225; goto _test_eof; 
	_test_eof1136: cs = 1136; goto _test_eof; 
	_test_eof1137: cs = 1137; goto _test_eof; 

	_test_eof: {}
	if ( p == eof )
	{
	switch ( cs ) {
	case 7: 
	case 8: 
	case 152: 
	case 176: 
	case 178: 
	case 228: 
	case 242: 
	case 265: 
	case 319: 
	case 320: 
	case 326: 
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 271: 
	case 272: 
	case 273: 
	case 278: 
	case 279: 
#line 226 "scanner_body.rl"
	{
		WARN(ZS_BAD_DNAME_CHAR);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 161: 
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 287: 
#line 563 "scanner_body.rl"
	{
		WARN(ZS_BAD_TEXT);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 292: 
	case 300: 
#line 656 "scanner_body.rl"
	{
		ERR(ZS_BAD_TTL);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 301: 
	case 302: 
	case 303: 
	case 312: 
#line 673 "scanner_body.rl"
	{
		ERR(ZS_BAD_ORIGIN);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 314: 
#line 701 "scanner_body.rl"
	{
		ERR(ZS_BAD_INCLUDE_FILENAME);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 317: 
	case 327: 
#line 712 "scanner_body.rl"
	{
		ERR(ZS_BAD_INCLUDE_ORIGIN);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 1142: 
#line 793 "scanner_body.rl"
	{
		NOERR;
	}
	break;
	case 153: 
	case 154: 
	case 155: 
	case 156: 
	case 157: 
	case 158: 
	case 159: 
	case 160: 
	case 196: 
	case 197: 
	case 198: 
	case 199: 
	case 200: 
	case 201: 
	case 202: 
	case 203: 
	case 204: 
#line 796 "scanner_body.rl"
	{
		ERR(ZS_BAD_DIRECTIVE);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 330: 
	case 331: 
	case 332: 
	case 333: 
	case 334: 
	case 335: 
	case 336: 
#line 1040 "scanner_body.rl"
	{
		WARN(ZS_BAD_BASE64_CHAR);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 337: 
	case 338: 
	case 339: 
	case 340: 
	case 341: 
	case 342: 
	case 343: 
	case 344: 
	case 345: 
	case 346: 
	case 347: 
	case 348: 
	case 349: 
	case 350: 
	case 351: 
	case 352: 
	case 353: 
	case 354: 
	case 355: 
	case 356: 
	case 357: 
	case 358: 
	case 359: 
	case 360: 
	case 361: 
	case 362: 
	case 363: 
	case 364: 
	case 365: 
	case 366: 
	case 367: 
	case 368: 
	case 369: 
	case 370: 
	case 371: 
	case 372: 
	case 373: 
	case 374: 
	case 375: 
	case 376: 
	case 377: 
	case 378: 
	case 379: 
	case 380: 
	case 381: 
	case 382: 
	case 383: 
	case 384: 
	case 385: 
	case 386: 
	case 387: 
	case 388: 
	case 389: 
	case 390: 
	case 391: 
	case 392: 
	case 393: 
	case 394: 
	case 395: 
	case 396: 
	case 397: 
	case 398: 
	case 399: 
	case 400: 
	case 401: 
	case 402: 
	case 403: 
	case 404: 
	case 405: 
	case 406: 
	case 407: 
	case 408: 
	case 409: 
	case 410: 
	case 411: 
	case 412: 
	case 413: 
	case 414: 
	case 415: 
	case 416: 
	case 417: 
	case 418: 
	case 419: 
	case 420: 
	case 421: 
	case 422: 
	case 423: 
	case 424: 
	case 425: 
	case 426: 
	case 427: 
	case 428: 
	case 429: 
	case 430: 
	case 431: 
	case 432: 
	case 433: 
	case 434: 
	case 435: 
	case 436: 
	case 437: 
	case 438: 
	case 439: 
	case 440: 
	case 441: 
	case 442: 
	case 443: 
	case 444: 
	case 445: 
	case 446: 
	case 447: 
	case 448: 
	case 449: 
	case 450: 
	case 451: 
	case 452: 
	case 453: 
	case 454: 
	case 455: 
	case 456: 
	case 457: 
	case 458: 
	case 459: 
	case 460: 
	case 461: 
	case 462: 
	case 463: 
	case 464: 
	case 465: 
	case 466: 
	case 467: 
	case 468: 
	case 469: 
#line 1416 "scanner_body.rl"
	{
		WARN(ZS_BAD_BITMAP);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 470: 
	case 477: 
	case 478: 
	case 479: 
	case 486: 
	case 488: 
#line 1582 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 489: 
	case 490: 
	case 491: 
	case 492: 
	case 493: 
	case 494: 
	case 495: 
	case 496: 
	case 497: 
	case 498: 
	case 499: 
	case 500: 
	case 501: 
	case 502: 
	case 503: 
	case 504: 
	case 505: 
	case 506: 
	case 507: 
	case 508: 
	case 509: 
	case 510: 
	case 511: 
	case 512: 
	case 513: 
	case 514: 
	case 515: 
	case 516: 
	case 517: 
	case 518: 
	case 519: 
	case 520: 
	case 521: 
	case 522: 
	case 523: 
	case 524: 
	case 525: 
	case 526: 
	case 527: 
	case 528: 
	case 529: 
	case 530: 
	case 531: 
	case 532: 
	case 533: 
	case 534: 
	case 535: 
	case 536: 
	case 537: 
	case 538: 
	case 539: 
	case 540: 
	case 541: 
	case 542: 
	case 543: 
	case 544: 
	case 545: 
	case 546: 
	case 547: 
	case 548: 
	case 549: 
	case 550: 
	case 551: 
	case 552: 
	case 553: 
	case 554: 
	case 555: 
	case 556: 
	case 557: 
	case 558: 
	case 559: 
	case 560: 
	case 561: 
	case 562: 
	case 563: 
	case 564: 
	case 565: 
	case 566: 
	case 567: 
	case 568: 
	case 569: 
	case 570: 
	case 571: 
	case 572: 
	case 573: 
	case 574: 
	case 575: 
	case 576: 
	case 577: 
	case 578: 
	case 579: 
	case 580: 
	case 581: 
	case 582: 
	case 583: 
	case 584: 
	case 585: 
	case 586: 
	case 587: 
	case 588: 
	case 589: 
	case 590: 
	case 591: 
	case 592: 
#line 1658 "scanner_body.rl"
	{
		WARN(ZS_BAD_ALGORITHM);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 593: 
	case 594: 
	case 595: 
	case 596: 
	case 597: 
	case 598: 
	case 599: 
	case 600: 
	case 601: 
	case 602: 
	case 603: 
	case 604: 
	case 605: 
	case 606: 
	case 607: 
	case 608: 
	case 609: 
	case 610: 
	case 611: 
	case 612: 
	case 613: 
	case 614: 
	case 615: 
	case 616: 
	case 617: 
	case 618: 
	case 619: 
	case 620: 
	case 621: 
	case 622: 
	case 623: 
	case 624: 
	case 625: 
	case 626: 
	case 627: 
	case 628: 
	case 629: 
	case 630: 
	case 631: 
	case 632: 
	case 633: 
#line 1662 "scanner_body.rl"
	{
		WARN(ZS_BAD_CERT_TYPE);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 5: 
	case 9: 
	case 10: 
	case 247: 
	case 636: 
	case 637: 
	case 638: 
	case 639: 
	case 640: 
	case 641: 
	case 655: 
	case 659: 
	case 663: 
	case 667: 
	case 668: 
	case 669: 
	case 670: 
	case 671: 
	case 672: 
	case 673: 
	case 674: 
	case 675: 
	case 676: 
	case 677: 
	case 678: 
	case 679: 
	case 682: 
	case 683: 
	case 684: 
	case 752: 
	case 753: 
	case 754: 
	case 755: 
	case 756: 
	case 761: 
	case 762: 
	case 763: 
	case 764: 
	case 765: 
	case 766: 
	case 767: 
	case 768: 
	case 769: 
	case 770: 
	case 771: 
	case 772: 
	case 773: 
	case 774: 
	case 775: 
	case 778: 
	case 779: 
	case 780: 
	case 781: 
	case 782: 
	case 783: 
	case 784: 
	case 792: 
	case 798: 
	case 799: 
	case 806: 
	case 807: 
	case 808: 
	case 817: 
	case 818: 
	case 857: 
	case 860: 
	case 861: 
	case 872: 
	case 873: 
	case 874: 
	case 875: 
	case 876: 
	case 877: 
	case 878: 
	case 879: 
	case 880: 
	case 881: 
	case 882: 
	case 883: 
	case 1013: 
	case 1014: 
	case 1015: 
	case 1020: 
	case 1021: 
	case 1022: 
	case 1023: 
	case 1024: 
	case 1025: 
	case 1026: 
	case 1027: 
	case 1028: 
	case 1046: 
	case 1052: 
	case 1055: 
	case 1056: 
	case 1057: 
	case 1068: 
	case 1069: 
	case 1070: 
	case 1081: 
	case 1082: 
	case 1083: 
	case 1088: 
	case 1101: 
	case 1118: 
	case 1119: 
	case 1120: 
	case 1121: 
	case 1124: 
	case 1125: 
	case 1126: 
	case 1127: 
	case 1128: 
	case 1129: 
	case 1132: 
	case 1133: 
	case 1134: 
	case 1135: 
	case 1136: 
	case 1137: 
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 3: 
	case 17: 
	case 18: 
	case 22: 
	case 23: 
	case 24: 
	case 25: 
	case 26: 
	case 29: 
	case 30: 
	case 32: 
	case 33: 
	case 34: 
	case 36: 
	case 37: 
	case 38: 
	case 39: 
	case 41: 
	case 42: 
	case 43: 
	case 45: 
	case 46: 
	case 47: 
	case 50: 
	case 51: 
	case 52: 
	case 53: 
	case 55: 
	case 57: 
	case 58: 
	case 59: 
	case 60: 
	case 62: 
	case 63: 
	case 64: 
	case 65: 
	case 66: 
	case 67: 
	case 68: 
	case 69: 
	case 70: 
	case 71: 
	case 73: 
	case 74: 
	case 77: 
	case 78: 
	case 80: 
	case 83: 
	case 86: 
	case 87: 
	case 88: 
	case 89: 
	case 92: 
	case 93: 
	case 94: 
	case 95: 
	case 97: 
	case 100: 
	case 103: 
	case 104: 
	case 105: 
	case 106: 
	case 108: 
	case 109: 
	case 111: 
	case 113: 
	case 114: 
	case 115: 
	case 118: 
	case 119: 
	case 121: 
	case 123: 
	case 125: 
	case 126: 
	case 127: 
	case 129: 
	case 130: 
	case 131: 
	case 133: 
	case 135: 
	case 136: 
	case 139: 
	case 140: 
	case 142: 
	case 144: 
	case 145: 
	case 151: 
	case 166: 
	case 170: 
	case 231: 
	case 232: 
	case 234: 
	case 235: 
	case 236: 
	case 238: 
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 295: 
	case 296: 
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 656 "scanner_body.rl"
	{
		ERR(ZS_BAD_TTL);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 304: 
	case 305: 
	case 306: 
	case 311: 
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 673 "scanner_body.rl"
	{
		ERR(ZS_BAD_ORIGIN);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 274: 
	case 275: 
	case 276: 
	case 277: 
#line 177 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 226 "scanner_body.rl"
	{
		WARN(ZS_BAD_DNAME_CHAR);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 307: 
	case 308: 
	case 309: 
	case 310: 
#line 177 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 673 "scanner_body.rl"
	{
		ERR(ZS_BAD_ORIGIN);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 321: 
	case 322: 
	case 323: 
	case 324: 
#line 177 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 712 "scanner_body.rl"
	{
		ERR(ZS_BAD_INCLUDE_ORIGIN);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 225: 
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 251: 
	case 252: 
	case 253: 
	case 254: 
	case 255: 
	case 256: 
	case 257: 
	case 258: 
	case 259: 
	case 260: 
	case 261: 
	case 262: 
	case 263: 
	case 264: 
	case 267: 
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 293: 
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 656 "scanner_body.rl"
	{
		ERR(ZS_BAD_TTL);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 471: 
	case 472: 
	case 480: 
	case 481: 
	case 487: 
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1582 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 642: 
	case 643: 
	case 644: 
	case 646: 
	case 648: 
	case 650: 
	case 680: 
	case 681: 
	case 746: 
	case 747: 
	case 748: 
	case 749: 
	case 750: 
	case 751: 
	case 757: 
	case 758: 
	case 759: 
	case 760: 
	case 776: 
	case 777: 
	case 796: 
	case 797: 
	case 800: 
	case 801: 
	case 809: 
	case 810: 
	case 811: 
	case 812: 
	case 819: 
	case 820: 
	case 862: 
	case 863: 
	case 864: 
	case 865: 
	case 870: 
	case 871: 
	case 1016: 
	case 1017: 
	case 1018: 
	case 1019: 
	case 1029: 
	case 1030: 
	case 1031: 
	case 1032: 
	case 1033: 
	case 1034: 
	case 1058: 
	case 1059: 
	case 1060: 
	case 1061: 
	case 1062: 
	case 1063: 
	case 1071: 
	case 1072: 
	case 1073: 
	case 1074: 
	case 1075: 
	case 1076: 
	case 1084: 
	case 1085: 
	case 1089: 
	case 1090: 
	case 1114: 
	case 1115: 
	case 1116: 
	case 1117: 
	case 1122: 
	case 1123: 
	case 1130: 
	case 1131: 
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 137: 
	case 146: 
	case 162: 
	case 165: 
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 866: 
	case 867: 
	case 868: 
	case 869: 
#line 527 "scanner_body.rl"
	{
		WARN(ZS_BAD_TIMESTAMP_CHAR);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 280: 
	case 281: 
	case 286: 
#line 559 "scanner_body.rl"
	{
		WARN(ZS_BAD_TEXT_CHAR);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 563 "scanner_body.rl"
	{
		WARN(ZS_BAD_TEXT);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 685: 
	case 686: 
	case 687: 
	case 688: 
#line 637 "scanner_body.rl"
	{
		s->long_string = false;
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 315: 
#line 701 "scanner_body.rl"
	{
		ERR(ZS_BAD_INCLUDE_FILENAME);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 316: 
	case 318: 
	case 325: 
#line 712 "scanner_body.rl"
	{
		ERR(ZS_BAD_INCLUDE_ORIGIN);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 634: 
	case 635: 
	case 689: 
	case 690: 
	case 1086: 
	case 1087: 
#line 847 "scanner_body.rl"
	{
		WARN(ZS_BAD_ADDRESS_CHAR);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 785: 
	case 786: 
	case 787: 
	case 790: 
	case 791: 
	case 793: 
#line 947 "scanner_body.rl"
	{
		WARN(ZS_BAD_APL);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 802: 
	case 803: 
	case 804: 
	case 805: 
	case 813: 
	case 814: 
	case 815: 
	case 816: 
	case 1035: 
	case 1036: 
	case 1053: 
	case 1054: 
	case 1064: 
	case 1065: 
	case 1066: 
	case 1067: 
	case 1077: 
	case 1078: 
	case 1079: 
	case 1080: 
	case 1091: 
	case 1092: 
	case 1093: 
	case 1094: 
	case 1096: 
	case 1097: 
	case 1098: 
	case 1099: 
	case 1102: 
	case 1103: 
	case 1105: 
	case 1106: 
	case 1108: 
	case 1109: 
	case 1111: 
	case 1112: 
#line 977 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_CHAR);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 1037: 
	case 1038: 
	case 1039: 
	case 1040: 
	case 1041: 
	case 1042: 
	case 1043: 
	case 1044: 
	case 1045: 
	case 1047: 
	case 1048: 
	case 1049: 
	case 1050: 
	case 1051: 
#line 1124 "scanner_body.rl"
	{
		WARN(ZS_BAD_BASE32HEX_CHAR);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 821: 
	case 822: 
	case 825: 
	case 834: 
	case 835: 
	case 836: 
	case 841: 
	case 842: 
	case 843: 
	case 848: 
	case 849: 
	case 850: 
	case 853: 
	case 855: 
	case 856: 
#line 1254 "scanner_body.rl"
	{
		WARN(ZS_BAD_GATEWAY);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 827: 
	case 828: 
	case 829: 
	case 830: 
	case 831: 
	case 832: 
	case 833: 
#line 1258 "scanner_body.rl"
	{
		WARN(ZS_BAD_GATEWAY_KEY);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 858: 
	case 859: 
	case 884: 
	case 885: 
	case 886: 
	case 887: 
	case 888: 
	case 889: 
	case 890: 
	case 891: 
	case 892: 
	case 893: 
	case 894: 
	case 895: 
	case 896: 
	case 897: 
	case 898: 
	case 899: 
	case 900: 
	case 901: 
	case 902: 
	case 903: 
	case 904: 
	case 905: 
	case 906: 
	case 907: 
	case 908: 
	case 909: 
	case 910: 
	case 911: 
	case 912: 
	case 913: 
	case 914: 
	case 915: 
	case 916: 
	case 917: 
	case 918: 
	case 919: 
	case 920: 
	case 921: 
	case 922: 
	case 923: 
	case 924: 
	case 925: 
	case 926: 
	case 927: 
	case 928: 
	case 929: 
	case 930: 
	case 931: 
	case 932: 
	case 933: 
	case 934: 
	case 935: 
	case 936: 
	case 937: 
	case 938: 
	case 939: 
	case 940: 
	case 941: 
	case 942: 
	case 943: 
	case 944: 
	case 945: 
	case 946: 
	case 947: 
	case 948: 
	case 949: 
	case 950: 
	case 951: 
	case 952: 
	case 953: 
	case 954: 
	case 955: 
	case 956: 
	case 957: 
	case 958: 
	case 959: 
	case 960: 
	case 961: 
	case 962: 
	case 963: 
	case 964: 
	case 965: 
	case 966: 
	case 967: 
	case 968: 
	case 969: 
	case 970: 
	case 971: 
	case 972: 
	case 973: 
	case 974: 
	case 975: 
	case 976: 
	case 977: 
	case 978: 
	case 979: 
	case 980: 
	case 981: 
	case 982: 
	case 983: 
	case 984: 
	case 985: 
	case 986: 
	case 987: 
	case 988: 
	case 989: 
	case 990: 
	case 991: 
	case 992: 
	case 993: 
	case 994: 
	case 995: 
	case 996: 
	case 997: 
	case 998: 
	case 999: 
	case 1000: 
	case 1001: 
	case 1002: 
	case 1003: 
	case 1004: 
	case 1005: 
	case 1006: 
	case 1007: 
	case 1010: 
	case 1011: 
	case 1012: 
#line 1276 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 691: 
	case 692: 
	case 693: 
	case 694: 
	case 695: 
	case 696: 
	case 697: 
	case 698: 
	case 699: 
	case 700: 
	case 701: 
	case 702: 
	case 703: 
	case 704: 
	case 705: 
	case 706: 
	case 707: 
	case 708: 
	case 709: 
	case 710: 
	case 711: 
	case 712: 
	case 713: 
	case 714: 
	case 715: 
	case 716: 
	case 717: 
	case 718: 
	case 719: 
	case 720: 
	case 721: 
	case 722: 
	case 723: 
	case 724: 
	case 725: 
	case 726: 
	case 727: 
	case 728: 
	case 729: 
	case 730: 
	case 731: 
	case 732: 
	case 733: 
	case 734: 
	case 735: 
	case 736: 
	case 737: 
	case 738: 
	case 739: 
	case 740: 
	case 741: 
	case 742: 
	case 743: 
	case 744: 
	case 745: 
#line 1569 "scanner_body.rl"
	{
		WARN(ZS_BAD_LOC_DATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 6: 
	case 11: 
	case 12: 
	case 13: 
	case 20: 
	case 21: 
	case 174: 
	case 177: 
	case 194: 
	case 227: 
	case 229: 
	case 230: 
	case 240: 
	case 241: 
	case 243: 
	case 244: 
	case 245: 
	case 246: 
	case 249: 
	case 250: 
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 16: 
	case 208: 
	case 266: 
	case 268: 
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 4: 
	case 19: 
	case 27: 
	case 28: 
	case 31: 
	case 35: 
	case 40: 
	case 44: 
	case 48: 
	case 49: 
	case 54: 
	case 56: 
	case 61: 
	case 72: 
	case 75: 
	case 76: 
	case 79: 
	case 81: 
	case 82: 
	case 84: 
	case 85: 
	case 90: 
	case 91: 
	case 96: 
	case 98: 
	case 99: 
	case 101: 
	case 102: 
	case 107: 
	case 110: 
	case 112: 
	case 116: 
	case 117: 
	case 120: 
	case 122: 
	case 124: 
	case 128: 
	case 132: 
	case 134: 
	case 141: 
	case 233: 
	case 237: 
	case 239: 
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 205: 
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 171: 
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 823: 
	case 824: 
	case 837: 
	case 838: 
	case 844: 
	case 845: 
	case 851: 
	case 852: 
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1254 "scanner_body.rl"
	{
		WARN(ZS_BAD_GATEWAY);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 1008: 
	case 1009: 
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1276 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 1: 
	case 143: 
	case 175: 
	case 207: 
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 138: 
	case 172: 
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 298: 
#line 422 "scanner_body.rl"
	{
		WARN(ZS_BAD_TIME_UNIT);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 656 "scanner_body.rl"
	{
		ERR(ZS_BAD_TTL);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 645: 
	case 647: 
	case 649: 
	case 651: 
	case 652: 
	case 653: 
	case 654: 
	case 656: 
	case 657: 
	case 658: 
	case 660: 
	case 661: 
	case 662: 
	case 664: 
	case 665: 
	case 666: 
#line 422 "scanner_body.rl"
	{
		WARN(ZS_BAD_TIME_UNIT);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 2: 
	case 147: 
	case 148: 
	case 149: 
	case 150: 
	case 167: 
	case 168: 
	case 169: 
#line 422 "scanner_body.rl"
	{
		WARN(ZS_BAD_TIME_UNIT);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 282: 
	case 283: 
	case 284: 
	case 285: 
	case 288: 
	case 289: 
	case 290: 
	case 291: 
#line 607 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 559 "scanner_body.rl"
	{
		WARN(ZS_BAD_TEXT_CHAR);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 563 "scanner_body.rl"
	{
		WARN(ZS_BAD_TEXT);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 788: 
	case 789: 
	case 794: 
	case 795: 
#line 847 "scanner_body.rl"
	{
		WARN(ZS_BAD_ADDRESS_CHAR);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 947 "scanner_body.rl"
	{
		WARN(ZS_BAD_APL);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 839: 
	case 846: 
#line 847 "scanner_body.rl"
	{
		WARN(ZS_BAD_ADDRESS_CHAR);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1254 "scanner_body.rl"
	{
		WARN(ZS_BAD_GATEWAY);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 473: 
	case 474: 
	case 475: 
	case 476: 
	case 482: 
	case 483: 
	case 484: 
	case 485: 
#line 977 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_CHAR);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 998 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1582 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 1095: 
#line 977 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_CHAR);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1645 "scanner_body.rl"
	{
		WARN(ZS_BAD_CHAR_COLON);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 826: 
	case 854: 
#line 1254 "scanner_body.rl"
	{
		WARN(ZS_BAD_GATEWAY);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1258 "scanner_body.rl"
	{
		WARN(ZS_BAD_GATEWAY_KEY);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 1104: 
	case 1107: 
	case 1110: 
	case 1113: 
#line 1618 "scanner_body.rl"
	{
		WARN(ZS_BAD_CHAR_DASH);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 977 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_CHAR);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 1100: 
#line 1645 "scanner_body.rl"
	{
		WARN(ZS_BAD_CHAR_COLON);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 977 "scanner_body.rl"
	{
		WARN(ZS_BAD_HEX_CHAR);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 195: 
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 796 "scanner_body.rl"
	{
		ERR(ZS_BAD_DIRECTIVE);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 173: 
	case 180: 
	case 181: 
	case 182: 
	case 183: 
	case 184: 
	case 185: 
	case 186: 
	case 187: 
	case 188: 
	case 189: 
	case 190: 
	case 191: 
	case 192: 
	case 193: 
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 164: 
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 422 "scanner_body.rl"
	{
		WARN(ZS_BAD_TIME_UNIT);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 209: 
	case 211: 
	case 212: 
	case 213: 
	case 214: 
	case 215: 
	case 216: 
	case 217: 
	case 218: 
	case 219: 
	case 220: 
	case 221: 
	case 222: 
	case 223: 
	case 224: 
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 14: 
	case 179: 
	case 210: 
	case 226: 
	case 248: 
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 294: 
	case 297: 
	case 299: 
#line 422 "scanner_body.rl"
	{
		WARN(ZS_BAD_TIME_UNIT);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 656 "scanner_body.rl"
	{
		ERR(ZS_BAD_TTL);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 840: 
	case 847: 
#line 847 "scanner_body.rl"
	{
		WARN(ZS_BAD_ADDRESS_CHAR);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1254 "scanner_body.rl"
	{
		WARN(ZS_BAD_GATEWAY);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1258 "scanner_body.rl"
	{
		WARN(ZS_BAD_GATEWAY_KEY);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 15: 
#line 422 "scanner_body.rl"
	{
		WARN(ZS_BAD_TIME_UNIT);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
	case 206: 
#line 276 "scanner_body.rl"
	{
		s->r_owner_length = 0;
		WARN(ZS_BAD_OWNER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 422 "scanner_body.rl"
	{
		WARN(ZS_BAD_TIME_UNIT);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 319 "scanner_body.rl"
	{
		WARN(ZS_BAD_NUMBER);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1994 "scanner_body.rl"
	{
		WARN(ZS_UNSUPPORTED_TYPE);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 1708 "scanner_body.rl"
	{
		WARN(ZS_BAD_RDATA);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
#line 57 "scanner_body.rl"
	{
		WARN(ZS_BAD_REST);
		p--; {       if ( p == pe )
               goto _test_eof269;
goto st269;}
	}
	break;
#line 93572 "scanner.c"
	}
	}

	_out: {}
	}

#line 361 "scanner.rl"

	// Check if the scanner state machine is in an uncovered state.
	bool extra_error = false;
	if (cs == 0) {
		ERR(ZS_UNCOVERED_STATE);
		extra_error = true;
	// Check for an unclosed multiline record.
	} else if (s->input.eof && s->multiline) {
		ERR(ZS_UNCLOSED_MULTILINE);
		extra_error = true;
	}

	// Treat the extra error.
	if (extra_error) {
		s->error.counter++;
		s->state = ZS_STATE_ERROR;

		// Copy the error context just for the part of the current line.
		s->buffer_length = 0;
		while (p < pe && *p != '\n' && s->buffer_length < 50) {
			s->buffer[s->buffer_length++] = *p++;
		}
		s->buffer[s->buffer_length++] = 0;

		// Execute the error callback.
		if (s->process.automatic && s->process.error != NULL) {
			s->process.error(s);
		}

		return;
	}

	// Storing scanner states.
	s->cs  = cs;
	s->top = top;
	memcpy(s->stack, stack, sizeof(stack));

	// Store the current parser position.
	s->input.current = p;

	// Storing r_data pointer.
	s->r_data_tail = rdata_tail - s->r_data;

	if (*wrap == WRAP_DETECTED) {
		if (set_input_string(s, "\\", 1, true) != 0) {
			return;
		}

		*wrap = WRAP_PROCESS;
		parse(s, wrap);
	} else {
		*wrap = WRAP_NONE;
	}
}

__attribute__((visibility("default")))
int zs_parse_record(
	zs_scanner_t *s)
{
	if (s == NULL) {
		return -1;
	}

	// Check if parsing is possible.
	switch (s->state) {
	case ZS_STATE_NONE:
	case ZS_STATE_DATA:
	case ZS_STATE_INCLUDE:
		break;
	case ZS_STATE_ERROR:
		if (s->error.fatal) {
			return -1;
		}
		break;
	default:
		// Return if stop or end of file.
		return 0;
	}

	// Check for the end of the input.
	if (s->input.current != s->input.end) {
		// Try to parse another item.
		s->state = ZS_STATE_NONE;
		wrap_t wrap = WRAP_NONE;
		parse(s, &wrap);

		// Finish if nothing was parsed.
		if (s->state == ZS_STATE_NONE) {
			// Parse the final block.
			if (set_input_string(s, "\n", 1, true) != 0) {
				return -1;
			}
			parse(s, &wrap);
			if (s->state == ZS_STATE_NONE) {
				s->state = ZS_STATE_EOF;
			}
		}
	} else {
		s->state = ZS_STATE_EOF;
	}

	return 0;
}

__attribute__((visibility("default")))
int zs_parse_all(
	zs_scanner_t *s)
{
	if (s == NULL) {
		return -1;
	}

	s->process.automatic = true;

	// Parse input block.
	wrap_t wrap = WRAP_NONE;
	parse(s, &wrap);

	// Parse trailing newline-char block if it makes sense.
	if (s->state != ZS_STATE_STOP && !s->error.fatal) {
		if (set_input_string(s, "\n", 1, true) != 0) {
			return -1;
		}
		parse(s, &wrap);
	}

	// Check if any errors have occurred.
	if (s->error.counter > 0) {
		return -1;
	}

	return 0;
}
